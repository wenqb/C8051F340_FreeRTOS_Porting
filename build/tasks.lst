                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module tasks
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uxTopUsedPriority
                                     12 	.globl _uxListRemove
                                     13 	.globl _vListInsertEnd
                                     14 	.globl _vListInsert
                                     15 	.globl _vListInitialiseItem
                                     16 	.globl _vListInitialise
                                     17 	.globl _vPortEndScheduler
                                     18 	.globl _xPortStartScheduler
                                     19 	.globl _vPortFree
                                     20 	.globl _pvPortMalloc
                                     21 	.globl _pxPortInitialiseStack
                                     22 	.globl _vPortYield
                                     23 	.globl _memset
                                     24 	.globl _SPIF
                                     25 	.globl _WCOL
                                     26 	.globl _MODF
                                     27 	.globl _RXOVRN
                                     28 	.globl _NSSMD1
                                     29 	.globl _NSSMD0
                                     30 	.globl _TXBMT
                                     31 	.globl _SPIEN
                                     32 	.globl _AD0EN
                                     33 	.globl _AD0TM
                                     34 	.globl _AD0INT
                                     35 	.globl _AD0BUSY
                                     36 	.globl _AD0WINT
                                     37 	.globl _AD0CM2
                                     38 	.globl _AD0CM1
                                     39 	.globl _AD0CM0
                                     40 	.globl _CF
                                     41 	.globl _CR
                                     42 	.globl _CCF4
                                     43 	.globl _CCF3
                                     44 	.globl _CCF2
                                     45 	.globl _CCF1
                                     46 	.globl _CCF0
                                     47 	.globl _CY
                                     48 	.globl _AC
                                     49 	.globl _F0
                                     50 	.globl _RS1
                                     51 	.globl _RS0
                                     52 	.globl _OV
                                     53 	.globl _F1
                                     54 	.globl _PARITY
                                     55 	.globl _TF2H
                                     56 	.globl _TF2
                                     57 	.globl _TF2L
                                     58 	.globl _TF2LEN
                                     59 	.globl _T2CE
                                     60 	.globl _T2SPLIT
                                     61 	.globl _TR2
                                     62 	.globl _T2CSS
                                     63 	.globl _T2XCLK
                                     64 	.globl _MASTER
                                     65 	.globl _TXMODE
                                     66 	.globl _STA
                                     67 	.globl _STO
                                     68 	.globl _ACKRQ
                                     69 	.globl _ARBLOST
                                     70 	.globl _ACK
                                     71 	.globl _SI
                                     72 	.globl _PSPI0
                                     73 	.globl _PT2
                                     74 	.globl _PS0
                                     75 	.globl _PS
                                     76 	.globl _PT1
                                     77 	.globl _PX1
                                     78 	.globl _PT0
                                     79 	.globl _PX0
                                     80 	.globl _P3_7
                                     81 	.globl _P3_6
                                     82 	.globl _P3_5
                                     83 	.globl _P3_4
                                     84 	.globl _P3_3
                                     85 	.globl _P3_2
                                     86 	.globl _P3_1
                                     87 	.globl _P3_0
                                     88 	.globl _EA
                                     89 	.globl _ESPI0
                                     90 	.globl _ET2
                                     91 	.globl _ES0
                                     92 	.globl _ES
                                     93 	.globl _ET1
                                     94 	.globl _EX1
                                     95 	.globl _ET0
                                     96 	.globl _EX0
                                     97 	.globl _P2_7
                                     98 	.globl _P2_6
                                     99 	.globl _P2_5
                                    100 	.globl _P2_4
                                    101 	.globl _P2_3
                                    102 	.globl _P2_2
                                    103 	.globl _P2_1
                                    104 	.globl _P2_0
                                    105 	.globl _S0MODE
                                    106 	.globl _SM0
                                    107 	.globl _MCE0
                                    108 	.globl _SM2
                                    109 	.globl _REN0
                                    110 	.globl _REN
                                    111 	.globl _TB80
                                    112 	.globl _TB8
                                    113 	.globl _RB80
                                    114 	.globl _RB8
                                    115 	.globl _TI0
                                    116 	.globl _TI
                                    117 	.globl _RI0
                                    118 	.globl _RI
                                    119 	.globl _P1_7
                                    120 	.globl _P1_6
                                    121 	.globl _P1_5
                                    122 	.globl _P1_4
                                    123 	.globl _P1_3
                                    124 	.globl _P1_2
                                    125 	.globl _P1_1
                                    126 	.globl _P1_0
                                    127 	.globl _TF1
                                    128 	.globl _TR1
                                    129 	.globl _TF0
                                    130 	.globl _TR0
                                    131 	.globl _IE1
                                    132 	.globl _IT1
                                    133 	.globl _IE0
                                    134 	.globl _IT0
                                    135 	.globl _P0_7
                                    136 	.globl _P0_6
                                    137 	.globl _P0_5
                                    138 	.globl _P0_4
                                    139 	.globl _P0_3
                                    140 	.globl _P0_2
                                    141 	.globl _P0_1
                                    142 	.globl _P0_0
                                    143 	.globl _PCA0CP4
                                    144 	.globl _PCA0CP3
                                    145 	.globl _PCA0CP2
                                    146 	.globl _PCA0CP1
                                    147 	.globl _PCA0CP0
                                    148 	.globl _PCA0
                                    149 	.globl _ADC0LT
                                    150 	.globl _ADC0GT
                                    151 	.globl _ADC0
                                    152 	.globl _SBRL1
                                    153 	.globl _TMR3RL
                                    154 	.globl _TMR3
                                    155 	.globl _TMR2RL
                                    156 	.globl _RCAP2
                                    157 	.globl _TMR2
                                    158 	.globl _TMR1
                                    159 	.globl _TMR0
                                    160 	.globl _VDM0CN
                                    161 	.globl _PCA0CPH4
                                    162 	.globl _PCA0CPL4
                                    163 	.globl _PCA0CPH0
                                    164 	.globl _PCA0CPL0
                                    165 	.globl _PCA0H
                                    166 	.globl _PCA0L
                                    167 	.globl _SPI0CN
                                    168 	.globl _EIP2
                                    169 	.globl _EIP1
                                    170 	.globl _P4MDIN
                                    171 	.globl _P3MDIN
                                    172 	.globl _P3MODE
                                    173 	.globl _P2MDIN
                                    174 	.globl _P2MODE
                                    175 	.globl _P1MDIN
                                    176 	.globl _P1MODE
                                    177 	.globl _P0MDIN
                                    178 	.globl _P0MODE
                                    179 	.globl _B
                                    180 	.globl _RSTSRC
                                    181 	.globl _PCA0CPH3
                                    182 	.globl _PCA0CPL3
                                    183 	.globl _PCA0CPH2
                                    184 	.globl _PCA0CPL2
                                    185 	.globl _PCA0CPH1
                                    186 	.globl _PCA0CPL1
                                    187 	.globl _ADC0CN
                                    188 	.globl _EIE2
                                    189 	.globl _EIE1
                                    190 	.globl _SMOD1
                                    191 	.globl _INT01CF
                                    192 	.globl _IT01CF
                                    193 	.globl _XBR2
                                    194 	.globl _XBR1
                                    195 	.globl _XBR0
                                    196 	.globl _ACC
                                    197 	.globl _P3SKIP
                                    198 	.globl _PCA0CPM4
                                    199 	.globl _PCA0CPM3
                                    200 	.globl _PCA0CPM2
                                    201 	.globl _PCA0CPM1
                                    202 	.globl _PCA0CPM0
                                    203 	.globl _PCA0MD
                                    204 	.globl _PCA0CN
                                    205 	.globl _USB0XCN
                                    206 	.globl _P2SKIP
                                    207 	.globl _P1SKIP
                                    208 	.globl _P0SKIP
                                    209 	.globl _SBUF1
                                    210 	.globl _SCON1
                                    211 	.globl _REF0CN
                                    212 	.globl _PSW
                                    213 	.globl _TMR2H
                                    214 	.globl _TH2
                                    215 	.globl _TMR2L
                                    216 	.globl _TL2
                                    217 	.globl _TMR2RLH
                                    218 	.globl _RCAP2H
                                    219 	.globl _TMR2RLL
                                    220 	.globl _RCAP2L
                                    221 	.globl _REG0CN
                                    222 	.globl _TMR2CN
                                    223 	.globl _T2CON
                                    224 	.globl _P4
                                    225 	.globl _ADC0LTH
                                    226 	.globl _ADC0LTL
                                    227 	.globl _ADC0GTH
                                    228 	.globl _ADC0GTL
                                    229 	.globl _SMB0DAT
                                    230 	.globl _SMB0CF
                                    231 	.globl _SMB0CN
                                    232 	.globl _ADC0H
                                    233 	.globl _ADC0L
                                    234 	.globl _ADC0CF
                                    235 	.globl _AMX0P
                                    236 	.globl _AMX0N
                                    237 	.globl _CLKMUL
                                    238 	.globl _IP
                                    239 	.globl _FLKEY
                                    240 	.globl _FLSCL
                                    241 	.globl _SBRLH1
                                    242 	.globl _SBRLL1
                                    243 	.globl _OSCICL
                                    244 	.globl _OSCICN
                                    245 	.globl _OSCXCN
                                    246 	.globl _P3
                                    247 	.globl _PFE0CN
                                    248 	.globl _P4MDOUT
                                    249 	.globl _SBCON1
                                    250 	.globl __XPAGE
                                    251 	.globl _EMI0CN
                                    252 	.globl _CLKSEL
                                    253 	.globl _IE
                                    254 	.globl _P3MDOUT
                                    255 	.globl _P2MDOUT
                                    256 	.globl _P1MDOUT
                                    257 	.globl _P0MDOUT
                                    258 	.globl _SPI0DAT
                                    259 	.globl _SPI0CKR
                                    260 	.globl _SPI0CFG
                                    261 	.globl _P2
                                    262 	.globl _CPT0MX
                                    263 	.globl _CPT1MX
                                    264 	.globl _CPT0MD
                                    265 	.globl _CPT1MD
                                    266 	.globl _CPT0CN
                                    267 	.globl _CPT1CN
                                    268 	.globl _SBUF0
                                    269 	.globl _SBUF
                                    270 	.globl _SCON0
                                    271 	.globl _SCON
                                    272 	.globl _USB0DAT
                                    273 	.globl _USB0ADR
                                    274 	.globl _TMR3H
                                    275 	.globl _TMR3L
                                    276 	.globl _TMR3RLH
                                    277 	.globl _TMR3RLL
                                    278 	.globl _TMR3CN
                                    279 	.globl _P1
                                    280 	.globl _PSCTL
                                    281 	.globl _CKCON
                                    282 	.globl _TH1
                                    283 	.globl _TH0
                                    284 	.globl _TL1
                                    285 	.globl _TL0
                                    286 	.globl _TMOD
                                    287 	.globl _TCON
                                    288 	.globl _PCON
                                    289 	.globl _OSCLCN
                                    290 	.globl _EMI0CF
                                    291 	.globl _EMI0TC
                                    292 	.globl _DPH
                                    293 	.globl _DPL
                                    294 	.globl _SP
                                    295 	.globl _P0
                                    296 	.globl _pxCurrentTCB
                                    297 	.globl _xTaskCreate
                                    298 	.globl _vTaskDelete
                                    299 	.globl _vTaskDelay
                                    300 	.globl _vTaskStartScheduler
                                    301 	.globl _vTaskEndScheduler
                                    302 	.globl _vTaskSuspendAll
                                    303 	.globl _xTaskResumeAll
                                    304 	.globl _xTaskGetTickCount
                                    305 	.globl _xTaskGetTickCountFromISR
                                    306 	.globl _uxTaskGetNumberOfTasks
                                    307 	.globl _pcTaskGetName
                                    308 	.globl _xTaskCatchUpTicks
                                    309 	.globl _xTaskIncrementTick
                                    310 	.globl _vTaskSwitchContext
                                    311 	.globl _vTaskPlaceOnEventList
                                    312 	.globl _vTaskPlaceOnUnorderedEventList
                                    313 	.globl _xTaskRemoveFromEventList
                                    314 	.globl _vTaskRemoveFromUnorderedEventList
                                    315 	.globl _vTaskSetTimeOutState
                                    316 	.globl _vTaskInternalSetTimeOutState
                                    317 	.globl _xTaskCheckForTimeOut
                                    318 	.globl _vTaskMissedYield
                                    319 	.globl _uxTaskResetEventItemValue
                                    320 	.globl _ulTaskGenericNotifyTake
                                    321 	.globl _xTaskGenericNotifyWait
                                    322 	.globl _xTaskGenericNotify
                                    323 	.globl _xTaskGenericNotifyFromISR
                                    324 	.globl _vTaskGenericNotifyGiveFromISR
                                    325 	.globl _xTaskGenericNotifyStateClear
                                    326 	.globl _ulTaskGenericNotifyValueClear
                                    327 ;--------------------------------------------------------
                                    328 ; special function registers
                                    329 ;--------------------------------------------------------
                                    330 	.area RSEG    (ABS,DATA)
      000000                        331 	.org 0x0000
                           000080   332 G$P0$0_0$0 == 0x0080
                           000080   333 _P0	=	0x0080
                           000081   334 G$SP$0_0$0 == 0x0081
                           000081   335 _SP	=	0x0081
                           000082   336 G$DPL$0_0$0 == 0x0082
                           000082   337 _DPL	=	0x0082
                           000083   338 G$DPH$0_0$0 == 0x0083
                           000083   339 _DPH	=	0x0083
                           000084   340 G$EMI0TC$0_0$0 == 0x0084
                           000084   341 _EMI0TC	=	0x0084
                           000085   342 G$EMI0CF$0_0$0 == 0x0085
                           000085   343 _EMI0CF	=	0x0085
                           000086   344 G$OSCLCN$0_0$0 == 0x0086
                           000086   345 _OSCLCN	=	0x0086
                           000087   346 G$PCON$0_0$0 == 0x0087
                           000087   347 _PCON	=	0x0087
                           000088   348 G$TCON$0_0$0 == 0x0088
                           000088   349 _TCON	=	0x0088
                           000089   350 G$TMOD$0_0$0 == 0x0089
                           000089   351 _TMOD	=	0x0089
                           00008A   352 G$TL0$0_0$0 == 0x008a
                           00008A   353 _TL0	=	0x008a
                           00008B   354 G$TL1$0_0$0 == 0x008b
                           00008B   355 _TL1	=	0x008b
                           00008C   356 G$TH0$0_0$0 == 0x008c
                           00008C   357 _TH0	=	0x008c
                           00008D   358 G$TH1$0_0$0 == 0x008d
                           00008D   359 _TH1	=	0x008d
                           00008E   360 G$CKCON$0_0$0 == 0x008e
                           00008E   361 _CKCON	=	0x008e
                           00008F   362 G$PSCTL$0_0$0 == 0x008f
                           00008F   363 _PSCTL	=	0x008f
                           000090   364 G$P1$0_0$0 == 0x0090
                           000090   365 _P1	=	0x0090
                           000091   366 G$TMR3CN$0_0$0 == 0x0091
                           000091   367 _TMR3CN	=	0x0091
                           000092   368 G$TMR3RLL$0_0$0 == 0x0092
                           000092   369 _TMR3RLL	=	0x0092
                           000093   370 G$TMR3RLH$0_0$0 == 0x0093
                           000093   371 _TMR3RLH	=	0x0093
                           000094   372 G$TMR3L$0_0$0 == 0x0094
                           000094   373 _TMR3L	=	0x0094
                           000095   374 G$TMR3H$0_0$0 == 0x0095
                           000095   375 _TMR3H	=	0x0095
                           000096   376 G$USB0ADR$0_0$0 == 0x0096
                           000096   377 _USB0ADR	=	0x0096
                           000097   378 G$USB0DAT$0_0$0 == 0x0097
                           000097   379 _USB0DAT	=	0x0097
                           000098   380 G$SCON$0_0$0 == 0x0098
                           000098   381 _SCON	=	0x0098
                           000098   382 G$SCON0$0_0$0 == 0x0098
                           000098   383 _SCON0	=	0x0098
                           000099   384 G$SBUF$0_0$0 == 0x0099
                           000099   385 _SBUF	=	0x0099
                           000099   386 G$SBUF0$0_0$0 == 0x0099
                           000099   387 _SBUF0	=	0x0099
                           00009A   388 G$CPT1CN$0_0$0 == 0x009a
                           00009A   389 _CPT1CN	=	0x009a
                           00009B   390 G$CPT0CN$0_0$0 == 0x009b
                           00009B   391 _CPT0CN	=	0x009b
                           00009C   392 G$CPT1MD$0_0$0 == 0x009c
                           00009C   393 _CPT1MD	=	0x009c
                           00009D   394 G$CPT0MD$0_0$0 == 0x009d
                           00009D   395 _CPT0MD	=	0x009d
                           00009E   396 G$CPT1MX$0_0$0 == 0x009e
                           00009E   397 _CPT1MX	=	0x009e
                           00009F   398 G$CPT0MX$0_0$0 == 0x009f
                           00009F   399 _CPT0MX	=	0x009f
                           0000A0   400 G$P2$0_0$0 == 0x00a0
                           0000A0   401 _P2	=	0x00a0
                           0000A1   402 G$SPI0CFG$0_0$0 == 0x00a1
                           0000A1   403 _SPI0CFG	=	0x00a1
                           0000A2   404 G$SPI0CKR$0_0$0 == 0x00a2
                           0000A2   405 _SPI0CKR	=	0x00a2
                           0000A3   406 G$SPI0DAT$0_0$0 == 0x00a3
                           0000A3   407 _SPI0DAT	=	0x00a3
                           0000A4   408 G$P0MDOUT$0_0$0 == 0x00a4
                           0000A4   409 _P0MDOUT	=	0x00a4
                           0000A5   410 G$P1MDOUT$0_0$0 == 0x00a5
                           0000A5   411 _P1MDOUT	=	0x00a5
                           0000A6   412 G$P2MDOUT$0_0$0 == 0x00a6
                           0000A6   413 _P2MDOUT	=	0x00a6
                           0000A7   414 G$P3MDOUT$0_0$0 == 0x00a7
                           0000A7   415 _P3MDOUT	=	0x00a7
                           0000A8   416 G$IE$0_0$0 == 0x00a8
                           0000A8   417 _IE	=	0x00a8
                           0000A9   418 G$CLKSEL$0_0$0 == 0x00a9
                           0000A9   419 _CLKSEL	=	0x00a9
                           0000AA   420 G$EMI0CN$0_0$0 == 0x00aa
                           0000AA   421 _EMI0CN	=	0x00aa
                           0000AA   422 G$_XPAGE$0_0$0 == 0x00aa
                           0000AA   423 __XPAGE	=	0x00aa
                           0000AC   424 G$SBCON1$0_0$0 == 0x00ac
                           0000AC   425 _SBCON1	=	0x00ac
                           0000AE   426 G$P4MDOUT$0_0$0 == 0x00ae
                           0000AE   427 _P4MDOUT	=	0x00ae
                           0000AF   428 G$PFE0CN$0_0$0 == 0x00af
                           0000AF   429 _PFE0CN	=	0x00af
                           0000B0   430 G$P3$0_0$0 == 0x00b0
                           0000B0   431 _P3	=	0x00b0
                           0000B1   432 G$OSCXCN$0_0$0 == 0x00b1
                           0000B1   433 _OSCXCN	=	0x00b1
                           0000B2   434 G$OSCICN$0_0$0 == 0x00b2
                           0000B2   435 _OSCICN	=	0x00b2
                           0000B3   436 G$OSCICL$0_0$0 == 0x00b3
                           0000B3   437 _OSCICL	=	0x00b3
                           0000B4   438 G$SBRLL1$0_0$0 == 0x00b4
                           0000B4   439 _SBRLL1	=	0x00b4
                           0000B5   440 G$SBRLH1$0_0$0 == 0x00b5
                           0000B5   441 _SBRLH1	=	0x00b5
                           0000B6   442 G$FLSCL$0_0$0 == 0x00b6
                           0000B6   443 _FLSCL	=	0x00b6
                           0000B7   444 G$FLKEY$0_0$0 == 0x00b7
                           0000B7   445 _FLKEY	=	0x00b7
                           0000B8   446 G$IP$0_0$0 == 0x00b8
                           0000B8   447 _IP	=	0x00b8
                           0000B9   448 G$CLKMUL$0_0$0 == 0x00b9
                           0000B9   449 _CLKMUL	=	0x00b9
                           0000BA   450 G$AMX0N$0_0$0 == 0x00ba
                           0000BA   451 _AMX0N	=	0x00ba
                           0000BB   452 G$AMX0P$0_0$0 == 0x00bb
                           0000BB   453 _AMX0P	=	0x00bb
                           0000BC   454 G$ADC0CF$0_0$0 == 0x00bc
                           0000BC   455 _ADC0CF	=	0x00bc
                           0000BD   456 G$ADC0L$0_0$0 == 0x00bd
                           0000BD   457 _ADC0L	=	0x00bd
                           0000BE   458 G$ADC0H$0_0$0 == 0x00be
                           0000BE   459 _ADC0H	=	0x00be
                           0000C0   460 G$SMB0CN$0_0$0 == 0x00c0
                           0000C0   461 _SMB0CN	=	0x00c0
                           0000C1   462 G$SMB0CF$0_0$0 == 0x00c1
                           0000C1   463 _SMB0CF	=	0x00c1
                           0000C2   464 G$SMB0DAT$0_0$0 == 0x00c2
                           0000C2   465 _SMB0DAT	=	0x00c2
                           0000C3   466 G$ADC0GTL$0_0$0 == 0x00c3
                           0000C3   467 _ADC0GTL	=	0x00c3
                           0000C4   468 G$ADC0GTH$0_0$0 == 0x00c4
                           0000C4   469 _ADC0GTH	=	0x00c4
                           0000C5   470 G$ADC0LTL$0_0$0 == 0x00c5
                           0000C5   471 _ADC0LTL	=	0x00c5
                           0000C6   472 G$ADC0LTH$0_0$0 == 0x00c6
                           0000C6   473 _ADC0LTH	=	0x00c6
                           0000C7   474 G$P4$0_0$0 == 0x00c7
                           0000C7   475 _P4	=	0x00c7
                           0000C8   476 G$T2CON$0_0$0 == 0x00c8
                           0000C8   477 _T2CON	=	0x00c8
                           0000C8   478 G$TMR2CN$0_0$0 == 0x00c8
                           0000C8   479 _TMR2CN	=	0x00c8
                           0000C9   480 G$REG0CN$0_0$0 == 0x00c9
                           0000C9   481 _REG0CN	=	0x00c9
                           0000CA   482 G$RCAP2L$0_0$0 == 0x00ca
                           0000CA   483 _RCAP2L	=	0x00ca
                           0000CA   484 G$TMR2RLL$0_0$0 == 0x00ca
                           0000CA   485 _TMR2RLL	=	0x00ca
                           0000CB   486 G$RCAP2H$0_0$0 == 0x00cb
                           0000CB   487 _RCAP2H	=	0x00cb
                           0000CB   488 G$TMR2RLH$0_0$0 == 0x00cb
                           0000CB   489 _TMR2RLH	=	0x00cb
                           0000CC   490 G$TL2$0_0$0 == 0x00cc
                           0000CC   491 _TL2	=	0x00cc
                           0000CC   492 G$TMR2L$0_0$0 == 0x00cc
                           0000CC   493 _TMR2L	=	0x00cc
                           0000CD   494 G$TH2$0_0$0 == 0x00cd
                           0000CD   495 _TH2	=	0x00cd
                           0000CD   496 G$TMR2H$0_0$0 == 0x00cd
                           0000CD   497 _TMR2H	=	0x00cd
                           0000D0   498 G$PSW$0_0$0 == 0x00d0
                           0000D0   499 _PSW	=	0x00d0
                           0000D1   500 G$REF0CN$0_0$0 == 0x00d1
                           0000D1   501 _REF0CN	=	0x00d1
                           0000D2   502 G$SCON1$0_0$0 == 0x00d2
                           0000D2   503 _SCON1	=	0x00d2
                           0000D3   504 G$SBUF1$0_0$0 == 0x00d3
                           0000D3   505 _SBUF1	=	0x00d3
                           0000D4   506 G$P0SKIP$0_0$0 == 0x00d4
                           0000D4   507 _P0SKIP	=	0x00d4
                           0000D5   508 G$P1SKIP$0_0$0 == 0x00d5
                           0000D5   509 _P1SKIP	=	0x00d5
                           0000D6   510 G$P2SKIP$0_0$0 == 0x00d6
                           0000D6   511 _P2SKIP	=	0x00d6
                           0000D7   512 G$USB0XCN$0_0$0 == 0x00d7
                           0000D7   513 _USB0XCN	=	0x00d7
                           0000D8   514 G$PCA0CN$0_0$0 == 0x00d8
                           0000D8   515 _PCA0CN	=	0x00d8
                           0000D9   516 G$PCA0MD$0_0$0 == 0x00d9
                           0000D9   517 _PCA0MD	=	0x00d9
                           0000DA   518 G$PCA0CPM0$0_0$0 == 0x00da
                           0000DA   519 _PCA0CPM0	=	0x00da
                           0000DB   520 G$PCA0CPM1$0_0$0 == 0x00db
                           0000DB   521 _PCA0CPM1	=	0x00db
                           0000DC   522 G$PCA0CPM2$0_0$0 == 0x00dc
                           0000DC   523 _PCA0CPM2	=	0x00dc
                           0000DD   524 G$PCA0CPM3$0_0$0 == 0x00dd
                           0000DD   525 _PCA0CPM3	=	0x00dd
                           0000DE   526 G$PCA0CPM4$0_0$0 == 0x00de
                           0000DE   527 _PCA0CPM4	=	0x00de
                           0000DF   528 G$P3SKIP$0_0$0 == 0x00df
                           0000DF   529 _P3SKIP	=	0x00df
                           0000E0   530 G$ACC$0_0$0 == 0x00e0
                           0000E0   531 _ACC	=	0x00e0
                           0000E1   532 G$XBR0$0_0$0 == 0x00e1
                           0000E1   533 _XBR0	=	0x00e1
                           0000E2   534 G$XBR1$0_0$0 == 0x00e2
                           0000E2   535 _XBR1	=	0x00e2
                           0000E3   536 G$XBR2$0_0$0 == 0x00e3
                           0000E3   537 _XBR2	=	0x00e3
                           0000E4   538 G$IT01CF$0_0$0 == 0x00e4
                           0000E4   539 _IT01CF	=	0x00e4
                           0000E4   540 G$INT01CF$0_0$0 == 0x00e4
                           0000E4   541 _INT01CF	=	0x00e4
                           0000E5   542 G$SMOD1$0_0$0 == 0x00e5
                           0000E5   543 _SMOD1	=	0x00e5
                           0000E6   544 G$EIE1$0_0$0 == 0x00e6
                           0000E6   545 _EIE1	=	0x00e6
                           0000E7   546 G$EIE2$0_0$0 == 0x00e7
                           0000E7   547 _EIE2	=	0x00e7
                           0000E8   548 G$ADC0CN$0_0$0 == 0x00e8
                           0000E8   549 _ADC0CN	=	0x00e8
                           0000E9   550 G$PCA0CPL1$0_0$0 == 0x00e9
                           0000E9   551 _PCA0CPL1	=	0x00e9
                           0000EA   552 G$PCA0CPH1$0_0$0 == 0x00ea
                           0000EA   553 _PCA0CPH1	=	0x00ea
                           0000EB   554 G$PCA0CPL2$0_0$0 == 0x00eb
                           0000EB   555 _PCA0CPL2	=	0x00eb
                           0000EC   556 G$PCA0CPH2$0_0$0 == 0x00ec
                           0000EC   557 _PCA0CPH2	=	0x00ec
                           0000ED   558 G$PCA0CPL3$0_0$0 == 0x00ed
                           0000ED   559 _PCA0CPL3	=	0x00ed
                           0000EE   560 G$PCA0CPH3$0_0$0 == 0x00ee
                           0000EE   561 _PCA0CPH3	=	0x00ee
                           0000EF   562 G$RSTSRC$0_0$0 == 0x00ef
                           0000EF   563 _RSTSRC	=	0x00ef
                           0000F0   564 G$B$0_0$0 == 0x00f0
                           0000F0   565 _B	=	0x00f0
                           0000F1   566 G$P0MODE$0_0$0 == 0x00f1
                           0000F1   567 _P0MODE	=	0x00f1
                           0000F1   568 G$P0MDIN$0_0$0 == 0x00f1
                           0000F1   569 _P0MDIN	=	0x00f1
                           0000F2   570 G$P1MODE$0_0$0 == 0x00f2
                           0000F2   571 _P1MODE	=	0x00f2
                           0000F2   572 G$P1MDIN$0_0$0 == 0x00f2
                           0000F2   573 _P1MDIN	=	0x00f2
                           0000F3   574 G$P2MODE$0_0$0 == 0x00f3
                           0000F3   575 _P2MODE	=	0x00f3
                           0000F3   576 G$P2MDIN$0_0$0 == 0x00f3
                           0000F3   577 _P2MDIN	=	0x00f3
                           0000F4   578 G$P3MODE$0_0$0 == 0x00f4
                           0000F4   579 _P3MODE	=	0x00f4
                           0000F4   580 G$P3MDIN$0_0$0 == 0x00f4
                           0000F4   581 _P3MDIN	=	0x00f4
                           0000F5   582 G$P4MDIN$0_0$0 == 0x00f5
                           0000F5   583 _P4MDIN	=	0x00f5
                           0000F6   584 G$EIP1$0_0$0 == 0x00f6
                           0000F6   585 _EIP1	=	0x00f6
                           0000F7   586 G$EIP2$0_0$0 == 0x00f7
                           0000F7   587 _EIP2	=	0x00f7
                           0000F8   588 G$SPI0CN$0_0$0 == 0x00f8
                           0000F8   589 _SPI0CN	=	0x00f8
                           0000F9   590 G$PCA0L$0_0$0 == 0x00f9
                           0000F9   591 _PCA0L	=	0x00f9
                           0000FA   592 G$PCA0H$0_0$0 == 0x00fa
                           0000FA   593 _PCA0H	=	0x00fa
                           0000FB   594 G$PCA0CPL0$0_0$0 == 0x00fb
                           0000FB   595 _PCA0CPL0	=	0x00fb
                           0000FC   596 G$PCA0CPH0$0_0$0 == 0x00fc
                           0000FC   597 _PCA0CPH0	=	0x00fc
                           0000FD   598 G$PCA0CPL4$0_0$0 == 0x00fd
                           0000FD   599 _PCA0CPL4	=	0x00fd
                           0000FE   600 G$PCA0CPH4$0_0$0 == 0x00fe
                           0000FE   601 _PCA0CPH4	=	0x00fe
                           0000FF   602 G$VDM0CN$0_0$0 == 0x00ff
                           0000FF   603 _VDM0CN	=	0x00ff
                           008C8A   604 G$TMR0$0_0$0 == 0x8c8a
                           008C8A   605 _TMR0	=	0x8c8a
                           008D8B   606 G$TMR1$0_0$0 == 0x8d8b
                           008D8B   607 _TMR1	=	0x8d8b
                           00CDCC   608 G$TMR2$0_0$0 == 0xcdcc
                           00CDCC   609 _TMR2	=	0xcdcc
                           00CBCA   610 G$RCAP2$0_0$0 == 0xcbca
                           00CBCA   611 _RCAP2	=	0xcbca
                           00CBCA   612 G$TMR2RL$0_0$0 == 0xcbca
                           00CBCA   613 _TMR2RL	=	0xcbca
                           009594   614 G$TMR3$0_0$0 == 0x9594
                           009594   615 _TMR3	=	0x9594
                           009392   616 G$TMR3RL$0_0$0 == 0x9392
                           009392   617 _TMR3RL	=	0x9392
                           00B5B4   618 G$SBRL1$0_0$0 == 0xb5b4
                           00B5B4   619 _SBRL1	=	0xb5b4
                           00BEBD   620 G$ADC0$0_0$0 == 0xbebd
                           00BEBD   621 _ADC0	=	0xbebd
                           00C4C3   622 G$ADC0GT$0_0$0 == 0xc4c3
                           00C4C3   623 _ADC0GT	=	0xc4c3
                           00C6C5   624 G$ADC0LT$0_0$0 == 0xc6c5
                           00C6C5   625 _ADC0LT	=	0xc6c5
                           00FAF9   626 G$PCA0$0_0$0 == 0xfaf9
                           00FAF9   627 _PCA0	=	0xfaf9
                           00FCFB   628 G$PCA0CP0$0_0$0 == 0xfcfb
                           00FCFB   629 _PCA0CP0	=	0xfcfb
                           00EAE9   630 G$PCA0CP1$0_0$0 == 0xeae9
                           00EAE9   631 _PCA0CP1	=	0xeae9
                           00ECEB   632 G$PCA0CP2$0_0$0 == 0xeceb
                           00ECEB   633 _PCA0CP2	=	0xeceb
                           00EEED   634 G$PCA0CP3$0_0$0 == 0xeeed
                           00EEED   635 _PCA0CP3	=	0xeeed
                           00FEFD   636 G$PCA0CP4$0_0$0 == 0xfefd
                           00FEFD   637 _PCA0CP4	=	0xfefd
                                    638 ;--------------------------------------------------------
                                    639 ; special function bits
                                    640 ;--------------------------------------------------------
                                    641 	.area RSEG    (ABS,DATA)
      000000                        642 	.org 0x0000
                           000080   643 G$P0_0$0_0$0 == 0x0080
                           000080   644 _P0_0	=	0x0080
                           000081   645 G$P0_1$0_0$0 == 0x0081
                           000081   646 _P0_1	=	0x0081
                           000082   647 G$P0_2$0_0$0 == 0x0082
                           000082   648 _P0_2	=	0x0082
                           000083   649 G$P0_3$0_0$0 == 0x0083
                           000083   650 _P0_3	=	0x0083
                           000084   651 G$P0_4$0_0$0 == 0x0084
                           000084   652 _P0_4	=	0x0084
                           000085   653 G$P0_5$0_0$0 == 0x0085
                           000085   654 _P0_5	=	0x0085
                           000086   655 G$P0_6$0_0$0 == 0x0086
                           000086   656 _P0_6	=	0x0086
                           000087   657 G$P0_7$0_0$0 == 0x0087
                           000087   658 _P0_7	=	0x0087
                           000088   659 G$IT0$0_0$0 == 0x0088
                           000088   660 _IT0	=	0x0088
                           000089   661 G$IE0$0_0$0 == 0x0089
                           000089   662 _IE0	=	0x0089
                           00008A   663 G$IT1$0_0$0 == 0x008a
                           00008A   664 _IT1	=	0x008a
                           00008B   665 G$IE1$0_0$0 == 0x008b
                           00008B   666 _IE1	=	0x008b
                           00008C   667 G$TR0$0_0$0 == 0x008c
                           00008C   668 _TR0	=	0x008c
                           00008D   669 G$TF0$0_0$0 == 0x008d
                           00008D   670 _TF0	=	0x008d
                           00008E   671 G$TR1$0_0$0 == 0x008e
                           00008E   672 _TR1	=	0x008e
                           00008F   673 G$TF1$0_0$0 == 0x008f
                           00008F   674 _TF1	=	0x008f
                           000090   675 G$P1_0$0_0$0 == 0x0090
                           000090   676 _P1_0	=	0x0090
                           000091   677 G$P1_1$0_0$0 == 0x0091
                           000091   678 _P1_1	=	0x0091
                           000092   679 G$P1_2$0_0$0 == 0x0092
                           000092   680 _P1_2	=	0x0092
                           000093   681 G$P1_3$0_0$0 == 0x0093
                           000093   682 _P1_3	=	0x0093
                           000094   683 G$P1_4$0_0$0 == 0x0094
                           000094   684 _P1_4	=	0x0094
                           000095   685 G$P1_5$0_0$0 == 0x0095
                           000095   686 _P1_5	=	0x0095
                           000096   687 G$P1_6$0_0$0 == 0x0096
                           000096   688 _P1_6	=	0x0096
                           000097   689 G$P1_7$0_0$0 == 0x0097
                           000097   690 _P1_7	=	0x0097
                           000098   691 G$RI$0_0$0 == 0x0098
                           000098   692 _RI	=	0x0098
                           000098   693 G$RI0$0_0$0 == 0x0098
                           000098   694 _RI0	=	0x0098
                           000099   695 G$TI$0_0$0 == 0x0099
                           000099   696 _TI	=	0x0099
                           000099   697 G$TI0$0_0$0 == 0x0099
                           000099   698 _TI0	=	0x0099
                           00009A   699 G$RB8$0_0$0 == 0x009a
                           00009A   700 _RB8	=	0x009a
                           00009A   701 G$RB80$0_0$0 == 0x009a
                           00009A   702 _RB80	=	0x009a
                           00009B   703 G$TB8$0_0$0 == 0x009b
                           00009B   704 _TB8	=	0x009b
                           00009B   705 G$TB80$0_0$0 == 0x009b
                           00009B   706 _TB80	=	0x009b
                           00009C   707 G$REN$0_0$0 == 0x009c
                           00009C   708 _REN	=	0x009c
                           00009C   709 G$REN0$0_0$0 == 0x009c
                           00009C   710 _REN0	=	0x009c
                           00009D   711 G$SM2$0_0$0 == 0x009d
                           00009D   712 _SM2	=	0x009d
                           00009D   713 G$MCE0$0_0$0 == 0x009d
                           00009D   714 _MCE0	=	0x009d
                           00009F   715 G$SM0$0_0$0 == 0x009f
                           00009F   716 _SM0	=	0x009f
                           00009F   717 G$S0MODE$0_0$0 == 0x009f
                           00009F   718 _S0MODE	=	0x009f
                           0000A0   719 G$P2_0$0_0$0 == 0x00a0
                           0000A0   720 _P2_0	=	0x00a0
                           0000A1   721 G$P2_1$0_0$0 == 0x00a1
                           0000A1   722 _P2_1	=	0x00a1
                           0000A2   723 G$P2_2$0_0$0 == 0x00a2
                           0000A2   724 _P2_2	=	0x00a2
                           0000A3   725 G$P2_3$0_0$0 == 0x00a3
                           0000A3   726 _P2_3	=	0x00a3
                           0000A4   727 G$P2_4$0_0$0 == 0x00a4
                           0000A4   728 _P2_4	=	0x00a4
                           0000A5   729 G$P2_5$0_0$0 == 0x00a5
                           0000A5   730 _P2_5	=	0x00a5
                           0000A6   731 G$P2_6$0_0$0 == 0x00a6
                           0000A6   732 _P2_6	=	0x00a6
                           0000A7   733 G$P2_7$0_0$0 == 0x00a7
                           0000A7   734 _P2_7	=	0x00a7
                           0000A8   735 G$EX0$0_0$0 == 0x00a8
                           0000A8   736 _EX0	=	0x00a8
                           0000A9   737 G$ET0$0_0$0 == 0x00a9
                           0000A9   738 _ET0	=	0x00a9
                           0000AA   739 G$EX1$0_0$0 == 0x00aa
                           0000AA   740 _EX1	=	0x00aa
                           0000AB   741 G$ET1$0_0$0 == 0x00ab
                           0000AB   742 _ET1	=	0x00ab
                           0000AC   743 G$ES$0_0$0 == 0x00ac
                           0000AC   744 _ES	=	0x00ac
                           0000AC   745 G$ES0$0_0$0 == 0x00ac
                           0000AC   746 _ES0	=	0x00ac
                           0000AD   747 G$ET2$0_0$0 == 0x00ad
                           0000AD   748 _ET2	=	0x00ad
                           0000AE   749 G$ESPI0$0_0$0 == 0x00ae
                           0000AE   750 _ESPI0	=	0x00ae
                           0000AF   751 G$EA$0_0$0 == 0x00af
                           0000AF   752 _EA	=	0x00af
                           0000B0   753 G$P3_0$0_0$0 == 0x00b0
                           0000B0   754 _P3_0	=	0x00b0
                           0000B1   755 G$P3_1$0_0$0 == 0x00b1
                           0000B1   756 _P3_1	=	0x00b1
                           0000B2   757 G$P3_2$0_0$0 == 0x00b2
                           0000B2   758 _P3_2	=	0x00b2
                           0000B3   759 G$P3_3$0_0$0 == 0x00b3
                           0000B3   760 _P3_3	=	0x00b3
                           0000B4   761 G$P3_4$0_0$0 == 0x00b4
                           0000B4   762 _P3_4	=	0x00b4
                           0000B5   763 G$P3_5$0_0$0 == 0x00b5
                           0000B5   764 _P3_5	=	0x00b5
                           0000B6   765 G$P3_6$0_0$0 == 0x00b6
                           0000B6   766 _P3_6	=	0x00b6
                           0000B7   767 G$P3_7$0_0$0 == 0x00b7
                           0000B7   768 _P3_7	=	0x00b7
                           0000B8   769 G$PX0$0_0$0 == 0x00b8
                           0000B8   770 _PX0	=	0x00b8
                           0000B9   771 G$PT0$0_0$0 == 0x00b9
                           0000B9   772 _PT0	=	0x00b9
                           0000BA   773 G$PX1$0_0$0 == 0x00ba
                           0000BA   774 _PX1	=	0x00ba
                           0000BB   775 G$PT1$0_0$0 == 0x00bb
                           0000BB   776 _PT1	=	0x00bb
                           0000BC   777 G$PS$0_0$0 == 0x00bc
                           0000BC   778 _PS	=	0x00bc
                           0000BC   779 G$PS0$0_0$0 == 0x00bc
                           0000BC   780 _PS0	=	0x00bc
                           0000BD   781 G$PT2$0_0$0 == 0x00bd
                           0000BD   782 _PT2	=	0x00bd
                           0000BE   783 G$PSPI0$0_0$0 == 0x00be
                           0000BE   784 _PSPI0	=	0x00be
                           0000C0   785 G$SI$0_0$0 == 0x00c0
                           0000C0   786 _SI	=	0x00c0
                           0000C1   787 G$ACK$0_0$0 == 0x00c1
                           0000C1   788 _ACK	=	0x00c1
                           0000C2   789 G$ARBLOST$0_0$0 == 0x00c2
                           0000C2   790 _ARBLOST	=	0x00c2
                           0000C3   791 G$ACKRQ$0_0$0 == 0x00c3
                           0000C3   792 _ACKRQ	=	0x00c3
                           0000C4   793 G$STO$0_0$0 == 0x00c4
                           0000C4   794 _STO	=	0x00c4
                           0000C5   795 G$STA$0_0$0 == 0x00c5
                           0000C5   796 _STA	=	0x00c5
                           0000C6   797 G$TXMODE$0_0$0 == 0x00c6
                           0000C6   798 _TXMODE	=	0x00c6
                           0000C7   799 G$MASTER$0_0$0 == 0x00c7
                           0000C7   800 _MASTER	=	0x00c7
                           0000C8   801 G$T2XCLK$0_0$0 == 0x00c8
                           0000C8   802 _T2XCLK	=	0x00c8
                           0000C9   803 G$T2CSS$0_0$0 == 0x00c9
                           0000C9   804 _T2CSS	=	0x00c9
                           0000CA   805 G$TR2$0_0$0 == 0x00ca
                           0000CA   806 _TR2	=	0x00ca
                           0000CB   807 G$T2SPLIT$0_0$0 == 0x00cb
                           0000CB   808 _T2SPLIT	=	0x00cb
                           0000CC   809 G$T2CE$0_0$0 == 0x00cc
                           0000CC   810 _T2CE	=	0x00cc
                           0000CD   811 G$TF2LEN$0_0$0 == 0x00cd
                           0000CD   812 _TF2LEN	=	0x00cd
                           0000CE   813 G$TF2L$0_0$0 == 0x00ce
                           0000CE   814 _TF2L	=	0x00ce
                           0000CF   815 G$TF2$0_0$0 == 0x00cf
                           0000CF   816 _TF2	=	0x00cf
                           0000CF   817 G$TF2H$0_0$0 == 0x00cf
                           0000CF   818 _TF2H	=	0x00cf
                           0000D0   819 G$PARITY$0_0$0 == 0x00d0
                           0000D0   820 _PARITY	=	0x00d0
                           0000D1   821 G$F1$0_0$0 == 0x00d1
                           0000D1   822 _F1	=	0x00d1
                           0000D2   823 G$OV$0_0$0 == 0x00d2
                           0000D2   824 _OV	=	0x00d2
                           0000D3   825 G$RS0$0_0$0 == 0x00d3
                           0000D3   826 _RS0	=	0x00d3
                           0000D4   827 G$RS1$0_0$0 == 0x00d4
                           0000D4   828 _RS1	=	0x00d4
                           0000D5   829 G$F0$0_0$0 == 0x00d5
                           0000D5   830 _F0	=	0x00d5
                           0000D6   831 G$AC$0_0$0 == 0x00d6
                           0000D6   832 _AC	=	0x00d6
                           0000D7   833 G$CY$0_0$0 == 0x00d7
                           0000D7   834 _CY	=	0x00d7
                           0000D8   835 G$CCF0$0_0$0 == 0x00d8
                           0000D8   836 _CCF0	=	0x00d8
                           0000D9   837 G$CCF1$0_0$0 == 0x00d9
                           0000D9   838 _CCF1	=	0x00d9
                           0000DA   839 G$CCF2$0_0$0 == 0x00da
                           0000DA   840 _CCF2	=	0x00da
                           0000DB   841 G$CCF3$0_0$0 == 0x00db
                           0000DB   842 _CCF3	=	0x00db
                           0000DC   843 G$CCF4$0_0$0 == 0x00dc
                           0000DC   844 _CCF4	=	0x00dc
                           0000DE   845 G$CR$0_0$0 == 0x00de
                           0000DE   846 _CR	=	0x00de
                           0000DF   847 G$CF$0_0$0 == 0x00df
                           0000DF   848 _CF	=	0x00df
                           0000E8   849 G$AD0CM0$0_0$0 == 0x00e8
                           0000E8   850 _AD0CM0	=	0x00e8
                           0000E9   851 G$AD0CM1$0_0$0 == 0x00e9
                           0000E9   852 _AD0CM1	=	0x00e9
                           0000EA   853 G$AD0CM2$0_0$0 == 0x00ea
                           0000EA   854 _AD0CM2	=	0x00ea
                           0000EB   855 G$AD0WINT$0_0$0 == 0x00eb
                           0000EB   856 _AD0WINT	=	0x00eb
                           0000EC   857 G$AD0BUSY$0_0$0 == 0x00ec
                           0000EC   858 _AD0BUSY	=	0x00ec
                           0000ED   859 G$AD0INT$0_0$0 == 0x00ed
                           0000ED   860 _AD0INT	=	0x00ed
                           0000EE   861 G$AD0TM$0_0$0 == 0x00ee
                           0000EE   862 _AD0TM	=	0x00ee
                           0000EF   863 G$AD0EN$0_0$0 == 0x00ef
                           0000EF   864 _AD0EN	=	0x00ef
                           0000F8   865 G$SPIEN$0_0$0 == 0x00f8
                           0000F8   866 _SPIEN	=	0x00f8
                           0000F9   867 G$TXBMT$0_0$0 == 0x00f9
                           0000F9   868 _TXBMT	=	0x00f9
                           0000FA   869 G$NSSMD0$0_0$0 == 0x00fa
                           0000FA   870 _NSSMD0	=	0x00fa
                           0000FB   871 G$NSSMD1$0_0$0 == 0x00fb
                           0000FB   872 _NSSMD1	=	0x00fb
                           0000FC   873 G$RXOVRN$0_0$0 == 0x00fc
                           0000FC   874 _RXOVRN	=	0x00fc
                           0000FD   875 G$MODF$0_0$0 == 0x00fd
                           0000FD   876 _MODF	=	0x00fd
                           0000FE   877 G$WCOL$0_0$0 == 0x00fe
                           0000FE   878 _WCOL	=	0x00fe
                           0000FF   879 G$SPIF$0_0$0 == 0x00ff
                           0000FF   880 _SPIF	=	0x00ff
                                    881 ;--------------------------------------------------------
                                    882 ; overlayable register banks
                                    883 ;--------------------------------------------------------
                                    884 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        885 	.ds 8
                                    886 ;--------------------------------------------------------
                                    887 ; internal ram data
                                    888 ;--------------------------------------------------------
                                    889 	.area DSEG    (DATA)
                                    890 ;--------------------------------------------------------
                                    891 ; overlayable items in internal ram
                                    892 ;--------------------------------------------------------
                                    893 ;--------------------------------------------------------
                                    894 ; indirectly addressable internal ram data
                                    895 ;--------------------------------------------------------
                                    896 	.area ISEG    (DATA)
                                    897 ;--------------------------------------------------------
                                    898 ; absolute internal ram data
                                    899 ;--------------------------------------------------------
                                    900 	.area IABS    (ABS,DATA)
                                    901 	.area IABS    (ABS,DATA)
                                    902 ;--------------------------------------------------------
                                    903 ; bit data
                                    904 ;--------------------------------------------------------
                                    905 	.area BSEG    (BIT)
                                    906 ;--------------------------------------------------------
                                    907 ; paged external ram data
                                    908 ;--------------------------------------------------------
                                    909 	.area PSEG    (PAG,XDATA)
                                    910 ;--------------------------------------------------------
                                    911 ; external ram data
                                    912 ;--------------------------------------------------------
                                    913 	.area XSEG    (XDATA)
                           000000   914 Ftasks$pxReadyTasksLists$0_0$0==.
      000000                        915 _pxReadyTasksLists:
      000000                        916 	.ds 48
                           000030   917 Ftasks$xDelayedTaskList1$0_0$0==.
      000030                        918 _xDelayedTaskList1:
      000030                        919 	.ds 12
                           00003C   920 Ftasks$xDelayedTaskList2$0_0$0==.
      00003C                        921 _xDelayedTaskList2:
      00003C                        922 	.ds 12
                           000048   923 Ftasks$pxDelayedTaskList$0_0$0==.
      000048                        924 _pxDelayedTaskList:
      000048                        925 	.ds 3
                           00004B   926 Ftasks$pxOverflowDelayedTaskList$0_0$0==.
      00004B                        927 _pxOverflowDelayedTaskList:
      00004B                        928 	.ds 3
                           00004E   929 Ftasks$xPendingReadyList$0_0$0==.
      00004E                        930 _xPendingReadyList:
      00004E                        931 	.ds 12
                           00005A   932 Ftasks$xTasksWaitingTermination$0_0$0==.
      00005A                        933 _xTasksWaitingTermination:
      00005A                        934 	.ds 12
                                    935 ;--------------------------------------------------------
                                    936 ; absolute external ram data
                                    937 ;--------------------------------------------------------
                                    938 	.area XABS    (ABS,XDATA)
                                    939 ;--------------------------------------------------------
                                    940 ; external initialized ram data
                                    941 ;--------------------------------------------------------
                                    942 	.area XISEG   (XDATA)
                           000000   943 G$pxCurrentTCB$0_0$0==.
      000000                        944 _pxCurrentTCB::
      000000                        945 	.ds 3
                           000003   946 Ftasks$uxDeletedTasksWaitingCleanUp$0_0$0==.
      000003                        947 _uxDeletedTasksWaitingCleanUp:
      000003                        948 	.ds 1
                           000004   949 Ftasks$uxCurrentNumberOfTasks$0_0$0==.
      000004                        950 _uxCurrentNumberOfTasks:
      000004                        951 	.ds 1
                           000005   952 Ftasks$xTickCount$0_0$0==.
      000005                        953 _xTickCount:
      000005                        954 	.ds 2
                           000007   955 Ftasks$uxTopReadyPriority$0_0$0==.
      000007                        956 _uxTopReadyPriority:
      000007                        957 	.ds 1
                           000008   958 Ftasks$xSchedulerRunning$0_0$0==.
      000008                        959 _xSchedulerRunning:
      000008                        960 	.ds 1
                           000009   961 Ftasks$xPendedTicks$0_0$0==.
      000009                        962 _xPendedTicks:
      000009                        963 	.ds 2
                           00000B   964 Ftasks$xYieldPending$0_0$0==.
      00000B                        965 _xYieldPending:
      00000B                        966 	.ds 1
                           00000C   967 Ftasks$xNumOfOverflows$0_0$0==.
      00000C                        968 _xNumOfOverflows:
      00000C                        969 	.ds 1
                           00000D   970 Ftasks$uxTaskNumber$0_0$0==.
      00000D                        971 _uxTaskNumber:
      00000D                        972 	.ds 1
                           00000E   973 Ftasks$xNextTaskUnblockTime$0_0$0==.
      00000E                        974 _xNextTaskUnblockTime:
      00000E                        975 	.ds 2
                           000010   976 Ftasks$xIdleTaskHandle$0_0$0==.
      000010                        977 _xIdleTaskHandle:
      000010                        978 	.ds 3
                           000013   979 Ftasks$uxSchedulerSuspended$0_0$0==.
      000013                        980 _uxSchedulerSuspended:
      000013                        981 	.ds 1
                                    982 	.area HOME    (CODE)
                                    983 	.area GSINIT0 (CODE)
                                    984 	.area GSINIT1 (CODE)
                                    985 	.area GSINIT2 (CODE)
                                    986 	.area GSINIT3 (CODE)
                                    987 	.area GSINIT4 (CODE)
                                    988 	.area GSINIT5 (CODE)
                                    989 	.area GSINIT  (CODE)
                                    990 	.area GSFINAL (CODE)
                                    991 	.area CSEG    (CODE)
                                    992 ;--------------------------------------------------------
                                    993 ; global & static initialisations
                                    994 ;--------------------------------------------------------
                                    995 	.area HOME    (CODE)
                                    996 	.area GSINIT  (CODE)
                                    997 	.area GSFINAL (CODE)
                                    998 	.area GSINIT  (CODE)
                                    999 ;--------------------------------------------------------
                                   1000 ; Home
                                   1001 ;--------------------------------------------------------
                                   1002 	.area HOME    (CODE)
                                   1003 	.area HOME    (CODE)
                                   1004 ;--------------------------------------------------------
                                   1005 ; code
                                   1006 ;--------------------------------------------------------
                                   1007 	.area CSEG    (CODE)
                                   1008 ;------------------------------------------------------------
                                   1009 ;Allocation info for local variables in function 'xTaskCreate'
                                   1010 ;------------------------------------------------------------
                                   1011 ;pcName                    Allocated to stack - _bp -5
                                   1012 ;usStackDepth              Allocated to stack - _bp -7
                                   1013 ;pvParameters              Allocated to stack - _bp -10
                                   1014 ;uxPriority                Allocated to stack - _bp -11
                                   1015 ;pxCreatedTask             Allocated to stack - _bp -14
                                   1016 ;pxTaskCode                Allocated to registers r6 r7 
                                   1017 ;pxNewTCB                  Allocated to stack - _bp +1
                                   1018 ;xReturn                   Allocated to registers r7 
                                   1019 ;------------------------------------------------------------
                           000000  1020 	G$xTaskCreate$0$0 ==.
                           000000  1021 	C$tasks.c$728$0_0$161 ==.
                                   1022 ;	tasks.c:728: BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
                                   1023 ;	-----------------------------------------
                                   1024 ;	 function xTaskCreate
                                   1025 ;	-----------------------------------------
      000000                       1026 _xTaskCreate:
                           000007  1027 	ar7 = 0x07
                           000006  1028 	ar6 = 0x06
                           000005  1029 	ar5 = 0x05
                           000004  1030 	ar4 = 0x04
                           000003  1031 	ar3 = 0x03
                           000002  1032 	ar2 = 0x02
                           000001  1033 	ar1 = 0x01
                           000000  1034 	ar0 = 0x00
      000000 C0*00            [24] 1035 	push	_bp
      000002 85 81*00         [24] 1036 	mov	_bp,sp
      000005 05 81            [12] 1037 	inc	sp
      000007 05 81            [12] 1038 	inc	sp
      000009 05 81            [12] 1039 	inc	sp
      00000B AE 82            [24] 1040 	mov	r6,dpl
      00000D AF 83            [24] 1041 	mov	r7,dph
                           00000F  1042 	C$tasks.c$746$2_0$162 ==.
                                   1043 ;	tasks.c:746: pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
      00000F 75 82 33         [24] 1044 	mov	dpl,#0x33
      000012 75 83 00         [24] 1045 	mov	dph,#0x00
      000015 C0 07            [24] 1046 	push	ar7
      000017 C0 06            [24] 1047 	push	ar6
      000019 12r00r00         [24] 1048 	lcall	_pvPortMalloc
      00001C AB 82            [24] 1049 	mov	r3,dpl
      00001E AC 83            [24] 1050 	mov	r4,dph
      000020 AD F0            [24] 1051 	mov	r5,b
      000022 D0 06            [24] 1052 	pop	ar6
      000024 D0 07            [24] 1053 	pop	ar7
      000026 A8*00            [24] 1054 	mov	r0,_bp
      000028 08               [12] 1055 	inc	r0
      000029 A6 03            [24] 1056 	mov	@r0,ar3
      00002B 08               [12] 1057 	inc	r0
      00002C A6 04            [24] 1058 	mov	@r0,ar4
      00002E 08               [12] 1059 	inc	r0
      00002F A6 05            [24] 1060 	mov	@r0,ar5
                           000031  1061 	C$tasks.c$748$2_0$162 ==.
                                   1062 ;	tasks.c:748: if( pxNewTCB != NULL )
      000031 A8*00            [24] 1063 	mov	r0,_bp
      000033 08               [12] 1064 	inc	r0
      000034 E6               [12] 1065 	mov	a,@r0
      000035 08               [12] 1066 	inc	r0
      000036 46               [12] 1067 	orl	a,@r0
      000037 70 03            [24] 1068 	jnz	00122$
      000039 02r00rB8         [24] 1069 	ljmp	00104$
      00003C                       1070 00122$:
                           00003C  1071 	C$tasks.c$753$1_0$161 ==.
                                   1072 ;	tasks.c:753: pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      00003C C0 06            [24] 1073 	push	ar6
      00003E C0 07            [24] 1074 	push	ar7
      000040 A8*00            [24] 1075 	mov	r0,_bp
      000042 08               [12] 1076 	inc	r0
      000043 74 20            [12] 1077 	mov	a,#0x20
      000045 26               [12] 1078 	add	a,@r0
      000046 FA               [12] 1079 	mov	r2,a
      000047 74 00            [12] 1080 	mov	a,#0x00
      000049 08               [12] 1081 	inc	r0
      00004A 36               [12] 1082 	addc	a,@r0
      00004B FE               [12] 1083 	mov	r6,a
      00004C 08               [12] 1084 	inc	r0
      00004D 86 07            [24] 1085 	mov	ar7,@r0
      00004F E5*00            [12] 1086 	mov	a,_bp
      000051 24 F9            [12] 1087 	add	a,#0xf9
      000053 F8               [12] 1088 	mov	r0,a
      000054 86 04            [24] 1089 	mov	ar4,@r0
      000056 08               [12] 1090 	inc	r0
      000057 86 05            [24] 1091 	mov	ar5,@r0
      000059 8C 82            [24] 1092 	mov	dpl,r4
      00005B 8D 83            [24] 1093 	mov	dph,r5
      00005D C0 07            [24] 1094 	push	ar7
      00005F C0 06            [24] 1095 	push	ar6
      000061 C0 02            [24] 1096 	push	ar2
      000063 12r00r00         [24] 1097 	lcall	_pvPortMalloc
      000066 AB 82            [24] 1098 	mov	r3,dpl
      000068 AC 83            [24] 1099 	mov	r4,dph
      00006A AD F0            [24] 1100 	mov	r5,b
      00006C D0 02            [24] 1101 	pop	ar2
      00006E D0 06            [24] 1102 	pop	ar6
      000070 D0 07            [24] 1103 	pop	ar7
      000072 8A 82            [24] 1104 	mov	dpl,r2
      000074 8E 83            [24] 1105 	mov	dph,r6
      000076 8F F0            [24] 1106 	mov	b,r7
      000078 EB               [12] 1107 	mov	a,r3
      000079 12r00r00         [24] 1108 	lcall	__gptrput
      00007C A3               [24] 1109 	inc	dptr
      00007D EC               [12] 1110 	mov	a,r4
      00007E 12r00r00         [24] 1111 	lcall	__gptrput
      000081 A3               [24] 1112 	inc	dptr
      000082 ED               [12] 1113 	mov	a,r5
      000083 12r00r00         [24] 1114 	lcall	__gptrput
                           000086  1115 	C$tasks.c$755$1_0$161 ==.
                                   1116 ;	tasks.c:755: if( pxNewTCB->pxStack == NULL )
      000086 D0 07            [24] 1117 	pop	ar7
      000088 D0 06            [24] 1118 	pop	ar6
      00008A EB               [12] 1119 	mov	a,r3
      00008B 4C               [12] 1120 	orl	a,r4
      00008C 60 03            [24] 1121 	jz	00123$
      00008E 02r00rB8         [24] 1122 	ljmp	00104$
      000091                       1123 00123$:
                           000091  1124 	C$tasks.c$758$4_0$164 ==.
                                   1125 ;	tasks.c:758: vPortFree( pxNewTCB );
      000091 A8*00            [24] 1126 	mov	r0,_bp
      000093 08               [12] 1127 	inc	r0
      000094 86 03            [24] 1128 	mov	ar3,@r0
      000096 08               [12] 1129 	inc	r0
      000097 86 04            [24] 1130 	mov	ar4,@r0
      000099 08               [12] 1131 	inc	r0
      00009A 86 05            [24] 1132 	mov	ar5,@r0
      00009C 8B 82            [24] 1133 	mov	dpl,r3
      00009E 8C 83            [24] 1134 	mov	dph,r4
      0000A0 8D F0            [24] 1135 	mov	b,r5
      0000A2 C0 07            [24] 1136 	push	ar7
      0000A4 C0 06            [24] 1137 	push	ar6
      0000A6 12r00r00         [24] 1138 	lcall	_vPortFree
      0000A9 D0 06            [24] 1139 	pop	ar6
      0000AB D0 07            [24] 1140 	pop	ar7
                           0000AD  1141 	C$tasks.c$759$4_0$164 ==.
                                   1142 ;	tasks.c:759: pxNewTCB = NULL;
      0000AD A8*00            [24] 1143 	mov	r0,_bp
      0000AF 08               [12] 1144 	inc	r0
      0000B0 74 00            [12] 1145 	mov	a,#0x00
      0000B2 F6               [12] 1146 	mov	@r0,a
      0000B3 08               [12] 1147 	inc	r0
      0000B4 F6               [12] 1148 	mov	@r0,a
      0000B5 08               [12] 1149 	inc	r0
      0000B6 76 00            [12] 1150 	mov	@r0,#0x00
      0000B8                       1151 00104$:
                           0000B8  1152 	C$tasks.c$794$1_0$161 ==.
                                   1153 ;	tasks.c:794: if( pxNewTCB != NULL )
      0000B8 A8*00            [24] 1154 	mov	r0,_bp
      0000BA 08               [12] 1155 	inc	r0
      0000BB E6               [12] 1156 	mov	a,@r0
      0000BC 08               [12] 1157 	inc	r0
      0000BD 46               [12] 1158 	orl	a,@r0
      0000BE 70 03            [24] 1159 	jnz	00124$
      0000C0 02r01r47         [24] 1160 	ljmp	00106$
      0000C3                       1161 00124$:
                           0000C3  1162 	C$tasks.c$804$2_0$165 ==.
                                   1163 ;	tasks.c:804: prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
      0000C3 E5*00            [12] 1164 	mov	a,_bp
      0000C5 24 F9            [12] 1165 	add	a,#0xf9
      0000C7 F8               [12] 1166 	mov	r0,a
      0000C8 86 02            [24] 1167 	mov	ar2,@r0
      0000CA 08               [12] 1168 	inc	r0
      0000CB 86 03            [24] 1169 	mov	ar3,@r0
      0000CD 7C 00            [12] 1170 	mov	r4,#0x00
      0000CF 7D 00            [12] 1171 	mov	r5,#0x00
      0000D1 74 00            [12] 1172 	mov	a,#0x00
      0000D3 C0 E0            [24] 1173 	push	acc
      0000D5 C0 E0            [24] 1174 	push	acc
      0000D7 C0 E0            [24] 1175 	push	acc
      0000D9 A8*00            [24] 1176 	mov	r0,_bp
      0000DB 08               [12] 1177 	inc	r0
      0000DC E6               [12] 1178 	mov	a,@r0
      0000DD C0 E0            [24] 1179 	push	acc
      0000DF 08               [12] 1180 	inc	r0
      0000E0 E6               [12] 1181 	mov	a,@r0
      0000E1 C0 E0            [24] 1182 	push	acc
      0000E3 08               [12] 1183 	inc	r0
      0000E4 E6               [12] 1184 	mov	a,@r0
      0000E5 C0 E0            [24] 1185 	push	acc
      0000E7 E5*00            [12] 1186 	mov	a,_bp
      0000E9 24 F2            [12] 1187 	add	a,#0xf2
      0000EB F8               [12] 1188 	mov	r0,a
      0000EC E6               [12] 1189 	mov	a,@r0
      0000ED C0 E0            [24] 1190 	push	acc
      0000EF 08               [12] 1191 	inc	r0
      0000F0 E6               [12] 1192 	mov	a,@r0
      0000F1 C0 E0            [24] 1193 	push	acc
      0000F3 08               [12] 1194 	inc	r0
      0000F4 E6               [12] 1195 	mov	a,@r0
      0000F5 C0 E0            [24] 1196 	push	acc
      0000F7 E5*00            [12] 1197 	mov	a,_bp
      0000F9 24 F5            [12] 1198 	add	a,#0xf5
      0000FB F8               [12] 1199 	mov	r0,a
      0000FC E6               [12] 1200 	mov	a,@r0
      0000FD C0 E0            [24] 1201 	push	acc
      0000FF E5*00            [12] 1202 	mov	a,_bp
      000101 24 F6            [12] 1203 	add	a,#0xf6
      000103 F8               [12] 1204 	mov	r0,a
      000104 E6               [12] 1205 	mov	a,@r0
      000105 C0 E0            [24] 1206 	push	acc
      000107 08               [12] 1207 	inc	r0
      000108 E6               [12] 1208 	mov	a,@r0
      000109 C0 E0            [24] 1209 	push	acc
      00010B 08               [12] 1210 	inc	r0
      00010C E6               [12] 1211 	mov	a,@r0
      00010D C0 E0            [24] 1212 	push	acc
      00010F C0 02            [24] 1213 	push	ar2
      000111 C0 03            [24] 1214 	push	ar3
      000113 C0 04            [24] 1215 	push	ar4
      000115 C0 05            [24] 1216 	push	ar5
      000117 E5*00            [12] 1217 	mov	a,_bp
      000119 24 FB            [12] 1218 	add	a,#0xfb
      00011B F8               [12] 1219 	mov	r0,a
      00011C E6               [12] 1220 	mov	a,@r0
      00011D C0 E0            [24] 1221 	push	acc
      00011F 08               [12] 1222 	inc	r0
      000120 E6               [12] 1223 	mov	a,@r0
      000121 C0 E0            [24] 1224 	push	acc
      000123 08               [12] 1225 	inc	r0
      000124 E6               [12] 1226 	mov	a,@r0
      000125 C0 E0            [24] 1227 	push	acc
      000127 8E 82            [24] 1228 	mov	dpl,r6
      000129 8F 83            [24] 1229 	mov	dph,r7
      00012B 12r01r51         [24] 1230 	lcall	_prvInitialiseNewTask
      00012E E5 81            [12] 1231 	mov	a,sp
      000130 24 EC            [12] 1232 	add	a,#0xec
      000132 F5 81            [12] 1233 	mov	sp,a
                           000134  1234 	C$tasks.c$805$2_0$165 ==.
                                   1235 ;	tasks.c:805: prvAddNewTaskToReadyList( pxNewTCB );
      000134 A8*00            [24] 1236 	mov	r0,_bp
      000136 08               [12] 1237 	inc	r0
      000137 86 82            [24] 1238 	mov	dpl,@r0
      000139 08               [12] 1239 	inc	r0
      00013A 86 83            [24] 1240 	mov	dph,@r0
      00013C 08               [12] 1241 	inc	r0
      00013D 86 F0            [24] 1242 	mov	b,@r0
      00013F 12r04rA6         [24] 1243 	lcall	_prvAddNewTaskToReadyList
                           000142  1244 	C$tasks.c$806$2_0$165 ==.
                                   1245 ;	tasks.c:806: xReturn = pdPASS;
      000142 7F 01            [12] 1246 	mov	r7,#0x01
      000144 02r01r49         [24] 1247 	ljmp	00107$
      000147                       1248 00106$:
                           000147  1249 	C$tasks.c$810$2_0$166 ==.
                                   1250 ;	tasks.c:810: xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
      000147 7F FF            [12] 1251 	mov	r7,#0xff
      000149                       1252 00107$:
                           000149  1253 	C$tasks.c$813$1_0$161 ==.
                                   1254 ;	tasks.c:813: return xReturn;
      000149 8F 82            [24] 1255 	mov	dpl,r7
      00014B                       1256 00108$:
                           00014B  1257 	C$tasks.c$814$1_0$161 ==.
                                   1258 ;	tasks.c:814: }
      00014B 85*00 81         [24] 1259 	mov	sp,_bp
      00014E D0*00            [24] 1260 	pop	_bp
                           000150  1261 	C$tasks.c$814$1_0$161 ==.
                           000150  1262 	XG$xTaskCreate$0$0 ==.
      000150 22               [24] 1263 	ret
                                   1264 ;------------------------------------------------------------
                                   1265 ;Allocation info for local variables in function 'prvInitialiseNewTask'
                                   1266 ;------------------------------------------------------------
                                   1267 ;pcName                    Allocated to stack - _bp -5
                                   1268 ;ulStackDepth              Allocated to stack - _bp -9
                                   1269 ;pvParameters              Allocated to stack - _bp -12
                                   1270 ;uxPriority                Allocated to stack - _bp -13
                                   1271 ;pxCreatedTask             Allocated to stack - _bp -16
                                   1272 ;pxNewTCB                  Allocated to stack - _bp -19
                                   1273 ;xRegions                  Allocated to stack - _bp -22
                                   1274 ;pxTaskCode                Allocated to stack - _bp +1
                                   1275 ;pxTopOfStack              Allocated to stack - _bp +12
                                   1276 ;x                         Allocated to registers r3 
                                   1277 ;sloc0                     Allocated to stack - _bp +6
                                   1278 ;sloc1                     Allocated to stack - _bp +9
                                   1279 ;sloc2                     Allocated to stack - _bp +3
                                   1280 ;------------------------------------------------------------
                           000151  1281 	Ftasks$prvInitialiseNewTask$0$0 ==.
                           000151  1282 	C$tasks.c$819$1_0$168 ==.
                                   1283 ;	tasks.c:819: static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
                                   1284 ;	-----------------------------------------
                                   1285 ;	 function prvInitialiseNewTask
                                   1286 ;	-----------------------------------------
      000151                       1287 _prvInitialiseNewTask:
      000151 C0*00            [24] 1288 	push	_bp
      000153 85 81*00         [24] 1289 	mov	_bp,sp
      000156 C0 82            [24] 1290 	push	dpl
      000158 C0 83            [24] 1291 	push	dph
      00015A E5 81            [12] 1292 	mov	a,sp
      00015C 24 0C            [12] 1293 	add	a,#0x0c
      00015E F5 81            [12] 1294 	mov	sp,a
                           000160  1295 	C$tasks.c$876$2_0$169 ==.
                                   1296 ;	tasks.c:876: pxTopOfStack = pxNewTCB->pxStack;
      000160 E5*00            [12] 1297 	mov	a,_bp
      000162 24 ED            [12] 1298 	add	a,#0xed
      000164 F8               [12] 1299 	mov	r0,a
      000165 E5*00            [12] 1300 	mov	a,_bp
      000167 24 03            [12] 1301 	add	a,#0x03
      000169 F9               [12] 1302 	mov	r1,a
      00016A E6               [12] 1303 	mov	a,@r0
      00016B F7               [12] 1304 	mov	@r1,a
      00016C 08               [12] 1305 	inc	r0
      00016D E6               [12] 1306 	mov	a,@r0
      00016E 09               [12] 1307 	inc	r1
      00016F F7               [12] 1308 	mov	@r1,a
      000170 08               [12] 1309 	inc	r0
      000171 E6               [12] 1310 	mov	a,@r0
      000172 09               [12] 1311 	inc	r1
      000173 F7               [12] 1312 	mov	@r1,a
      000174 E5*00            [12] 1313 	mov	a,_bp
      000176 24 03            [12] 1314 	add	a,#0x03
      000178 F8               [12] 1315 	mov	r0,a
      000179 74 20            [12] 1316 	mov	a,#0x20
      00017B 26               [12] 1317 	add	a,@r0
      00017C FA               [12] 1318 	mov	r2,a
      00017D 74 00            [12] 1319 	mov	a,#0x00
      00017F 08               [12] 1320 	inc	r0
      000180 36               [12] 1321 	addc	a,@r0
      000181 FE               [12] 1322 	mov	r6,a
      000182 08               [12] 1323 	inc	r0
      000183 86 07            [24] 1324 	mov	ar7,@r0
      000185 8A 82            [24] 1325 	mov	dpl,r2
      000187 8E 83            [24] 1326 	mov	dph,r6
      000189 8F F0            [24] 1327 	mov	b,r7
      00018B E5*00            [12] 1328 	mov	a,_bp
      00018D 24 0C            [12] 1329 	add	a,#0x0c
      00018F F8               [12] 1330 	mov	r0,a
      000190 12r00r00         [24] 1331 	lcall	__gptrget
      000193 F6               [12] 1332 	mov	@r0,a
      000194 A3               [24] 1333 	inc	dptr
      000195 12r00r00         [24] 1334 	lcall	__gptrget
      000198 08               [12] 1335 	inc	r0
      000199 F6               [12] 1336 	mov	@r0,a
      00019A A3               [24] 1337 	inc	dptr
      00019B 12r00r00         [24] 1338 	lcall	__gptrget
      00019E 08               [12] 1339 	inc	r0
      00019F F6               [12] 1340 	mov	@r0,a
      0001A0 E5*00            [12] 1341 	mov	a,_bp
      0001A2 24 0C            [12] 1342 	add	a,#0x0c
      0001A4 F8               [12] 1343 	mov	r0,a
      0001A5 E5*00            [12] 1344 	mov	a,_bp
      0001A7 24 06            [12] 1345 	add	a,#0x06
      0001A9 F9               [12] 1346 	mov	r1,a
      0001AA E6               [12] 1347 	mov	a,@r0
      0001AB F7               [12] 1348 	mov	@r1,a
      0001AC 08               [12] 1349 	inc	r0
      0001AD E6               [12] 1350 	mov	a,@r0
      0001AE 09               [12] 1351 	inc	r1
      0001AF F7               [12] 1352 	mov	@r1,a
      0001B0 08               [12] 1353 	inc	r0
      0001B1 E6               [12] 1354 	mov	a,@r0
      0001B2 09               [12] 1355 	inc	r1
      0001B3 F7               [12] 1356 	mov	@r1,a
                           0001B4  1357 	C$tasks.c$883$2_0$169 ==.
                                   1358 ;	tasks.c:883: pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
      0001B4 E5*00            [12] 1359 	mov	a,_bp
      0001B6 24 03            [12] 1360 	add	a,#0x03
      0001B8 F8               [12] 1361 	mov	r0,a
      0001B9 E5*00            [12] 1362 	mov	a,_bp
      0001BB 24 09            [12] 1363 	add	a,#0x09
      0001BD F9               [12] 1364 	mov	r1,a
      0001BE 74 2B            [12] 1365 	mov	a,#0x2b
      0001C0 26               [12] 1366 	add	a,@r0
      0001C1 F7               [12] 1367 	mov	@r1,a
      0001C2 74 00            [12] 1368 	mov	a,#0x00
      0001C4 08               [12] 1369 	inc	r0
      0001C5 36               [12] 1370 	addc	a,@r0
      0001C6 09               [12] 1371 	inc	r1
      0001C7 F7               [12] 1372 	mov	@r1,a
      0001C8 08               [12] 1373 	inc	r0
      0001C9 E6               [12] 1374 	mov	a,@r0
      0001CA 09               [12] 1375 	inc	r1
      0001CB F7               [12] 1376 	mov	@r1,a
      0001CC E5*00            [12] 1377 	mov	a,_bp
      0001CE 24 F7            [12] 1378 	add	a,#0xf7
      0001D0 F8               [12] 1379 	mov	r0,a
      0001D1 E6               [12] 1380 	mov	a,@r0
      0001D2 24 FF            [12] 1381 	add	a,#0xff
      0001D4 FA               [12] 1382 	mov	r2,a
      0001D5 08               [12] 1383 	inc	r0
      0001D6 E6               [12] 1384 	mov	a,@r0
      0001D7 34 FF            [12] 1385 	addc	a,#0xff
      0001D9 FE               [12] 1386 	mov	r6,a
      0001DA 08               [12] 1387 	inc	r0
      0001DB E6               [12] 1388 	mov	a,@r0
      0001DC 34 FF            [12] 1389 	addc	a,#0xff
      0001DE FD               [12] 1390 	mov	r5,a
      0001DF 08               [12] 1391 	inc	r0
      0001E0 E6               [12] 1392 	mov	a,@r0
      0001E1 34 FF            [12] 1393 	addc	a,#0xff
      0001E3 FF               [12] 1394 	mov	r7,a
      0001E4 E5*00            [12] 1395 	mov	a,_bp
      0001E6 24 0C            [12] 1396 	add	a,#0x0c
      0001E8 F8               [12] 1397 	mov	r0,a
      0001E9 EA               [12] 1398 	mov	a,r2
      0001EA 26               [12] 1399 	add	a,@r0
      0001EB FA               [12] 1400 	mov	r2,a
      0001EC EE               [12] 1401 	mov	a,r6
      0001ED 08               [12] 1402 	inc	r0
      0001EE 36               [12] 1403 	addc	a,@r0
      0001EF FE               [12] 1404 	mov	r6,a
      0001F0 08               [12] 1405 	inc	r0
      0001F1 86 05            [24] 1406 	mov	ar5,@r0
      0001F3 E5*00            [12] 1407 	mov	a,_bp
      0001F5 24 09            [12] 1408 	add	a,#0x09
      0001F7 F8               [12] 1409 	mov	r0,a
      0001F8 86 82            [24] 1410 	mov	dpl,@r0
      0001FA 08               [12] 1411 	inc	r0
      0001FB 86 83            [24] 1412 	mov	dph,@r0
      0001FD 08               [12] 1413 	inc	r0
      0001FE 86 F0            [24] 1414 	mov	b,@r0
      000200 EA               [12] 1415 	mov	a,r2
      000201 12r00r00         [24] 1416 	lcall	__gptrput
      000204 A3               [24] 1417 	inc	dptr
      000205 EE               [12] 1418 	mov	a,r6
      000206 12r00r00         [24] 1419 	lcall	__gptrput
      000209 A3               [24] 1420 	inc	dptr
      00020A ED               [12] 1421 	mov	a,r5
      00020B 12r00r00         [24] 1422 	lcall	__gptrput
                           00020E  1423 	C$tasks.c$888$1_0$168 ==.
                                   1424 ;	tasks.c:888: if( pcName != NULL )
      00020E E5*00            [12] 1425 	mov	a,_bp
      000210 24 FB            [12] 1426 	add	a,#0xfb
      000212 F8               [12] 1427 	mov	r0,a
      000213 E6               [12] 1428 	mov	a,@r0
      000214 08               [12] 1429 	inc	r0
      000215 46               [12] 1430 	orl	a,@r0
      000216 70 03            [24] 1431 	jnz	00136$
      000218 02r02rAB         [24] 1432 	ljmp	00105$
      00021B                       1433 00136$:
                           00021B  1434 	C$tasks.c$890$4_0$172 ==.
                                   1435 ;	tasks.c:890: for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
      00021B E5*00            [12] 1436 	mov	a,_bp
      00021D 24 03            [12] 1437 	add	a,#0x03
      00021F F8               [12] 1438 	mov	r0,a
      000220 74 23            [12] 1439 	mov	a,#0x23
      000222 26               [12] 1440 	add	a,@r0
      000223 FD               [12] 1441 	mov	r5,a
      000224 74 00            [12] 1442 	mov	a,#0x00
      000226 08               [12] 1443 	inc	r0
      000227 36               [12] 1444 	addc	a,@r0
      000228 FE               [12] 1445 	mov	r6,a
      000229 08               [12] 1446 	inc	r0
      00022A 86 07            [24] 1447 	mov	ar7,@r0
      00022C 7B 00            [12] 1448 	mov	r3,#0x00
      00022E                       1449 00111$:
                           00022E  1450 	C$tasks.c$892$4_0$172 ==.
                                   1451 ;	tasks.c:892: pxNewTCB->pcTaskName[ x ] = pcName[ x ];
      00022E E5*00            [12] 1452 	mov	a,_bp
      000230 24 09            [12] 1453 	add	a,#0x09
      000232 F8               [12] 1454 	mov	r0,a
      000233 EB               [12] 1455 	mov	a,r3
      000234 2D               [12] 1456 	add	a,r5
      000235 F6               [12] 1457 	mov	@r0,a
      000236 74 00            [12] 1458 	mov	a,#0x00
      000238 3E               [12] 1459 	addc	a,r6
      000239 08               [12] 1460 	inc	r0
      00023A F6               [12] 1461 	mov	@r0,a
      00023B 08               [12] 1462 	inc	r0
      00023C A6 07            [24] 1463 	mov	@r0,ar7
      00023E C0 05            [24] 1464 	push	ar5
      000240 C0 06            [24] 1465 	push	ar6
      000242 C0 07            [24] 1466 	push	ar7
      000244 E5*00            [12] 1467 	mov	a,_bp
      000246 24 FB            [12] 1468 	add	a,#0xfb
      000248 F8               [12] 1469 	mov	r0,a
      000249 EB               [12] 1470 	mov	a,r3
      00024A 26               [12] 1471 	add	a,@r0
      00024B FD               [12] 1472 	mov	r5,a
      00024C 74 00            [12] 1473 	mov	a,#0x00
      00024E 08               [12] 1474 	inc	r0
      00024F 36               [12] 1475 	addc	a,@r0
      000250 FE               [12] 1476 	mov	r6,a
      000251 08               [12] 1477 	inc	r0
      000252 86 07            [24] 1478 	mov	ar7,@r0
      000254 8D 82            [24] 1479 	mov	dpl,r5
      000256 8E 83            [24] 1480 	mov	dph,r6
      000258 8F F0            [24] 1481 	mov	b,r7
      00025A 12r00r00         [24] 1482 	lcall	__gptrget
      00025D FC               [12] 1483 	mov	r4,a
      00025E E5*00            [12] 1484 	mov	a,_bp
      000260 24 09            [12] 1485 	add	a,#0x09
      000262 F8               [12] 1486 	mov	r0,a
      000263 86 82            [24] 1487 	mov	dpl,@r0
      000265 08               [12] 1488 	inc	r0
      000266 86 83            [24] 1489 	mov	dph,@r0
      000268 08               [12] 1490 	inc	r0
      000269 86 F0            [24] 1491 	mov	b,@r0
      00026B EC               [12] 1492 	mov	a,r4
      00026C 12r00r00         [24] 1493 	lcall	__gptrput
                           00026F  1494 	C$tasks.c$897$4_0$172 ==.
                                   1495 ;	tasks.c:897: if( pcName[ x ] == ( char ) 0x00 )
      00026F 8D 82            [24] 1496 	mov	dpl,r5
      000271 8E 83            [24] 1497 	mov	dph,r6
      000273 8F F0            [24] 1498 	mov	b,r7
      000275 12r00r00         [24] 1499 	lcall	__gptrget
      000278 D0 07            [24] 1500 	pop	ar7
      00027A D0 06            [24] 1501 	pop	ar6
      00027C D0 05            [24] 1502 	pop	ar5
      00027E 70 03            [24] 1503 	jnz	00137$
      000280 02r02r8C         [24] 1504 	ljmp	00103$
      000283                       1505 00137$:
                           000283  1506 	C$tasks.c$890$3_0$171 ==.
                                   1507 ;	tasks.c:890: for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
      000283 0B               [12] 1508 	inc	r3
      000284 BB 08 00         [24] 1509 	cjne	r3,#0x08,00138$
      000287                       1510 00138$:
      000287 50 03            [24] 1511 	jnc	00139$
      000289 02r02r2E         [24] 1512 	ljmp	00111$
      00028C                       1513 00139$:
      00028C                       1514 00103$:
                           00028C  1515 	C$tasks.c$909$2_0$170 ==.
                                   1516 ;	tasks.c:909: pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
      00028C E5*00            [12] 1517 	mov	a,_bp
      00028E 24 03            [12] 1518 	add	a,#0x03
      000290 F8               [12] 1519 	mov	r0,a
      000291 74 2A            [12] 1520 	mov	a,#0x2a
      000293 26               [12] 1521 	add	a,@r0
      000294 FD               [12] 1522 	mov	r5,a
      000295 74 00            [12] 1523 	mov	a,#0x00
      000297 08               [12] 1524 	inc	r0
      000298 36               [12] 1525 	addc	a,@r0
      000299 FE               [12] 1526 	mov	r6,a
      00029A 08               [12] 1527 	inc	r0
      00029B 86 07            [24] 1528 	mov	ar7,@r0
      00029D 8D 82            [24] 1529 	mov	dpl,r5
      00029F 8E 83            [24] 1530 	mov	dph,r6
      0002A1 8F F0            [24] 1531 	mov	b,r7
      0002A3 74 00            [12] 1532 	mov	a,#0x00
      0002A5 12r00r00         [24] 1533 	lcall	__gptrput
      0002A8 02r02rC7         [24] 1534 	ljmp	00106$
      0002AB                       1535 00105$:
                           0002AB  1536 	C$tasks.c$915$2_0$175 ==.
                                   1537 ;	tasks.c:915: pxNewTCB->pcTaskName[ 0 ] = 0x00;
      0002AB E5*00            [12] 1538 	mov	a,_bp
      0002AD 24 03            [12] 1539 	add	a,#0x03
      0002AF F8               [12] 1540 	mov	r0,a
      0002B0 74 23            [12] 1541 	mov	a,#0x23
      0002B2 26               [12] 1542 	add	a,@r0
      0002B3 FD               [12] 1543 	mov	r5,a
      0002B4 74 00            [12] 1544 	mov	a,#0x00
      0002B6 08               [12] 1545 	inc	r0
      0002B7 36               [12] 1546 	addc	a,@r0
      0002B8 FE               [12] 1547 	mov	r6,a
      0002B9 08               [12] 1548 	inc	r0
      0002BA 86 07            [24] 1549 	mov	ar7,@r0
      0002BC 8D 82            [24] 1550 	mov	dpl,r5
      0002BE 8E 83            [24] 1551 	mov	dph,r6
      0002C0 8F F0            [24] 1552 	mov	b,r7
      0002C2 74 00            [12] 1553 	mov	a,#0x00
      0002C4 12r00r00         [24] 1554 	lcall	__gptrput
      0002C7                       1555 00106$:
                           0002C7  1556 	C$tasks.c$921$1_0$168 ==.
                                   1557 ;	tasks.c:921: if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
      0002C7 E5*00            [12] 1558 	mov	a,_bp
      0002C9 24 F3            [12] 1559 	add	a,#0xf3
      0002CB F8               [12] 1560 	mov	r0,a
      0002CC B6 04 00         [24] 1561 	cjne	@r0,#0x04,00140$
      0002CF                       1562 00140$:
      0002CF 50 03            [24] 1563 	jnc	00141$
      0002D1 02r02rDB         [24] 1564 	ljmp	00108$
      0002D4                       1565 00141$:
                           0002D4  1566 	C$tasks.c$923$2_0$176 ==.
                                   1567 ;	tasks.c:923: uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
      0002D4 E5*00            [12] 1568 	mov	a,_bp
      0002D6 24 F3            [12] 1569 	add	a,#0xf3
      0002D8 F8               [12] 1570 	mov	r0,a
      0002D9 76 03            [12] 1571 	mov	@r0,#0x03
      0002DB                       1572 00108$:
                           0002DB  1573 	C$tasks.c$930$1_0$168 ==.
                                   1574 ;	tasks.c:930: pxNewTCB->uxPriority = uxPriority;
      0002DB E5*00            [12] 1575 	mov	a,_bp
      0002DD 24 03            [12] 1576 	add	a,#0x03
      0002DF F8               [12] 1577 	mov	r0,a
      0002E0 74 1F            [12] 1578 	mov	a,#0x1f
      0002E2 26               [12] 1579 	add	a,@r0
      0002E3 FD               [12] 1580 	mov	r5,a
      0002E4 74 00            [12] 1581 	mov	a,#0x00
      0002E6 08               [12] 1582 	inc	r0
      0002E7 36               [12] 1583 	addc	a,@r0
      0002E8 FE               [12] 1584 	mov	r6,a
      0002E9 08               [12] 1585 	inc	r0
      0002EA 86 07            [24] 1586 	mov	ar7,@r0
      0002EC 8D 82            [24] 1587 	mov	dpl,r5
      0002EE 8E 83            [24] 1588 	mov	dph,r6
      0002F0 8F F0            [24] 1589 	mov	b,r7
      0002F2 E5*00            [12] 1590 	mov	a,_bp
      0002F4 24 F3            [12] 1591 	add	a,#0xf3
      0002F6 F8               [12] 1592 	mov	r0,a
      0002F7 E6               [12] 1593 	mov	a,@r0
      0002F8 12r00r00         [24] 1594 	lcall	__gptrput
                           0002FB  1595 	C$tasks.c$938$1_0$168 ==.
                                   1596 ;	tasks.c:938: vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
      0002FB E5*00            [12] 1597 	mov	a,_bp
      0002FD 24 03            [12] 1598 	add	a,#0x03
      0002FF F8               [12] 1599 	mov	r0,a
      000300 74 03            [12] 1600 	mov	a,#0x03
      000302 26               [12] 1601 	add	a,@r0
      000303 FD               [12] 1602 	mov	r5,a
      000304 74 00            [12] 1603 	mov	a,#0x00
      000306 08               [12] 1604 	inc	r0
      000307 36               [12] 1605 	addc	a,@r0
      000308 FE               [12] 1606 	mov	r6,a
      000309 08               [12] 1607 	inc	r0
      00030A 86 07            [24] 1608 	mov	ar7,@r0
      00030C 8D 82            [24] 1609 	mov	dpl,r5
      00030E 8E 83            [24] 1610 	mov	dph,r6
      000310 8F F0            [24] 1611 	mov	b,r7
      000312 12r00r00         [24] 1612 	lcall	_vListInitialiseItem
                           000315  1613 	C$tasks.c$939$1_0$168 ==.
                                   1614 ;	tasks.c:939: vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
      000315 E5*00            [12] 1615 	mov	a,_bp
      000317 24 03            [12] 1616 	add	a,#0x03
      000319 F8               [12] 1617 	mov	r0,a
      00031A 74 11            [12] 1618 	mov	a,#0x11
      00031C 26               [12] 1619 	add	a,@r0
      00031D FD               [12] 1620 	mov	r5,a
      00031E 74 00            [12] 1621 	mov	a,#0x00
      000320 08               [12] 1622 	inc	r0
      000321 36               [12] 1623 	addc	a,@r0
      000322 FE               [12] 1624 	mov	r6,a
      000323 08               [12] 1625 	inc	r0
      000324 86 07            [24] 1626 	mov	ar7,@r0
      000326 8D 82            [24] 1627 	mov	dpl,r5
      000328 8E 83            [24] 1628 	mov	dph,r6
      00032A 8F F0            [24] 1629 	mov	b,r7
      00032C 12r00r00         [24] 1630 	lcall	_vListInitialiseItem
                           00032F  1631 	C$tasks.c$943$1_0$168 ==.
                                   1632 ;	tasks.c:943: listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
      00032F E5*00            [12] 1633 	mov	a,_bp
      000331 24 03            [12] 1634 	add	a,#0x03
      000333 F8               [12] 1635 	mov	r0,a
      000334 74 0B            [12] 1636 	mov	a,#0x0b
      000336 26               [12] 1637 	add	a,@r0
      000337 FD               [12] 1638 	mov	r5,a
      000338 74 00            [12] 1639 	mov	a,#0x00
      00033A 08               [12] 1640 	inc	r0
      00033B 36               [12] 1641 	addc	a,@r0
      00033C FE               [12] 1642 	mov	r6,a
      00033D 08               [12] 1643 	inc	r0
      00033E 86 07            [24] 1644 	mov	ar7,@r0
      000340 E5*00            [12] 1645 	mov	a,_bp
      000342 24 ED            [12] 1646 	add	a,#0xed
      000344 F8               [12] 1647 	mov	r0,a
      000345 86 02            [24] 1648 	mov	ar2,@r0
      000347 08               [12] 1649 	inc	r0
      000348 86 03            [24] 1650 	mov	ar3,@r0
      00034A 08               [12] 1651 	inc	r0
      00034B 86 04            [24] 1652 	mov	ar4,@r0
      00034D 8D 82            [24] 1653 	mov	dpl,r5
      00034F 8E 83            [24] 1654 	mov	dph,r6
      000351 8F F0            [24] 1655 	mov	b,r7
      000353 EA               [12] 1656 	mov	a,r2
      000354 12r00r00         [24] 1657 	lcall	__gptrput
      000357 A3               [24] 1658 	inc	dptr
      000358 EB               [12] 1659 	mov	a,r3
      000359 12r00r00         [24] 1660 	lcall	__gptrput
      00035C A3               [24] 1661 	inc	dptr
      00035D EC               [12] 1662 	mov	a,r4
      00035E 12r00r00         [24] 1663 	lcall	__gptrput
                           000361  1664 	C$tasks.c$946$1_0$168 ==.
                                   1665 ;	tasks.c:946: listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      000361 E5*00            [12] 1666 	mov	a,_bp
      000363 24 03            [12] 1667 	add	a,#0x03
      000365 F8               [12] 1668 	mov	r0,a
      000366 E5*00            [12] 1669 	mov	a,_bp
      000368 24 09            [12] 1670 	add	a,#0x09
      00036A F9               [12] 1671 	mov	r1,a
      00036B 74 11            [12] 1672 	mov	a,#0x11
      00036D 26               [12] 1673 	add	a,@r0
      00036E F7               [12] 1674 	mov	@r1,a
      00036F 74 00            [12] 1675 	mov	a,#0x00
      000371 08               [12] 1676 	inc	r0
      000372 36               [12] 1677 	addc	a,@r0
      000373 09               [12] 1678 	inc	r1
      000374 F7               [12] 1679 	mov	@r1,a
      000375 08               [12] 1680 	inc	r0
      000376 E6               [12] 1681 	mov	a,@r0
      000377 09               [12] 1682 	inc	r1
      000378 F7               [12] 1683 	mov	@r1,a
      000379 E5*00            [12] 1684 	mov	a,_bp
      00037B 24 F3            [12] 1685 	add	a,#0xf3
      00037D F8               [12] 1686 	mov	r0,a
      00037E 86 07            [24] 1687 	mov	ar7,@r0
      000380 7E 00            [12] 1688 	mov	r6,#0x00
      000382 74 04            [12] 1689 	mov	a,#0x04
      000384 C3               [12] 1690 	clr	c
      000385 9F               [12] 1691 	subb	a,r7
      000386 FF               [12] 1692 	mov	r7,a
      000387 74 00            [12] 1693 	mov	a,#0x00
      000389 9E               [12] 1694 	subb	a,r6
      00038A FE               [12] 1695 	mov	r6,a
      00038B E5*00            [12] 1696 	mov	a,_bp
      00038D 24 09            [12] 1697 	add	a,#0x09
      00038F F8               [12] 1698 	mov	r0,a
      000390 86 82            [24] 1699 	mov	dpl,@r0
      000392 08               [12] 1700 	inc	r0
      000393 86 83            [24] 1701 	mov	dph,@r0
      000395 08               [12] 1702 	inc	r0
      000396 86 F0            [24] 1703 	mov	b,@r0
      000398 EF               [12] 1704 	mov	a,r7
      000399 12r00r00         [24] 1705 	lcall	__gptrput
      00039C A3               [24] 1706 	inc	dptr
      00039D EE               [12] 1707 	mov	a,r6
      00039E 12r00r00         [24] 1708 	lcall	__gptrput
                           0003A1  1709 	C$tasks.c$947$1_0$168 ==.
                                   1710 ;	tasks.c:947: listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
      0003A1 E5*00            [12] 1711 	mov	a,_bp
      0003A3 24 03            [12] 1712 	add	a,#0x03
      0003A5 F8               [12] 1713 	mov	r0,a
      0003A6 74 19            [12] 1714 	mov	a,#0x19
      0003A8 26               [12] 1715 	add	a,@r0
      0003A9 FD               [12] 1716 	mov	r5,a
      0003AA 74 00            [12] 1717 	mov	a,#0x00
      0003AC 08               [12] 1718 	inc	r0
      0003AD 36               [12] 1719 	addc	a,@r0
      0003AE FE               [12] 1720 	mov	r6,a
      0003AF 08               [12] 1721 	inc	r0
      0003B0 86 07            [24] 1722 	mov	ar7,@r0
      0003B2 8D 82            [24] 1723 	mov	dpl,r5
      0003B4 8E 83            [24] 1724 	mov	dph,r6
      0003B6 8F F0            [24] 1725 	mov	b,r7
      0003B8 EA               [12] 1726 	mov	a,r2
      0003B9 12r00r00         [24] 1727 	lcall	__gptrput
      0003BC A3               [24] 1728 	inc	dptr
      0003BD EB               [12] 1729 	mov	a,r3
      0003BE 12r00r00         [24] 1730 	lcall	__gptrput
      0003C1 A3               [24] 1731 	inc	dptr
      0003C2 EC               [12] 1732 	mov	a,r4
      0003C3 12r00r00         [24] 1733 	lcall	__gptrput
                           0003C6  1734 	C$tasks.c$986$2_0$179 ==.
                                   1735 ;	tasks.c:986: memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotifiedValue ) );
      0003C6 E5*00            [12] 1736 	mov	a,_bp
      0003C8 24 03            [12] 1737 	add	a,#0x03
      0003CA F8               [12] 1738 	mov	r0,a
      0003CB 74 2E            [12] 1739 	mov	a,#0x2e
      0003CD 26               [12] 1740 	add	a,@r0
      0003CE FD               [12] 1741 	mov	r5,a
      0003CF 74 00            [12] 1742 	mov	a,#0x00
      0003D1 08               [12] 1743 	inc	r0
      0003D2 36               [12] 1744 	addc	a,@r0
      0003D3 FE               [12] 1745 	mov	r6,a
      0003D4 08               [12] 1746 	inc	r0
      0003D5 86 07            [24] 1747 	mov	ar7,@r0
      0003D7 74 04            [12] 1748 	mov	a,#0x04
      0003D9 C0 E0            [24] 1749 	push	acc
      0003DB 74 00            [12] 1750 	mov	a,#0x00
      0003DD C0 E0            [24] 1751 	push	acc
      0003DF C0 E0            [24] 1752 	push	acc
      0003E1 8D 82            [24] 1753 	mov	dpl,r5
      0003E3 8E 83            [24] 1754 	mov	dph,r6
      0003E5 8F F0            [24] 1755 	mov	b,r7
      0003E7 12r00r00         [24] 1756 	lcall	_memset
      0003EA 15 81            [12] 1757 	dec	sp
      0003EC 15 81            [12] 1758 	dec	sp
      0003EE 15 81            [12] 1759 	dec	sp
                           0003F0  1760 	C$tasks.c$987$2_0$179 ==.
                                   1761 ;	tasks.c:987: memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyState ) );
      0003F0 E5*00            [12] 1762 	mov	a,_bp
      0003F2 24 03            [12] 1763 	add	a,#0x03
      0003F4 F8               [12] 1764 	mov	r0,a
      0003F5 74 32            [12] 1765 	mov	a,#0x32
      0003F7 26               [12] 1766 	add	a,@r0
      0003F8 FD               [12] 1767 	mov	r5,a
      0003F9 74 00            [12] 1768 	mov	a,#0x00
      0003FB 08               [12] 1769 	inc	r0
      0003FC 36               [12] 1770 	addc	a,@r0
      0003FD FE               [12] 1771 	mov	r6,a
      0003FE 08               [12] 1772 	inc	r0
      0003FF 86 07            [24] 1773 	mov	ar7,@r0
      000401 74 01            [12] 1774 	mov	a,#0x01
      000403 C0 E0            [24] 1775 	push	acc
      000405 74 00            [12] 1776 	mov	a,#0x00
      000407 C0 E0            [24] 1777 	push	acc
      000409 C0 E0            [24] 1778 	push	acc
      00040B 8D 82            [24] 1779 	mov	dpl,r5
      00040D 8E 83            [24] 1780 	mov	dph,r6
      00040F 8F F0            [24] 1781 	mov	b,r7
      000411 12r00r00         [24] 1782 	lcall	_memset
      000414 15 81            [12] 1783 	dec	sp
      000416 15 81            [12] 1784 	dec	sp
      000418 15 81            [12] 1785 	dec	sp
                           00041A  1786 	C$tasks.c$1052$3_0$181 ==.
                                   1787 ;	tasks.c:1052: pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
      00041A E5*00            [12] 1788 	mov	a,_bp
      00041C 24 F4            [12] 1789 	add	a,#0xf4
      00041E F8               [12] 1790 	mov	r0,a
      00041F E6               [12] 1791 	mov	a,@r0
      000420 C0 E0            [24] 1792 	push	acc
      000422 08               [12] 1793 	inc	r0
      000423 E6               [12] 1794 	mov	a,@r0
      000424 C0 E0            [24] 1795 	push	acc
      000426 08               [12] 1796 	inc	r0
      000427 E6               [12] 1797 	mov	a,@r0
      000428 C0 E0            [24] 1798 	push	acc
      00042A A8*00            [24] 1799 	mov	r0,_bp
      00042C 08               [12] 1800 	inc	r0
      00042D E6               [12] 1801 	mov	a,@r0
      00042E C0 E0            [24] 1802 	push	acc
      000430 08               [12] 1803 	inc	r0
      000431 E6               [12] 1804 	mov	a,@r0
      000432 C0 E0            [24] 1805 	push	acc
      000434 E5*00            [12] 1806 	mov	a,_bp
      000436 24 06            [12] 1807 	add	a,#0x06
      000438 F8               [12] 1808 	mov	r0,a
      000439 86 82            [24] 1809 	mov	dpl,@r0
      00043B 08               [12] 1810 	inc	r0
      00043C 86 83            [24] 1811 	mov	dph,@r0
      00043E 08               [12] 1812 	inc	r0
      00043F 86 F0            [24] 1813 	mov	b,@r0
      000441 12r00r00         [24] 1814 	lcall	_pxPortInitialiseStack
      000444 AF 82            [24] 1815 	mov	r7,dpl
      000446 AE 83            [24] 1816 	mov	r6,dph
      000448 AD F0            [24] 1817 	mov	r5,b
      00044A E5 81            [12] 1818 	mov	a,sp
      00044C 24 FB            [12] 1819 	add	a,#0xfb
      00044E F5 81            [12] 1820 	mov	sp,a
      000450 E5*00            [12] 1821 	mov	a,_bp
      000452 24 03            [12] 1822 	add	a,#0x03
      000454 F8               [12] 1823 	mov	r0,a
      000455 86 82            [24] 1824 	mov	dpl,@r0
      000457 08               [12] 1825 	inc	r0
      000458 86 83            [24] 1826 	mov	dph,@r0
      00045A 08               [12] 1827 	inc	r0
      00045B 86 F0            [24] 1828 	mov	b,@r0
      00045D EF               [12] 1829 	mov	a,r7
      00045E 12r00r00         [24] 1830 	lcall	__gptrput
      000461 A3               [24] 1831 	inc	dptr
      000462 EE               [12] 1832 	mov	a,r6
      000463 12r00r00         [24] 1833 	lcall	__gptrput
      000466 A3               [24] 1834 	inc	dptr
      000467 ED               [12] 1835 	mov	a,r5
      000468 12r00r00         [24] 1836 	lcall	__gptrput
                           00046B  1837 	C$tasks.c$1058$1_0$168 ==.
                                   1838 ;	tasks.c:1058: if( pxCreatedTask != NULL )
      00046B E5*00            [12] 1839 	mov	a,_bp
      00046D 24 F0            [12] 1840 	add	a,#0xf0
      00046F F8               [12] 1841 	mov	r0,a
      000470 E6               [12] 1842 	mov	a,@r0
      000471 08               [12] 1843 	inc	r0
      000472 46               [12] 1844 	orl	a,@r0
      000473 70 03            [24] 1845 	jnz	00142$
      000475 02r04rA0         [24] 1846 	ljmp	00113$
      000478                       1847 00142$:
                           000478  1848 	C$tasks.c$1062$2_0$182 ==.
                                   1849 ;	tasks.c:1062: *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
      000478 E5*00            [12] 1850 	mov	a,_bp
      00047A 24 F0            [12] 1851 	add	a,#0xf0
      00047C F8               [12] 1852 	mov	r0,a
      00047D 86 05            [24] 1853 	mov	ar5,@r0
      00047F 08               [12] 1854 	inc	r0
      000480 86 06            [24] 1855 	mov	ar6,@r0
      000482 08               [12] 1856 	inc	r0
      000483 86 07            [24] 1857 	mov	ar7,@r0
      000485 8D 82            [24] 1858 	mov	dpl,r5
      000487 8E 83            [24] 1859 	mov	dph,r6
      000489 8F F0            [24] 1860 	mov	b,r7
      00048B E5*00            [12] 1861 	mov	a,_bp
      00048D 24 03            [12] 1862 	add	a,#0x03
      00048F F8               [12] 1863 	mov	r0,a
      000490 E6               [12] 1864 	mov	a,@r0
      000491 12r00r00         [24] 1865 	lcall	__gptrput
      000494 A3               [24] 1866 	inc	dptr
      000495 08               [12] 1867 	inc	r0
      000496 E6               [12] 1868 	mov	a,@r0
      000497 12r00r00         [24] 1869 	lcall	__gptrput
      00049A A3               [24] 1870 	inc	dptr
      00049B 08               [12] 1871 	inc	r0
      00049C E6               [12] 1872 	mov	a,@r0
      00049D 12r00r00         [24] 1873 	lcall	__gptrput
      0004A0                       1874 00113$:
                           0004A0  1875 	C$tasks.c$1068$1_0$168 ==.
                                   1876 ;	tasks.c:1068: }
      0004A0 85*00 81         [24] 1877 	mov	sp,_bp
      0004A3 D0*00            [24] 1878 	pop	_bp
                           0004A5  1879 	C$tasks.c$1068$1_0$168 ==.
                           0004A5  1880 	XFtasks$prvInitialiseNewTask$0$0 ==.
      0004A5 22               [24] 1881 	ret
                                   1882 ;------------------------------------------------------------
                                   1883 ;Allocation info for local variables in function 'prvAddNewTaskToReadyList'
                                   1884 ;------------------------------------------------------------
                                   1885 ;pxNewTCB                  Allocated to stack - _bp +1
                                   1886 ;pxIndex                   Allocated to stack - _bp +13
                                   1887 ;sloc0                     Allocated to stack - _bp +7
                                   1888 ;sloc1                     Allocated to stack - _bp +4
                                   1889 ;sloc2                     Allocated to stack - _bp +10
                                   1890 ;------------------------------------------------------------
                           0004A6  1891 	Ftasks$prvAddNewTaskToReadyList$0$0 ==.
                           0004A6  1892 	C$tasks.c$1071$1_0$185 ==.
                                   1893 ;	tasks.c:1071: static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
                                   1894 ;	-----------------------------------------
                                   1895 ;	 function prvAddNewTaskToReadyList
                                   1896 ;	-----------------------------------------
      0004A6                       1897 _prvAddNewTaskToReadyList:
      0004A6 C0*00            [24] 1898 	push	_bp
      0004A8 85 81*00         [24] 1899 	mov	_bp,sp
      0004AB C0 82            [24] 1900 	push	dpl
      0004AD C0 83            [24] 1901 	push	dph
      0004AF C0 F0            [24] 1902 	push	b
      0004B1 E5 81            [12] 1903 	mov	a,sp
      0004B3 24 0C            [12] 1904 	add	a,#0x0c
      0004B5 F5 81            [12] 1905 	mov	sp,a
                           0004B7  1906 	C$tasks.c$1075$1_0$185 ==.
                                   1907 ;	tasks.c:1075: taskENTER_CRITICAL();
      0004B7 C0 E0            [24] 1908 	push ACC 
      0004B9 C0 A8            [24] 1909 	push IE 
                                   1910 ;	assignBit
      0004BB C2 AF            [12] 1911 	clr	_EA
                           0004BD  1912 	C$tasks.c$1077$2_0$186 ==.
                                   1913 ;	tasks.c:1077: uxCurrentNumberOfTasks++;
      0004BD 90r00r04         [24] 1914 	mov	dptr,#_uxCurrentNumberOfTasks
      0004C0 E0               [24] 1915 	movx	a,@dptr
      0004C1 04               [12] 1916 	inc	a
      0004C2 F0               [24] 1917 	movx	@dptr,a
                           0004C3  1918 	C$tasks.c$1079$2_0$186 ==.
                                   1919 ;	tasks.c:1079: if( pxCurrentTCB == NULL )
      0004C3 90r00r00         [24] 1920 	mov	dptr,#_pxCurrentTCB
      0004C6 E0               [24] 1921 	movx	a,@dptr
      0004C7 FA               [12] 1922 	mov	r2,a
      0004C8 A3               [24] 1923 	inc	dptr
      0004C9 E0               [24] 1924 	movx	a,@dptr
      0004CA FB               [12] 1925 	mov	r3,a
      0004CB A3               [24] 1926 	inc	dptr
      0004CC E0               [24] 1927 	movx	a,@dptr
      0004CD FC               [12] 1928 	mov	r4,a
      0004CE EA               [12] 1929 	mov	a,r2
      0004CF 4B               [12] 1930 	orl	a,r3
      0004D0 60 03            [24] 1931 	jz	00140$
      0004D2 02r04rF8         [24] 1932 	ljmp	00108$
      0004D5                       1933 00140$:
                           0004D5  1934 	C$tasks.c$1083$3_0$187 ==.
                                   1935 ;	tasks.c:1083: pxCurrentTCB = pxNewTCB;
      0004D5 A8*00            [24] 1936 	mov	r0,_bp
      0004D7 08               [12] 1937 	inc	r0
      0004D8 90r00r00         [24] 1938 	mov	dptr,#_pxCurrentTCB
      0004DB E6               [12] 1939 	mov	a,@r0
      0004DC F0               [24] 1940 	movx	@dptr,a
      0004DD 08               [12] 1941 	inc	r0
      0004DE E6               [12] 1942 	mov	a,@r0
      0004DF A3               [24] 1943 	inc	dptr
      0004E0 F0               [24] 1944 	movx	@dptr,a
      0004E1 08               [12] 1945 	inc	r0
      0004E2 E6               [12] 1946 	mov	a,@r0
      0004E3 A3               [24] 1947 	inc	dptr
      0004E4 F0               [24] 1948 	movx	@dptr,a
                           0004E5  1949 	C$tasks.c$1085$3_0$187 ==.
                                   1950 ;	tasks.c:1085: if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
      0004E5 90r00r04         [24] 1951 	mov	dptr,#_uxCurrentNumberOfTasks
      0004E8 E0               [24] 1952 	movx	a,@dptr
      0004E9 FC               [12] 1953 	mov	r4,a
      0004EA BC 01 02         [24] 1954 	cjne	r4,#0x01,00141$
      0004ED 80 03            [24] 1955 	sjmp	00142$
      0004EF                       1956 00141$:
      0004EF 02r05r4F         [24] 1957 	ljmp	00109$
      0004F2                       1958 00142$:
                           0004F2  1959 	C$tasks.c$1090$4_0$188 ==.
                                   1960 ;	tasks.c:1090: prvInitialiseTaskLists();
      0004F2 12r2Ar7C         [24] 1961 	lcall	_prvInitialiseTaskLists
      0004F5 02r05r4F         [24] 1962 	ljmp	00109$
      0004F8                       1963 00108$:
                           0004F8  1964 	C$tasks.c$1102$3_0$190 ==.
                                   1965 ;	tasks.c:1102: if( xSchedulerRunning == pdFALSE )
      0004F8 90r00r08         [24] 1966 	mov	dptr,#_xSchedulerRunning
      0004FB E0               [24] 1967 	movx	a,@dptr
      0004FC 60 03            [24] 1968 	jz	00143$
      0004FE 02r05r4F         [24] 1969 	ljmp	00109$
      000501                       1970 00143$:
                           000501  1971 	C$tasks.c$1104$4_0$191 ==.
                                   1972 ;	tasks.c:1104: if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
      000501 90r00r00         [24] 1973 	mov	dptr,#_pxCurrentTCB
      000504 E0               [24] 1974 	movx	a,@dptr
      000505 FA               [12] 1975 	mov	r2,a
      000506 A3               [24] 1976 	inc	dptr
      000507 E0               [24] 1977 	movx	a,@dptr
      000508 FB               [12] 1978 	mov	r3,a
      000509 A3               [24] 1979 	inc	dptr
      00050A E0               [24] 1980 	movx	a,@dptr
      00050B FC               [12] 1981 	mov	r4,a
      00050C 74 1F            [12] 1982 	mov	a,#0x1f
      00050E 2A               [12] 1983 	add	a,r2
      00050F FA               [12] 1984 	mov	r2,a
      000510 74 00            [12] 1985 	mov	a,#0x00
      000512 3B               [12] 1986 	addc	a,r3
      000513 FB               [12] 1987 	mov	r3,a
      000514 8A 82            [24] 1988 	mov	dpl,r2
      000516 8B 83            [24] 1989 	mov	dph,r3
      000518 8C F0            [24] 1990 	mov	b,r4
      00051A 12r00r00         [24] 1991 	lcall	__gptrget
      00051D FA               [12] 1992 	mov	r2,a
      00051E A8*00            [24] 1993 	mov	r0,_bp
      000520 08               [12] 1994 	inc	r0
      000521 74 1F            [12] 1995 	mov	a,#0x1f
      000523 26               [12] 1996 	add	a,@r0
      000524 FB               [12] 1997 	mov	r3,a
      000525 74 00            [12] 1998 	mov	a,#0x00
      000527 08               [12] 1999 	inc	r0
      000528 36               [12] 2000 	addc	a,@r0
      000529 FC               [12] 2001 	mov	r4,a
      00052A 08               [12] 2002 	inc	r0
      00052B 86 07            [24] 2003 	mov	ar7,@r0
      00052D 8B 82            [24] 2004 	mov	dpl,r3
      00052F 8C 83            [24] 2005 	mov	dph,r4
      000531 8F F0            [24] 2006 	mov	b,r7
      000533 12r00r00         [24] 2007 	lcall	__gptrget
      000536 FB               [12] 2008 	mov	r3,a
      000537 C3               [12] 2009 	clr	c
      000538 EB               [12] 2010 	mov	a,r3
      000539 9A               [12] 2011 	subb	a,r2
      00053A 50 03            [24] 2012 	jnc	00144$
      00053C 02r05r4F         [24] 2013 	ljmp	00109$
      00053F                       2014 00144$:
                           00053F  2015 	C$tasks.c$1106$5_0$192 ==.
                                   2016 ;	tasks.c:1106: pxCurrentTCB = pxNewTCB;
      00053F A8*00            [24] 2017 	mov	r0,_bp
      000541 08               [12] 2018 	inc	r0
      000542 90r00r00         [24] 2019 	mov	dptr,#_pxCurrentTCB
      000545 E6               [12] 2020 	mov	a,@r0
      000546 F0               [24] 2021 	movx	@dptr,a
      000547 08               [12] 2022 	inc	r0
      000548 E6               [12] 2023 	mov	a,@r0
      000549 A3               [24] 2024 	inc	dptr
      00054A F0               [24] 2025 	movx	@dptr,a
      00054B 08               [12] 2026 	inc	r0
      00054C E6               [12] 2027 	mov	a,@r0
      00054D A3               [24] 2028 	inc	dptr
      00054E F0               [24] 2029 	movx	@dptr,a
      00054F                       2030 00109$:
                           00054F  2031 	C$tasks.c$1119$2_0$186 ==.
                                   2032 ;	tasks.c:1119: uxTaskNumber++;
      00054F 90r00r0D         [24] 2033 	mov	dptr,#_uxTaskNumber
      000552 E0               [24] 2034 	movx	a,@dptr
      000553 24 01            [12] 2035 	add	a,#0x01
      000555 F0               [24] 2036 	movx	@dptr,a
                           000556  2037 	C$tasks.c$1129$3_0$195 ==.
                                   2038 ;	tasks.c:1129: prvAddTaskToReadyList( pxNewTCB );
      000556 A8*00            [24] 2039 	mov	r0,_bp
      000558 08               [12] 2040 	inc	r0
      000559 E5*00            [12] 2041 	mov	a,_bp
      00055B 24 07            [12] 2042 	add	a,#0x07
      00055D F9               [12] 2043 	mov	r1,a
      00055E 74 1F            [12] 2044 	mov	a,#0x1f
      000560 26               [12] 2045 	add	a,@r0
      000561 F7               [12] 2046 	mov	@r1,a
      000562 74 00            [12] 2047 	mov	a,#0x00
      000564 08               [12] 2048 	inc	r0
      000565 36               [12] 2049 	addc	a,@r0
      000566 09               [12] 2050 	inc	r1
      000567 F7               [12] 2051 	mov	@r1,a
      000568 08               [12] 2052 	inc	r0
      000569 E6               [12] 2053 	mov	a,@r0
      00056A 09               [12] 2054 	inc	r1
      00056B F7               [12] 2055 	mov	@r1,a
      00056C E5*00            [12] 2056 	mov	a,_bp
      00056E 24 07            [12] 2057 	add	a,#0x07
      000570 F8               [12] 2058 	mov	r0,a
      000571 86 82            [24] 2059 	mov	dpl,@r0
      000573 08               [12] 2060 	inc	r0
      000574 86 83            [24] 2061 	mov	dph,@r0
      000576 08               [12] 2062 	inc	r0
      000577 86 F0            [24] 2063 	mov	b,@r0
      000579 12r00r00         [24] 2064 	lcall	__gptrget
      00057C FC               [12] 2065 	mov	r4,a
      00057D 90r00r07         [24] 2066 	mov	dptr,#_uxTopReadyPriority
      000580 E0               [24] 2067 	movx	a,@dptr
      000581 FB               [12] 2068 	mov	r3,a
      000582 C3               [12] 2069 	clr	c
      000583 EB               [12] 2070 	mov	a,r3
      000584 9C               [12] 2071 	subb	a,r4
      000585 40 03            [24] 2072 	jc	00145$
      000587 02r05r8F         [24] 2073 	ljmp	00111$
      00058A                       2074 00145$:
      00058A 90r00r07         [24] 2075 	mov	dptr,#_uxTopReadyPriority
      00058D EC               [12] 2076 	mov	a,r4
      00058E F0               [24] 2077 	movx	@dptr,a
      00058F                       2078 00111$:
      00058F E5*00            [12] 2079 	mov	a,_bp
      000591 24 07            [12] 2080 	add	a,#0x07
      000593 F8               [12] 2081 	mov	r0,a
      000594 86 82            [24] 2082 	mov	dpl,@r0
      000596 08               [12] 2083 	inc	r0
      000597 86 83            [24] 2084 	mov	dph,@r0
      000599 08               [12] 2085 	inc	r0
      00059A 86 F0            [24] 2086 	mov	b,@r0
      00059C 12r00r00         [24] 2087 	lcall	__gptrget
      00059F FC               [12] 2088 	mov	r4,a
      0005A0 EC               [12] 2089 	mov	a,r4
      0005A1 75 F0 0C         [24] 2090 	mov	b,#0x0c
      0005A4 A4               [48] 2091 	mul	ab
      0005A5 24r00            [12] 2092 	add	a,#_pxReadyTasksLists
      0005A7 FB               [12] 2093 	mov	r3,a
      0005A8 74s00            [12] 2094 	mov	a,#(_pxReadyTasksLists >> 8)
      0005AA 35 F0            [12] 2095 	addc	a,b
      0005AC FC               [12] 2096 	mov	r4,a
      0005AD 8B 82            [24] 2097 	mov	dpl,r3
      0005AF 8C 83            [24] 2098 	mov	dph,r4
      0005B1 A3               [24] 2099 	inc	dptr
      0005B2 E5*00            [12] 2100 	mov	a,_bp
      0005B4 24 0D            [12] 2101 	add	a,#0x0d
      0005B6 F8               [12] 2102 	mov	r0,a
      0005B7 E0               [24] 2103 	movx	a,@dptr
      0005B8 F6               [12] 2104 	mov	@r0,a
      0005B9 A3               [24] 2105 	inc	dptr
      0005BA E0               [24] 2106 	movx	a,@dptr
      0005BB 08               [12] 2107 	inc	r0
      0005BC F6               [12] 2108 	mov	@r0,a
      0005BD A3               [24] 2109 	inc	dptr
      0005BE E0               [24] 2110 	movx	a,@dptr
      0005BF 08               [12] 2111 	inc	r0
      0005C0 F6               [12] 2112 	mov	@r0,a
      0005C1 A8*00            [24] 2113 	mov	r0,_bp
      0005C3 08               [12] 2114 	inc	r0
      0005C4 74 03            [12] 2115 	mov	a,#0x03
      0005C6 26               [12] 2116 	add	a,@r0
      0005C7 FA               [12] 2117 	mov	r2,a
      0005C8 74 00            [12] 2118 	mov	a,#0x00
      0005CA 08               [12] 2119 	inc	r0
      0005CB 36               [12] 2120 	addc	a,@r0
      0005CC FB               [12] 2121 	mov	r3,a
      0005CD 08               [12] 2122 	inc	r0
      0005CE 86 04            [24] 2123 	mov	ar4,@r0
      0005D0 74 02            [12] 2124 	mov	a,#0x02
      0005D2 2A               [12] 2125 	add	a,r2
      0005D3 FD               [12] 2126 	mov	r5,a
      0005D4 74 00            [12] 2127 	mov	a,#0x00
      0005D6 3B               [12] 2128 	addc	a,r3
      0005D7 FE               [12] 2129 	mov	r6,a
      0005D8 8C 07            [24] 2130 	mov	ar7,r4
      0005DA 8D 82            [24] 2131 	mov	dpl,r5
      0005DC 8E 83            [24] 2132 	mov	dph,r6
      0005DE 8F F0            [24] 2133 	mov	b,r7
      0005E0 E5*00            [12] 2134 	mov	a,_bp
      0005E2 24 0D            [12] 2135 	add	a,#0x0d
      0005E4 F8               [12] 2136 	mov	r0,a
      0005E5 E6               [12] 2137 	mov	a,@r0
      0005E6 12r00r00         [24] 2138 	lcall	__gptrput
      0005E9 A3               [24] 2139 	inc	dptr
      0005EA 08               [12] 2140 	inc	r0
      0005EB E6               [12] 2141 	mov	a,@r0
      0005EC 12r00r00         [24] 2142 	lcall	__gptrput
      0005EF A3               [24] 2143 	inc	dptr
      0005F0 08               [12] 2144 	inc	r0
      0005F1 E6               [12] 2145 	mov	a,@r0
      0005F2 12r00r00         [24] 2146 	lcall	__gptrput
      0005F5 E5*00            [12] 2147 	mov	a,_bp
      0005F7 24 04            [12] 2148 	add	a,#0x04
      0005F9 F8               [12] 2149 	mov	r0,a
      0005FA 74 05            [12] 2150 	mov	a,#0x05
      0005FC 2A               [12] 2151 	add	a,r2
      0005FD F6               [12] 2152 	mov	@r0,a
      0005FE 74 00            [12] 2153 	mov	a,#0x00
      000600 3B               [12] 2154 	addc	a,r3
      000601 08               [12] 2155 	inc	r0
      000602 F6               [12] 2156 	mov	@r0,a
      000603 08               [12] 2157 	inc	r0
      000604 A6 04            [24] 2158 	mov	@r0,ar4
      000606 E5*00            [12] 2159 	mov	a,_bp
      000608 24 0D            [12] 2160 	add	a,#0x0d
      00060A F8               [12] 2161 	mov	r0,a
      00060B E5*00            [12] 2162 	mov	a,_bp
      00060D 24 0A            [12] 2163 	add	a,#0x0a
      00060F F9               [12] 2164 	mov	r1,a
      000610 74 05            [12] 2165 	mov	a,#0x05
      000612 26               [12] 2166 	add	a,@r0
      000613 F7               [12] 2167 	mov	@r1,a
      000614 74 00            [12] 2168 	mov	a,#0x00
      000616 08               [12] 2169 	inc	r0
      000617 36               [12] 2170 	addc	a,@r0
      000618 09               [12] 2171 	inc	r1
      000619 F7               [12] 2172 	mov	@r1,a
      00061A 08               [12] 2173 	inc	r0
      00061B E6               [12] 2174 	mov	a,@r0
      00061C 09               [12] 2175 	inc	r1
      00061D F7               [12] 2176 	mov	@r1,a
      00061E E5*00            [12] 2177 	mov	a,_bp
      000620 24 0A            [12] 2178 	add	a,#0x0a
      000622 F8               [12] 2179 	mov	r0,a
      000623 86 82            [24] 2180 	mov	dpl,@r0
      000625 08               [12] 2181 	inc	r0
      000626 86 83            [24] 2182 	mov	dph,@r0
      000628 08               [12] 2183 	inc	r0
      000629 86 F0            [24] 2184 	mov	b,@r0
      00062B 12r00r00         [24] 2185 	lcall	__gptrget
      00062E FD               [12] 2186 	mov	r5,a
      00062F A3               [24] 2187 	inc	dptr
      000630 12r00r00         [24] 2188 	lcall	__gptrget
      000633 FE               [12] 2189 	mov	r6,a
      000634 A3               [24] 2190 	inc	dptr
      000635 12r00r00         [24] 2191 	lcall	__gptrget
      000638 FF               [12] 2192 	mov	r7,a
      000639 E5*00            [12] 2193 	mov	a,_bp
      00063B 24 04            [12] 2194 	add	a,#0x04
      00063D F8               [12] 2195 	mov	r0,a
      00063E 86 82            [24] 2196 	mov	dpl,@r0
      000640 08               [12] 2197 	inc	r0
      000641 86 83            [24] 2198 	mov	dph,@r0
      000643 08               [12] 2199 	inc	r0
      000644 86 F0            [24] 2200 	mov	b,@r0
      000646 ED               [12] 2201 	mov	a,r5
      000647 12r00r00         [24] 2202 	lcall	__gptrput
      00064A A3               [24] 2203 	inc	dptr
      00064B EE               [12] 2204 	mov	a,r6
      00064C 12r00r00         [24] 2205 	lcall	__gptrput
      00064F A3               [24] 2206 	inc	dptr
      000650 EF               [12] 2207 	mov	a,r7
      000651 12r00r00         [24] 2208 	lcall	__gptrput
      000654 E5*00            [12] 2209 	mov	a,_bp
      000656 24 0A            [12] 2210 	add	a,#0x0a
      000658 F8               [12] 2211 	mov	r0,a
      000659 86 82            [24] 2212 	mov	dpl,@r0
      00065B 08               [12] 2213 	inc	r0
      00065C 86 83            [24] 2214 	mov	dph,@r0
      00065E 08               [12] 2215 	inc	r0
      00065F 86 F0            [24] 2216 	mov	b,@r0
      000661 12r00r00         [24] 2217 	lcall	__gptrget
      000664 FD               [12] 2218 	mov	r5,a
      000665 A3               [24] 2219 	inc	dptr
      000666 12r00r00         [24] 2220 	lcall	__gptrget
      000669 FE               [12] 2221 	mov	r6,a
      00066A A3               [24] 2222 	inc	dptr
      00066B 12r00r00         [24] 2223 	lcall	__gptrget
      00066E FF               [12] 2224 	mov	r7,a
      00066F 74 02            [12] 2225 	mov	a,#0x02
      000671 2D               [12] 2226 	add	a,r5
      000672 FD               [12] 2227 	mov	r5,a
      000673 74 00            [12] 2228 	mov	a,#0x00
      000675 3E               [12] 2229 	addc	a,r6
      000676 FE               [12] 2230 	mov	r6,a
      000677 8D 82            [24] 2231 	mov	dpl,r5
      000679 8E 83            [24] 2232 	mov	dph,r6
      00067B 8F F0            [24] 2233 	mov	b,r7
      00067D EA               [12] 2234 	mov	a,r2
      00067E 12r00r00         [24] 2235 	lcall	__gptrput
      000681 A3               [24] 2236 	inc	dptr
      000682 EB               [12] 2237 	mov	a,r3
      000683 12r00r00         [24] 2238 	lcall	__gptrput
      000686 A3               [24] 2239 	inc	dptr
      000687 EC               [12] 2240 	mov	a,r4
      000688 12r00r00         [24] 2241 	lcall	__gptrput
      00068B E5*00            [12] 2242 	mov	a,_bp
      00068D 24 0A            [12] 2243 	add	a,#0x0a
      00068F F8               [12] 2244 	mov	r0,a
      000690 86 82            [24] 2245 	mov	dpl,@r0
      000692 08               [12] 2246 	inc	r0
      000693 86 83            [24] 2247 	mov	dph,@r0
      000695 08               [12] 2248 	inc	r0
      000696 86 F0            [24] 2249 	mov	b,@r0
      000698 EA               [12] 2250 	mov	a,r2
      000699 12r00r00         [24] 2251 	lcall	__gptrput
      00069C A3               [24] 2252 	inc	dptr
      00069D EB               [12] 2253 	mov	a,r3
      00069E 12r00r00         [24] 2254 	lcall	__gptrput
      0006A1 A3               [24] 2255 	inc	dptr
      0006A2 EC               [12] 2256 	mov	a,r4
      0006A3 12r00r00         [24] 2257 	lcall	__gptrput
      0006A6 74 0B            [12] 2258 	mov	a,#0x0b
      0006A8 2A               [12] 2259 	add	a,r2
      0006A9 FA               [12] 2260 	mov	r2,a
      0006AA 74 00            [12] 2261 	mov	a,#0x00
      0006AC 3B               [12] 2262 	addc	a,r3
      0006AD FB               [12] 2263 	mov	r3,a
      0006AE E5*00            [12] 2264 	mov	a,_bp
      0006B0 24 07            [12] 2265 	add	a,#0x07
      0006B2 F8               [12] 2266 	mov	r0,a
      0006B3 86 82            [24] 2267 	mov	dpl,@r0
      0006B5 08               [12] 2268 	inc	r0
      0006B6 86 83            [24] 2269 	mov	dph,@r0
      0006B8 08               [12] 2270 	inc	r0
      0006B9 86 F0            [24] 2271 	mov	b,@r0
      0006BB 12r00r00         [24] 2272 	lcall	__gptrget
      0006BE FF               [12] 2273 	mov	r7,a
      0006BF EF               [12] 2274 	mov	a,r7
      0006C0 75 F0 0C         [24] 2275 	mov	b,#0x0c
      0006C3 A4               [48] 2276 	mul	ab
      0006C4 24r00            [12] 2277 	add	a,#_pxReadyTasksLists
      0006C6 FE               [12] 2278 	mov	r6,a
      0006C7 74s00            [12] 2279 	mov	a,#(_pxReadyTasksLists >> 8)
      0006C9 35 F0            [12] 2280 	addc	a,b
      0006CB FF               [12] 2281 	mov	r7,a
      0006CC 7D 00            [12] 2282 	mov	r5,#0x00
      0006CE 8A 82            [24] 2283 	mov	dpl,r2
      0006D0 8B 83            [24] 2284 	mov	dph,r3
      0006D2 8C F0            [24] 2285 	mov	b,r4
      0006D4 EE               [12] 2286 	mov	a,r6
      0006D5 12r00r00         [24] 2287 	lcall	__gptrput
      0006D8 A3               [24] 2288 	inc	dptr
      0006D9 EF               [12] 2289 	mov	a,r7
      0006DA 12r00r00         [24] 2290 	lcall	__gptrput
      0006DD A3               [24] 2291 	inc	dptr
      0006DE ED               [12] 2292 	mov	a,r5
      0006DF 12r00r00         [24] 2293 	lcall	__gptrput
      0006E2 E5*00            [12] 2294 	mov	a,_bp
      0006E4 24 07            [12] 2295 	add	a,#0x07
      0006E6 F8               [12] 2296 	mov	r0,a
      0006E7 86 82            [24] 2297 	mov	dpl,@r0
      0006E9 08               [12] 2298 	inc	r0
      0006EA 86 83            [24] 2299 	mov	dph,@r0
      0006EC 08               [12] 2300 	inc	r0
      0006ED 86 F0            [24] 2301 	mov	b,@r0
      0006EF 12r00r00         [24] 2302 	lcall	__gptrget
      0006F2 FF               [12] 2303 	mov	r7,a
      0006F3 EF               [12] 2304 	mov	a,r7
      0006F4 75 F0 0C         [24] 2305 	mov	b,#0x0c
      0006F7 A4               [48] 2306 	mul	ab
      0006F8 24r00            [12] 2307 	add	a,#_pxReadyTasksLists
      0006FA FE               [12] 2308 	mov	r6,a
      0006FB 74s00            [12] 2309 	mov	a,#(_pxReadyTasksLists >> 8)
      0006FD 35 F0            [12] 2310 	addc	a,b
      0006FF FF               [12] 2311 	mov	r7,a
      000700 8E 82            [24] 2312 	mov	dpl,r6
      000702 8F 83            [24] 2313 	mov	dph,r7
      000704 E0               [24] 2314 	movx	a,@dptr
      000705 FD               [12] 2315 	mov	r5,a
      000706 0D               [12] 2316 	inc	r5
      000707 8E 82            [24] 2317 	mov	dpl,r6
      000709 8F 83            [24] 2318 	mov	dph,r7
      00070B ED               [12] 2319 	mov	a,r5
      00070C F0               [24] 2320 	movx	@dptr,a
                           00070D  2321 	C$tasks.c$1133$1_0$185 ==.
                                   2322 ;	tasks.c:1133: taskEXIT_CRITICAL();
      00070D D0 E0            [24] 2323 	pop ACC 
      00070F 53 E0 80         [24] 2324 	anl	_ACC,#0x80
      000712 E5 E0            [12] 2325 	mov	a,_ACC
      000714 42 A8            [12] 2326 	orl	_IE,a
      000716 D0 E0            [24] 2327 	pop ACC 
                           000718  2328 	C$tasks.c$1135$1_0$185 ==.
                                   2329 ;	tasks.c:1135: if( xSchedulerRunning != pdFALSE )
      000718 90r00r08         [24] 2330 	mov	dptr,#_xSchedulerRunning
      00071B E0               [24] 2331 	movx	a,@dptr
      00071C 70 03            [24] 2332 	jnz	00146$
      00071E 02r07r29         [24] 2333 	ljmp	00114$
      000721                       2334 00146$:
                           000721  2335 	C$tasks.c$1139$2_0$198 ==.
                                   2336 ;	tasks.c:1139: if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
      000721 90r00r00         [24] 2337 	mov	dptr,#_pxCurrentTCB
      000724 E0               [24] 2338 	movx	a,@dptr
      000725 A3               [24] 2339 	inc	dptr
      000726 E0               [24] 2340 	movx	a,@dptr
      000727 A3               [24] 2341 	inc	dptr
      000728 E0               [24] 2342 	movx	a,@dptr
      000729                       2343 00114$:
                           000729  2344 	C$tasks.c$1152$1_0$185 ==.
                                   2345 ;	tasks.c:1152: }
      000729 85*00 81         [24] 2346 	mov	sp,_bp
      00072C D0*00            [24] 2347 	pop	_bp
                           00072E  2348 	C$tasks.c$1152$1_0$185 ==.
                           00072E  2349 	XFtasks$prvAddNewTaskToReadyList$0$0 ==.
      00072E 22               [24] 2350 	ret
                                   2351 ;------------------------------------------------------------
                                   2352 ;Allocation info for local variables in function 'vTaskDelete'
                                   2353 ;------------------------------------------------------------
                                   2354 ;xTaskToDelete             Allocated to registers r5 r6 r7 
                                   2355 ;pxTCB                     Allocated to stack - _bp +1
                                   2356 ;------------------------------------------------------------
                           00072F  2357 	G$vTaskDelete$0$0 ==.
                           00072F  2358 	C$tasks.c$1157$1_0$203 ==.
                                   2359 ;	tasks.c:1157: void vTaskDelete( TaskHandle_t xTaskToDelete )
                                   2360 ;	-----------------------------------------
                                   2361 ;	 function vTaskDelete
                                   2362 ;	-----------------------------------------
      00072F                       2363 _vTaskDelete:
      00072F C0*00            [24] 2364 	push	_bp
      000731 85 81*00         [24] 2365 	mov	_bp,sp
      000734 05 81            [12] 2366 	inc	sp
      000736 05 81            [12] 2367 	inc	sp
      000738 05 81            [12] 2368 	inc	sp
      00073A AD 82            [24] 2369 	mov	r5,dpl
      00073C AE 83            [24] 2370 	mov	r6,dph
      00073E AF F0            [24] 2371 	mov	r7,b
                           000740  2372 	C$tasks.c$1161$1_0$203 ==.
                                   2373 ;	tasks.c:1161: taskENTER_CRITICAL();
      000740 C0 E0            [24] 2374 	push ACC 
      000742 C0 A8            [24] 2375 	push IE 
                                   2376 ;	assignBit
      000744 C2 AF            [12] 2377 	clr	_EA
                           000746  2378 	C$tasks.c$1165$2_0$204 ==.
                                   2379 ;	tasks.c:1165: pxTCB = prvGetTCBFromHandle( xTaskToDelete );
      000746 ED               [12] 2380 	mov	a,r5
      000747 4E               [12] 2381 	orl	a,r6
      000748 60 03            [24] 2382 	jz	00142$
      00074A 02r07r5B         [24] 2383 	ljmp	00116$
      00074D                       2384 00142$:
      00074D 90r00r00         [24] 2385 	mov	dptr,#_pxCurrentTCB
      000750 E0               [24] 2386 	movx	a,@dptr
      000751 FA               [12] 2387 	mov	r2,a
      000752 A3               [24] 2388 	inc	dptr
      000753 E0               [24] 2389 	movx	a,@dptr
      000754 FB               [12] 2390 	mov	r3,a
      000755 A3               [24] 2391 	inc	dptr
      000756 E0               [24] 2392 	movx	a,@dptr
      000757 FC               [12] 2393 	mov	r4,a
      000758 02r07r61         [24] 2394 	ljmp	00117$
      00075B                       2395 00116$:
      00075B 8D 02            [24] 2396 	mov	ar2,r5
      00075D 8E 03            [24] 2397 	mov	ar3,r6
      00075F 8F 04            [24] 2398 	mov	ar4,r7
      000761                       2399 00117$:
      000761 A8*00            [24] 2400 	mov	r0,_bp
      000763 08               [12] 2401 	inc	r0
      000764 A6 02            [24] 2402 	mov	@r0,ar2
      000766 08               [12] 2403 	inc	r0
      000767 A6 03            [24] 2404 	mov	@r0,ar3
      000769 08               [12] 2405 	inc	r0
      00076A A6 04            [24] 2406 	mov	@r0,ar4
                           00076C  2407 	C$tasks.c$1168$2_0$204 ==.
                                   2408 ;	tasks.c:1168: if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
      00076C A8*00            [24] 2409 	mov	r0,_bp
      00076E 08               [12] 2410 	inc	r0
      00076F 74 03            [12] 2411 	mov	a,#0x03
      000771 26               [12] 2412 	add	a,@r0
      000772 FA               [12] 2413 	mov	r2,a
      000773 74 00            [12] 2414 	mov	a,#0x00
      000775 08               [12] 2415 	inc	r0
      000776 36               [12] 2416 	addc	a,@r0
      000777 FB               [12] 2417 	mov	r3,a
      000778 08               [12] 2418 	inc	r0
      000779 86 04            [24] 2419 	mov	ar4,@r0
      00077B 8A 82            [24] 2420 	mov	dpl,r2
      00077D 8B 83            [24] 2421 	mov	dph,r3
      00077F 8C F0            [24] 2422 	mov	b,r4
      000781 12r00r00         [24] 2423 	lcall	_uxListRemove
                           000784  2424 	C$tasks.c$1178$2_0$204 ==.
                                   2425 ;	tasks.c:1178: if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
      000784 A8*00            [24] 2426 	mov	r0,_bp
      000786 08               [12] 2427 	inc	r0
      000787 74 11            [12] 2428 	mov	a,#0x11
      000789 26               [12] 2429 	add	a,@r0
      00078A FA               [12] 2430 	mov	r2,a
      00078B 74 00            [12] 2431 	mov	a,#0x00
      00078D 08               [12] 2432 	inc	r0
      00078E 36               [12] 2433 	addc	a,@r0
      00078F FB               [12] 2434 	mov	r3,a
      000790 08               [12] 2435 	inc	r0
      000791 86 04            [24] 2436 	mov	ar4,@r0
      000793 A8*00            [24] 2437 	mov	r0,_bp
      000795 08               [12] 2438 	inc	r0
      000796 74 1C            [12] 2439 	mov	a,#0x1c
      000798 26               [12] 2440 	add	a,@r0
      000799 FD               [12] 2441 	mov	r5,a
      00079A 74 00            [12] 2442 	mov	a,#0x00
      00079C 08               [12] 2443 	inc	r0
      00079D 36               [12] 2444 	addc	a,@r0
      00079E FE               [12] 2445 	mov	r6,a
      00079F 08               [12] 2446 	inc	r0
      0007A0 86 07            [24] 2447 	mov	ar7,@r0
      0007A2 8D 82            [24] 2448 	mov	dpl,r5
      0007A4 8E 83            [24] 2449 	mov	dph,r6
      0007A6 8F F0            [24] 2450 	mov	b,r7
      0007A8 12r00r00         [24] 2451 	lcall	__gptrget
      0007AB FD               [12] 2452 	mov	r5,a
      0007AC A3               [24] 2453 	inc	dptr
      0007AD 12r00r00         [24] 2454 	lcall	__gptrget
      0007B0 FE               [12] 2455 	mov	r6,a
      0007B1 A3               [24] 2456 	inc	dptr
      0007B2 12r00r00         [24] 2457 	lcall	__gptrget
      0007B5 FF               [12] 2458 	mov	r7,a
      0007B6 ED               [12] 2459 	mov	a,r5
      0007B7 4E               [12] 2460 	orl	a,r6
      0007B8 70 03            [24] 2461 	jnz	00143$
      0007BA 02r07rC6         [24] 2462 	ljmp	00104$
      0007BD                       2463 00143$:
                           0007BD  2464 	C$tasks.c$1180$3_0$207 ==.
                                   2465 ;	tasks.c:1180: ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
      0007BD 8A 82            [24] 2466 	mov	dpl,r2
      0007BF 8B 83            [24] 2467 	mov	dph,r3
      0007C1 8C F0            [24] 2468 	mov	b,r4
      0007C3 12r00r00         [24] 2469 	lcall	_uxListRemove
      0007C6                       2470 00104$:
                           0007C6  2471 	C$tasks.c$1191$2_0$204 ==.
                                   2472 ;	tasks.c:1191: uxTaskNumber++;
      0007C6 90r00r0D         [24] 2473 	mov	dptr,#_uxTaskNumber
      0007C9 E0               [24] 2474 	movx	a,@dptr
      0007CA 24 01            [12] 2475 	add	a,#0x01
      0007CC F0               [24] 2476 	movx	@dptr,a
                           0007CD  2477 	C$tasks.c$1193$2_0$204 ==.
                                   2478 ;	tasks.c:1193: if( pxTCB == pxCurrentTCB )
      0007CD 90r00r00         [24] 2479 	mov	dptr,#_pxCurrentTCB
      0007D0 E0               [24] 2480 	movx	a,@dptr
      0007D1 FD               [12] 2481 	mov	r5,a
      0007D2 A3               [24] 2482 	inc	dptr
      0007D3 E0               [24] 2483 	movx	a,@dptr
      0007D4 FE               [12] 2484 	mov	r6,a
      0007D5 A3               [24] 2485 	inc	dptr
      0007D6 E0               [24] 2486 	movx	a,@dptr
      0007D7 FF               [12] 2487 	mov	r7,a
      0007D8 A8*00            [24] 2488 	mov	r0,_bp
      0007DA 08               [12] 2489 	inc	r0
      0007DB C0 05            [24] 2490 	push	ar5
      0007DD C0 06            [24] 2491 	push	ar6
      0007DF C0 07            [24] 2492 	push	ar7
      0007E1 86 82            [24] 2493 	mov	dpl,@r0
      0007E3 08               [12] 2494 	inc	r0
      0007E4 86 83            [24] 2495 	mov	dph,@r0
      0007E6 08               [12] 2496 	inc	r0
      0007E7 86 F0            [24] 2497 	mov	b,@r0
      0007E9 12r00r00         [24] 2498 	lcall	___gptr_cmp
      0007EC 15 81            [12] 2499 	dec	sp
      0007EE 15 81            [12] 2500 	dec	sp
      0007F0 15 81            [12] 2501 	dec	sp
      0007F2 70 02            [24] 2502 	jnz	00144$
      0007F4 80 03            [24] 2503 	sjmp	00145$
      0007F6                       2504 00144$:
      0007F6 02r08r2A         [24] 2505 	ljmp	00106$
      0007F9                       2506 00145$:
                           0007F9  2507 	C$tasks.c$1200$3_0$209 ==.
                                   2508 ;	tasks.c:1200: vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
      0007F9 A8*00            [24] 2509 	mov	r0,_bp
      0007FB 08               [12] 2510 	inc	r0
      0007FC 74 03            [12] 2511 	mov	a,#0x03
      0007FE 26               [12] 2512 	add	a,@r0
      0007FF FD               [12] 2513 	mov	r5,a
      000800 74 00            [12] 2514 	mov	a,#0x00
      000802 08               [12] 2515 	inc	r0
      000803 36               [12] 2516 	addc	a,@r0
      000804 FE               [12] 2517 	mov	r6,a
      000805 08               [12] 2518 	inc	r0
      000806 86 07            [24] 2519 	mov	ar7,@r0
      000808 C0 05            [24] 2520 	push	ar5
      00080A C0 06            [24] 2521 	push	ar6
      00080C C0 07            [24] 2522 	push	ar7
      00080E 75 82r5A         [24] 2523 	mov	dpl,#_xTasksWaitingTermination
      000811 75 83s00         [24] 2524 	mov	dph,#(_xTasksWaitingTermination >> 8)
      000814 75 F0 00         [24] 2525 	mov	b,#0x00
      000817 12r00r00         [24] 2526 	lcall	_vListInsertEnd
      00081A 15 81            [12] 2527 	dec	sp
      00081C 15 81            [12] 2528 	dec	sp
      00081E 15 81            [12] 2529 	dec	sp
                           000820  2530 	C$tasks.c$1205$3_0$209 ==.
                                   2531 ;	tasks.c:1205: ++uxDeletedTasksWaitingCleanUp;
      000820 90r00r03         [24] 2532 	mov	dptr,#_uxDeletedTasksWaitingCleanUp
      000823 E0               [24] 2533 	movx	a,@dptr
      000824 24 01            [12] 2534 	add	a,#0x01
      000826 F0               [24] 2535 	movx	@dptr,a
      000827 02r08r33         [24] 2536 	ljmp	00107$
      00082A                       2537 00106$:
                           00082A  2538 	C$tasks.c$1220$3_0$210 ==.
                                   2539 ;	tasks.c:1220: --uxCurrentNumberOfTasks;
      00082A 90r00r04         [24] 2540 	mov	dptr,#_uxCurrentNumberOfTasks
      00082D E0               [24] 2541 	movx	a,@dptr
      00082E 14               [12] 2542 	dec	a
      00082F F0               [24] 2543 	movx	@dptr,a
                           000830  2544 	C$tasks.c$1225$3_0$210 ==.
                                   2545 ;	tasks.c:1225: prvResetNextTaskUnblockTime();
      000830 12r2BrAC         [24] 2546 	lcall	_prvResetNextTaskUnblockTime
      000833                       2547 00107$:
                           000833  2548 	C$tasks.c$1228$1_0$203 ==.
                                   2549 ;	tasks.c:1228: taskEXIT_CRITICAL();
      000833 D0 E0            [24] 2550 	pop ACC 
      000835 53 E0 80         [24] 2551 	anl	_ACC,#0x80
      000838 E5 E0            [12] 2552 	mov	a,_ACC
      00083A 42 A8            [12] 2553 	orl	_IE,a
      00083C D0 E0            [24] 2554 	pop ACC 
                           00083E  2555 	C$tasks.c$1233$1_0$203 ==.
                                   2556 ;	tasks.c:1233: if( pxTCB != pxCurrentTCB )
      00083E 90r00r00         [24] 2557 	mov	dptr,#_pxCurrentTCB
      000841 E0               [24] 2558 	movx	a,@dptr
      000842 FD               [12] 2559 	mov	r5,a
      000843 A3               [24] 2560 	inc	dptr
      000844 E0               [24] 2561 	movx	a,@dptr
      000845 FE               [12] 2562 	mov	r6,a
      000846 A3               [24] 2563 	inc	dptr
      000847 E0               [24] 2564 	movx	a,@dptr
      000848 FF               [12] 2565 	mov	r7,a
      000849 A8*00            [24] 2566 	mov	r0,_bp
      00084B 08               [12] 2567 	inc	r0
      00084C C0 05            [24] 2568 	push	ar5
      00084E C0 06            [24] 2569 	push	ar6
      000850 C0 07            [24] 2570 	push	ar7
      000852 86 82            [24] 2571 	mov	dpl,@r0
      000854 08               [12] 2572 	inc	r0
      000855 86 83            [24] 2573 	mov	dph,@r0
      000857 08               [12] 2574 	inc	r0
      000858 86 F0            [24] 2575 	mov	b,@r0
      00085A 12r00r00         [24] 2576 	lcall	___gptr_cmp
      00085D 15 81            [12] 2577 	dec	sp
      00085F 15 81            [12] 2578 	dec	sp
      000861 15 81            [12] 2579 	dec	sp
      000863 70 03            [24] 2580 	jnz	00146$
      000865 02r08r76         [24] 2581 	ljmp	00109$
      000868                       2582 00146$:
                           000868  2583 	C$tasks.c$1235$2_0$211 ==.
                                   2584 ;	tasks.c:1235: prvDeleteTCB( pxTCB );
      000868 A8*00            [24] 2585 	mov	r0,_bp
      00086A 08               [12] 2586 	inc	r0
      00086B 86 82            [24] 2587 	mov	dpl,@r0
      00086D 08               [12] 2588 	inc	r0
      00086E 86 83            [24] 2589 	mov	dph,@r0
      000870 08               [12] 2590 	inc	r0
      000871 86 F0            [24] 2591 	mov	b,@r0
      000873 12r2Br69         [24] 2592 	lcall	_prvDeleteTCB
      000876                       2593 00109$:
                           000876  2594 	C$tasks.c$1240$1_0$203 ==.
                                   2595 ;	tasks.c:1240: if( xSchedulerRunning != pdFALSE )
      000876 90r00r08         [24] 2596 	mov	dptr,#_xSchedulerRunning
      000879 E0               [24] 2597 	movx	a,@dptr
      00087A 70 03            [24] 2598 	jnz	00147$
      00087C 02r08rAE         [24] 2599 	ljmp	00114$
      00087F                       2600 00147$:
                           00087F  2601 	C$tasks.c$1242$2_0$212 ==.
                                   2602 ;	tasks.c:1242: if( pxTCB == pxCurrentTCB )
      00087F 90r00r00         [24] 2603 	mov	dptr,#_pxCurrentTCB
      000882 E0               [24] 2604 	movx	a,@dptr
      000883 FD               [12] 2605 	mov	r5,a
      000884 A3               [24] 2606 	inc	dptr
      000885 E0               [24] 2607 	movx	a,@dptr
      000886 FE               [12] 2608 	mov	r6,a
      000887 A3               [24] 2609 	inc	dptr
      000888 E0               [24] 2610 	movx	a,@dptr
      000889 FF               [12] 2611 	mov	r7,a
      00088A A8*00            [24] 2612 	mov	r0,_bp
      00088C 08               [12] 2613 	inc	r0
      00088D C0 05            [24] 2614 	push	ar5
      00088F C0 06            [24] 2615 	push	ar6
      000891 C0 07            [24] 2616 	push	ar7
      000893 86 82            [24] 2617 	mov	dpl,@r0
      000895 08               [12] 2618 	inc	r0
      000896 86 83            [24] 2619 	mov	dph,@r0
      000898 08               [12] 2620 	inc	r0
      000899 86 F0            [24] 2621 	mov	b,@r0
      00089B 12r00r00         [24] 2622 	lcall	___gptr_cmp
      00089E 15 81            [12] 2623 	dec	sp
      0008A0 15 81            [12] 2624 	dec	sp
      0008A2 15 81            [12] 2625 	dec	sp
      0008A4 70 02            [24] 2626 	jnz	00148$
      0008A6 80 03            [24] 2627 	sjmp	00149$
      0008A8                       2628 00148$:
      0008A8 02r08rAE         [24] 2629 	ljmp	00114$
      0008AB                       2630 00149$:
                           0008AB  2631 	C$tasks.c$1245$3_0$213 ==.
                                   2632 ;	tasks.c:1245: portYIELD_WITHIN_API();
      0008AB 12r00r00         [24] 2633 	lcall	_vPortYield
      0008AE                       2634 00114$:
                           0008AE  2635 	C$tasks.c$1252$1_0$203 ==.
                                   2636 ;	tasks.c:1252: }
      0008AE 85*00 81         [24] 2637 	mov	sp,_bp
      0008B1 D0*00            [24] 2638 	pop	_bp
                           0008B3  2639 	C$tasks.c$1252$1_0$203 ==.
                           0008B3  2640 	XG$vTaskDelete$0$0 ==.
      0008B3 22               [24] 2641 	ret
                                   2642 ;------------------------------------------------------------
                                   2643 ;Allocation info for local variables in function 'vTaskDelay'
                                   2644 ;------------------------------------------------------------
                                   2645 ;xTicksToDelay             Allocated to registers r6 r7 
                                   2646 ;xAlreadyYielded           Allocated to registers r5 
                                   2647 ;------------------------------------------------------------
                           0008B4  2648 	G$vTaskDelay$0$0 ==.
                           0008B4  2649 	C$tasks.c$1346$1_0$216 ==.
                                   2650 ;	tasks.c:1346: void vTaskDelay( const TickType_t xTicksToDelay )
                                   2651 ;	-----------------------------------------
                                   2652 ;	 function vTaskDelay
                                   2653 ;	-----------------------------------------
      0008B4                       2654 _vTaskDelay:
      0008B4 AE 82            [24] 2655 	mov	r6,dpl
      0008B6 AF 83            [24] 2656 	mov	r7,dph
                           0008B8  2657 	C$tasks.c$1348$2_0$216 ==.
                                   2658 ;	tasks.c:1348: BaseType_t xAlreadyYielded = pdFALSE;
      0008B8 7D 00            [12] 2659 	mov	r5,#0x00
                           0008BA  2660 	C$tasks.c$1351$1_0$216 ==.
                                   2661 ;	tasks.c:1351: if( xTicksToDelay > ( TickType_t ) 0U )
      0008BA EE               [12] 2662 	mov	a,r6
      0008BB 4F               [12] 2663 	orl	a,r7
      0008BC 70 03            [24] 2664 	jnz	00115$
      0008BE 02r08rE0         [24] 2665 	ljmp	00102$
      0008C1                       2666 00115$:
                           0008C1  2667 	C$tasks.c$1354$2_0$217 ==.
                                   2668 ;	tasks.c:1354: vTaskSuspendAll();
      0008C1 C0 07            [24] 2669 	push	ar7
      0008C3 C0 06            [24] 2670 	push	ar6
      0008C5 12r09r58         [24] 2671 	lcall	_vTaskSuspendAll
      0008C8 D0 06            [24] 2672 	pop	ar6
      0008CA D0 07            [24] 2673 	pop	ar7
                           0008CC  2674 	C$tasks.c$1365$3_0$218 ==.
                                   2675 ;	tasks.c:1365: prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
      0008CC 74 00            [12] 2676 	mov	a,#0x00
      0008CE C0 E0            [24] 2677 	push	acc
      0008D0 8E 82            [24] 2678 	mov	dpl,r6
      0008D2 8F 83            [24] 2679 	mov	dph,r7
      0008D4 12r46rF6         [24] 2680 	lcall	_prvAddCurrentTaskToDelayedList
      0008D7 15 81            [12] 2681 	dec	sp
                           0008D9  2682 	C$tasks.c$1367$2_0$217 ==.
                                   2683 ;	tasks.c:1367: xAlreadyYielded = xTaskResumeAll();
      0008D9 12r09r60         [24] 2684 	lcall	_xTaskResumeAll
      0008DC AF 82            [24] 2685 	mov	r7,dpl
      0008DE 8F 05            [24] 2686 	mov	ar5,r7
      0008E0                       2687 00102$:
                           0008E0  2688 	C$tasks.c$1376$1_0$216 ==.
                                   2689 ;	tasks.c:1376: if( xAlreadyYielded == pdFALSE )
      0008E0 ED               [12] 2690 	mov	a,r5
      0008E1 60 03            [24] 2691 	jz	00116$
      0008E3 02r08rE9         [24] 2692 	ljmp	00105$
      0008E6                       2693 00116$:
                           0008E6  2694 	C$tasks.c$1378$2_0$220 ==.
                                   2695 ;	tasks.c:1378: portYIELD_WITHIN_API();
      0008E6 12r00r00         [24] 2696 	lcall	_vPortYield
      0008E9                       2697 00105$:
                           0008E9  2698 	C$tasks.c$1384$1_0$216 ==.
                                   2699 ;	tasks.c:1384: }
                           0008E9  2700 	C$tasks.c$1384$1_0$216 ==.
                           0008E9  2701 	XG$vTaskDelay$0$0 ==.
      0008E9 22               [24] 2702 	ret
                                   2703 ;------------------------------------------------------------
                                   2704 ;Allocation info for local variables in function 'vTaskStartScheduler'
                                   2705 ;------------------------------------------------------------
                                   2706 ;xReturn                   Allocated to registers r7 
                                   2707 ;------------------------------------------------------------
                           0008EA  2708 	G$vTaskStartScheduler$0$0 ==.
                           0008EA  2709 	C$tasks.c$1997$1_0$223 ==.
                                   2710 ;	tasks.c:1997: void vTaskStartScheduler( void )
                                   2711 ;	-----------------------------------------
                                   2712 ;	 function vTaskStartScheduler
                                   2713 ;	-----------------------------------------
      0008EA                       2714 _vTaskStartScheduler:
                           0008EA  2715 	C$tasks.c$2036$2_0$224 ==.
                                   2716 ;	tasks.c:2036: &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */
                           0008EA  2717 	C$tasks.c$2032$2_0$224 ==.
                                   2718 ;	tasks.c:2032: configIDLE_TASK_NAME,
                           0008EA  2719 	C$tasks.c$2031$2_0$224 ==.
                                   2720 ;	tasks.c:2031: xReturn = xTaskCreate( prvIdleTask,
      0008EA 74r10            [12] 2721 	mov	a,#_xIdleTaskHandle
      0008EC C0 E0            [24] 2722 	push	acc
      0008EE 74s00            [12] 2723 	mov	a,#(_xIdleTaskHandle >> 8)
      0008F0 C0 E0            [24] 2724 	push	acc
      0008F2 74 00            [12] 2725 	mov	a,#0x00
      0008F4 C0 E0            [24] 2726 	push	acc
      0008F6 C0 E0            [24] 2727 	push	acc
      0008F8 C0 E0            [24] 2728 	push	acc
      0008FA C0 E0            [24] 2729 	push	acc
      0008FC C0 E0            [24] 2730 	push	acc
      0008FE 74 A7            [12] 2731 	mov	a,#0xa7
      000900 C0 E0            [24] 2732 	push	acc
      000902 74 00            [12] 2733 	mov	a,#0x00
      000904 C0 E0            [24] 2734 	push	acc
      000906 74r01            [12] 2735 	mov	a,#___str_0
      000908 C0 E0            [24] 2736 	push	acc
      00090A 74s00            [12] 2737 	mov	a,#(___str_0 >> 8)
      00090C C0 E0            [24] 2738 	push	acc
      00090E 74 80            [12] 2739 	mov	a,#0x80
      000910 C0 E0            [24] 2740 	push	acc
      000912 75 82r72         [24] 2741 	mov	dpl,#_prvIdleTask
      000915 75 83s2A         [24] 2742 	mov	dph,#(_prvIdleTask >> 8)
      000918 12r00r00         [24] 2743 	lcall	_xTaskCreate
      00091B AF 82            [24] 2744 	mov	r7,dpl
      00091D E5 81            [12] 2745 	mov	a,sp
      00091F 24 F4            [12] 2746 	add	a,#0xf4
      000921 F5 81            [12] 2747 	mov	sp,a
                           000923  2748 	C$tasks.c$2053$1_0$223 ==.
                                   2749 ;	tasks.c:2053: if( xReturn == pdPASS )
      000923 BF 01 02         [24] 2750 	cjne	r7,#0x01,00111$
      000926 80 03            [24] 2751 	sjmp	00112$
      000928                       2752 00111$:
      000928 02r09r46         [24] 2753 	ljmp	00104$
      00092B                       2754 00112$:
                           00092B  2755 	C$tasks.c$2069$2_0$225 ==.
                                   2756 ;	tasks.c:2069: portDISABLE_INTERRUPTS();
                                   2757 ;	assignBit
      00092B C2 AF            [12] 2758 	clr	_EA
                           00092D  2759 	C$tasks.c$2081$2_0$225 ==.
                                   2760 ;	tasks.c:2081: xNextTaskUnblockTime = portMAX_DELAY;
      00092D 90r00r0E         [24] 2761 	mov	dptr,#_xNextTaskUnblockTime
      000930 74 FF            [12] 2762 	mov	a,#0xff
      000932 F0               [24] 2763 	movx	@dptr,a
      000933 A3               [24] 2764 	inc	dptr
      000934 F0               [24] 2765 	movx	@dptr,a
                           000935  2766 	C$tasks.c$2082$2_0$225 ==.
                                   2767 ;	tasks.c:2082: xSchedulerRunning = pdTRUE;
      000935 90r00r08         [24] 2768 	mov	dptr,#_xSchedulerRunning
      000938 74 01            [12] 2769 	mov	a,#0x01
      00093A F0               [24] 2770 	movx	@dptr,a
                           00093B  2771 	C$tasks.c$2083$2_0$225 ==.
                                   2772 ;	tasks.c:2083: xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
      00093B 90r00r05         [24] 2773 	mov	dptr,#_xTickCount
      00093E 74 00            [12] 2774 	mov	a,#0x00
      000940 F0               [24] 2775 	movx	@dptr,a
      000941 A3               [24] 2776 	inc	dptr
      000942 F0               [24] 2777 	movx	@dptr,a
                           000943  2778 	C$tasks.c$2097$2_0$225 ==.
                                   2779 ;	tasks.c:2097: if( xPortStartScheduler() != pdFALSE )
      000943 12r00r00         [24] 2780 	lcall	_xPortStartScheduler
      000946                       2781 00104$:
                           000946  2782 	C$tasks.c$2121$1_0$223 ==.
                                   2783 ;	tasks.c:2121: ( void ) uxTopUsedPriority;
      000946 90r00r00         [24] 2784 	mov	dptr,#_uxTopUsedPriority
      000949 E4               [12] 2785 	clr	a
      00094A 93               [24] 2786 	movc	a,@a+dptr
      00094B                       2787 00105$:
                           00094B  2788 	C$tasks.c$2122$1_0$223 ==.
                                   2789 ;	tasks.c:2122: }
                           00094B  2790 	C$tasks.c$2122$1_0$223 ==.
                           00094B  2791 	XG$vTaskStartScheduler$0$0 ==.
      00094B 22               [24] 2792 	ret
                                   2793 ;------------------------------------------------------------
                                   2794 ;Allocation info for local variables in function 'vTaskEndScheduler'
                                   2795 ;------------------------------------------------------------
                           00094C  2796 	G$vTaskEndScheduler$0$0 ==.
                           00094C  2797 	C$tasks.c$2125$1_0$230 ==.
                                   2798 ;	tasks.c:2125: void vTaskEndScheduler( void )
                                   2799 ;	-----------------------------------------
                                   2800 ;	 function vTaskEndScheduler
                                   2801 ;	-----------------------------------------
      00094C                       2802 _vTaskEndScheduler:
                           00094C  2803 	C$tasks.c$2130$1_0$230 ==.
                                   2804 ;	tasks.c:2130: portDISABLE_INTERRUPTS();
                                   2805 ;	assignBit
      00094C C2 AF            [12] 2806 	clr	_EA
                           00094E  2807 	C$tasks.c$2131$1_0$230 ==.
                                   2808 ;	tasks.c:2131: xSchedulerRunning = pdFALSE;
      00094E 90r00r08         [24] 2809 	mov	dptr,#_xSchedulerRunning
      000951 74 00            [12] 2810 	mov	a,#0x00
      000953 F0               [24] 2811 	movx	@dptr,a
                           000954  2812 	C$tasks.c$2132$1_0$230 ==.
                                   2813 ;	tasks.c:2132: vPortEndScheduler();
      000954 12r00r00         [24] 2814 	lcall	_vPortEndScheduler
      000957                       2815 00101$:
                           000957  2816 	C$tasks.c$2133$1_0$230 ==.
                                   2817 ;	tasks.c:2133: }
                           000957  2818 	C$tasks.c$2133$1_0$230 ==.
                           000957  2819 	XG$vTaskEndScheduler$0$0 ==.
      000957 22               [24] 2820 	ret
                                   2821 ;------------------------------------------------------------
                                   2822 ;Allocation info for local variables in function 'vTaskSuspendAll'
                                   2823 ;------------------------------------------------------------
                           000958  2824 	G$vTaskSuspendAll$0$0 ==.
                           000958  2825 	C$tasks.c$2136$1_0$232 ==.
                                   2826 ;	tasks.c:2136: void vTaskSuspendAll( void )
                                   2827 ;	-----------------------------------------
                                   2828 ;	 function vTaskSuspendAll
                                   2829 ;	-----------------------------------------
      000958                       2830 _vTaskSuspendAll:
                           000958  2831 	C$tasks.c$2149$1_0$232 ==.
                                   2832 ;	tasks.c:2149: ++uxSchedulerSuspended;
      000958 90r00r13         [24] 2833 	mov	dptr,#_uxSchedulerSuspended
      00095B E0               [24] 2834 	movx	a,@dptr
      00095C 24 01            [12] 2835 	add	a,#0x01
      00095E F0               [24] 2836 	movx	@dptr,a
      00095F                       2837 00101$:
                           00095F  2838 	C$tasks.c$2154$1_0$232 ==.
                                   2839 ;	tasks.c:2154: }
                           00095F  2840 	C$tasks.c$2154$1_0$232 ==.
                           00095F  2841 	XG$vTaskSuspendAll$0$0 ==.
      00095F 22               [24] 2842 	ret
                                   2843 ;------------------------------------------------------------
                                   2844 ;Allocation info for local variables in function 'xTaskResumeAll'
                                   2845 ;------------------------------------------------------------
                                   2846 ;pxTCB                     Allocated to stack - _bp +16
                                   2847 ;xAlreadyYielded           Allocated to registers 
                                   2848 ;pxList                    Allocated to stack - _bp +19
                                   2849 ;pxList                    Allocated to stack - _bp +19
                                   2850 ;pxIndex                   Allocated to registers r2 r3 r4 
                                   2851 ;xPendedCounts             Allocated to registers r4 r5 
                                   2852 ;sloc0                     Allocated to stack - _bp +4
                                   2853 ;sloc1                     Allocated to stack - _bp +1
                                   2854 ;sloc2                     Allocated to stack - _bp +7
                                   2855 ;sloc3                     Allocated to stack - _bp +10
                                   2856 ;sloc4                     Allocated to stack - _bp +13
                                   2857 ;------------------------------------------------------------
                           000960  2858 	G$xTaskResumeAll$0$0 ==.
                           000960  2859 	C$tasks.c$2220$1_0$234 ==.
                                   2860 ;	tasks.c:2220: BaseType_t xTaskResumeAll( void )
                                   2861 ;	-----------------------------------------
                                   2862 ;	 function xTaskResumeAll
                                   2863 ;	-----------------------------------------
      000960                       2864 _xTaskResumeAll:
      000960 C0*00            [24] 2865 	push	_bp
      000962 85 81*00         [24] 2866 	mov	_bp,sp
      000965 E5 81            [12] 2867 	mov	a,sp
      000967 24 15            [12] 2868 	add	a,#0x15
      000969 F5 81            [12] 2869 	mov	sp,a
                           00096B  2870 	C$tasks.c$2222$2_0$234 ==.
                                   2871 ;	tasks.c:2222: TCB_t * pxTCB = NULL;
      00096B E5*00            [12] 2872 	mov	a,_bp
      00096D 24 10            [12] 2873 	add	a,#0x10
      00096F F8               [12] 2874 	mov	r0,a
      000970 74 00            [12] 2875 	mov	a,#0x00
      000972 F6               [12] 2876 	mov	@r0,a
      000973 08               [12] 2877 	inc	r0
      000974 F6               [12] 2878 	mov	@r0,a
      000975 08               [12] 2879 	inc	r0
      000976 76 00            [12] 2880 	mov	@r0,#0x00
                           000978  2881 	C$tasks.c$2234$1_0$234 ==.
                                   2882 ;	tasks.c:2234: taskENTER_CRITICAL();
      000978 C0 E0            [24] 2883 	push ACC 
      00097A C0 A8            [24] 2884 	push IE 
                                   2885 ;	assignBit
      00097C C2 AF            [12] 2886 	clr	_EA
                           00097E  2887 	C$tasks.c$2236$2_0$235 ==.
                                   2888 ;	tasks.c:2236: --uxSchedulerSuspended;
      00097E 90r00r13         [24] 2889 	mov	dptr,#_uxSchedulerSuspended
      000981 E0               [24] 2890 	movx	a,@dptr
      000982 14               [12] 2891 	dec	a
      000983 F0               [24] 2892 	movx	@dptr,a
                           000984  2893 	C$tasks.c$2238$2_0$235 ==.
                                   2894 ;	tasks.c:2238: if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
      000984 E0               [24] 2895 	movx	a,@dptr
      000985 60 03            [24] 2896 	jz	00180$
      000987 02r0FrC2         [24] 2897 	ljmp	00124$
      00098A                       2898 00180$:
                           00098A  2899 	C$tasks.c$2240$3_0$236 ==.
                                   2900 ;	tasks.c:2240: if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
      00098A 90r00r04         [24] 2901 	mov	dptr,#_uxCurrentNumberOfTasks
      00098D E0               [24] 2902 	movx	a,@dptr
      00098E 70 03            [24] 2903 	jnz	00181$
      000990 02r0FrC2         [24] 2904 	ljmp	00124$
      000993                       2905 00181$:
                           000993  2906 	C$tasks.c$2244$5_0$238 ==.
                                   2907 ;	tasks.c:2244: while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
      000993                       2908 00109$:
      000993 90r00r4E         [24] 2909 	mov	dptr,#_xPendingReadyList
      000996 E0               [24] 2910 	movx	a,@dptr
      000997 70 03            [24] 2911 	jnz	00182$
      000999 02r0Fr6B         [24] 2912 	ljmp	00111$
      00099C                       2913 00182$:
                           00099C  2914 	C$tasks.c$2246$5_0$238 ==.
                                   2915 ;	tasks.c:2246: pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      00099C 90r00r54         [24] 2916 	mov	dptr,#(_xPendingReadyList + 0x0006)
      00099F E0               [24] 2917 	movx	a,@dptr
      0009A0 FA               [12] 2918 	mov	r2,a
      0009A1 A3               [24] 2919 	inc	dptr
      0009A2 E0               [24] 2920 	movx	a,@dptr
      0009A3 FB               [12] 2921 	mov	r3,a
      0009A4 A3               [24] 2922 	inc	dptr
      0009A5 E0               [24] 2923 	movx	a,@dptr
      0009A6 FC               [12] 2924 	mov	r4,a
      0009A7 74 08            [12] 2925 	mov	a,#0x08
      0009A9 2A               [12] 2926 	add	a,r2
      0009AA FA               [12] 2927 	mov	r2,a
      0009AB 74 00            [12] 2928 	mov	a,#0x00
      0009AD 3B               [12] 2929 	addc	a,r3
      0009AE FB               [12] 2930 	mov	r3,a
      0009AF 8A 82            [24] 2931 	mov	dpl,r2
      0009B1 8B 83            [24] 2932 	mov	dph,r3
      0009B3 8C F0            [24] 2933 	mov	b,r4
      0009B5 12r00r00         [24] 2934 	lcall	__gptrget
      0009B8 FA               [12] 2935 	mov	r2,a
      0009B9 A3               [24] 2936 	inc	dptr
      0009BA 12r00r00         [24] 2937 	lcall	__gptrget
      0009BD FB               [12] 2938 	mov	r3,a
      0009BE A3               [24] 2939 	inc	dptr
      0009BF 12r00r00         [24] 2940 	lcall	__gptrget
      0009C2 FC               [12] 2941 	mov	r4,a
      0009C3 E5*00            [12] 2942 	mov	a,_bp
      0009C5 24 10            [12] 2943 	add	a,#0x10
      0009C7 F8               [12] 2944 	mov	r0,a
      0009C8 A6 02            [24] 2945 	mov	@r0,ar2
      0009CA 08               [12] 2946 	inc	r0
      0009CB A6 03            [24] 2947 	mov	@r0,ar3
      0009CD 08               [12] 2948 	inc	r0
      0009CE A6 04            [24] 2949 	mov	@r0,ar4
                           0009D0  2950 	C$tasks.c$2247$6_0$239 ==.
                                   2951 ;	tasks.c:2247: listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
      0009D0 E5*00            [12] 2952 	mov	a,_bp
      0009D2 24 10            [12] 2953 	add	a,#0x10
      0009D4 F8               [12] 2954 	mov	r0,a
      0009D5 74 11            [12] 2955 	mov	a,#0x11
      0009D7 26               [12] 2956 	add	a,@r0
      0009D8 FA               [12] 2957 	mov	r2,a
      0009D9 74 00            [12] 2958 	mov	a,#0x00
      0009DB 08               [12] 2959 	inc	r0
      0009DC 36               [12] 2960 	addc	a,@r0
      0009DD FB               [12] 2961 	mov	r3,a
      0009DE 08               [12] 2962 	inc	r0
      0009DF 86 04            [24] 2963 	mov	ar4,@r0
      0009E1 E5*00            [12] 2964 	mov	a,_bp
      0009E3 24 10            [12] 2965 	add	a,#0x10
      0009E5 F8               [12] 2966 	mov	r0,a
      0009E6 74 1C            [12] 2967 	mov	a,#0x1c
      0009E8 26               [12] 2968 	add	a,@r0
      0009E9 FD               [12] 2969 	mov	r5,a
      0009EA 74 00            [12] 2970 	mov	a,#0x00
      0009EC 08               [12] 2971 	inc	r0
      0009ED 36               [12] 2972 	addc	a,@r0
      0009EE FE               [12] 2973 	mov	r6,a
      0009EF 08               [12] 2974 	inc	r0
      0009F0 86 07            [24] 2975 	mov	ar7,@r0
      0009F2 8D 82            [24] 2976 	mov	dpl,r5
      0009F4 8E 83            [24] 2977 	mov	dph,r6
      0009F6 8F F0            [24] 2978 	mov	b,r7
      0009F8 E5*00            [12] 2979 	mov	a,_bp
      0009FA 24 13            [12] 2980 	add	a,#0x13
      0009FC F8               [12] 2981 	mov	r0,a
      0009FD 12r00r00         [24] 2982 	lcall	__gptrget
      000A00 F6               [12] 2983 	mov	@r0,a
      000A01 A3               [24] 2984 	inc	dptr
      000A02 12r00r00         [24] 2985 	lcall	__gptrget
      000A05 08               [12] 2986 	inc	r0
      000A06 F6               [12] 2987 	mov	@r0,a
      000A07 A3               [24] 2988 	inc	dptr
      000A08 12r00r00         [24] 2989 	lcall	__gptrget
      000A0B 08               [12] 2990 	inc	r0
      000A0C F6               [12] 2991 	mov	@r0,a
      000A0D E5*00            [12] 2992 	mov	a,_bp
      000A0F 24 10            [12] 2993 	add	a,#0x10
      000A11 F8               [12] 2994 	mov	r0,a
      000A12 E5*00            [12] 2995 	mov	a,_bp
      000A14 24 04            [12] 2996 	add	a,#0x04
      000A16 F9               [12] 2997 	mov	r1,a
      000A17 74 13            [12] 2998 	mov	a,#0x13
      000A19 26               [12] 2999 	add	a,@r0
      000A1A F7               [12] 3000 	mov	@r1,a
      000A1B 74 00            [12] 3001 	mov	a,#0x00
      000A1D 08               [12] 3002 	inc	r0
      000A1E 36               [12] 3003 	addc	a,@r0
      000A1F 09               [12] 3004 	inc	r1
      000A20 F7               [12] 3005 	mov	@r1,a
      000A21 08               [12] 3006 	inc	r0
      000A22 E6               [12] 3007 	mov	a,@r0
      000A23 09               [12] 3008 	inc	r1
      000A24 F7               [12] 3009 	mov	@r1,a
      000A25 E5*00            [12] 3010 	mov	a,_bp
      000A27 24 04            [12] 3011 	add	a,#0x04
      000A29 F8               [12] 3012 	mov	r0,a
      000A2A 86 82            [24] 3013 	mov	dpl,@r0
      000A2C 08               [12] 3014 	inc	r0
      000A2D 86 83            [24] 3015 	mov	dph,@r0
      000A2F 08               [12] 3016 	inc	r0
      000A30 86 F0            [24] 3017 	mov	b,@r0
      000A32 12r00r00         [24] 3018 	lcall	__gptrget
      000A35 FD               [12] 3019 	mov	r5,a
      000A36 A3               [24] 3020 	inc	dptr
      000A37 12r00r00         [24] 3021 	lcall	__gptrget
      000A3A FE               [12] 3022 	mov	r6,a
      000A3B A3               [24] 3023 	inc	dptr
      000A3C 12r00r00         [24] 3024 	lcall	__gptrget
      000A3F FF               [12] 3025 	mov	r7,a
      000A40 E5*00            [12] 3026 	mov	a,_bp
      000A42 24 07            [12] 3027 	add	a,#0x07
      000A44 F8               [12] 3028 	mov	r0,a
      000A45 74 05            [12] 3029 	mov	a,#0x05
      000A47 2D               [12] 3030 	add	a,r5
      000A48 F6               [12] 3031 	mov	@r0,a
      000A49 74 00            [12] 3032 	mov	a,#0x00
      000A4B 3E               [12] 3033 	addc	a,r6
      000A4C 08               [12] 3034 	inc	r0
      000A4D F6               [12] 3035 	mov	@r0,a
      000A4E 08               [12] 3036 	inc	r0
      000A4F A6 07            [24] 3037 	mov	@r0,ar7
      000A51 E5*00            [12] 3038 	mov	a,_bp
      000A53 24 10            [12] 3039 	add	a,#0x10
      000A55 F8               [12] 3040 	mov	r0,a
      000A56 A9*00            [24] 3041 	mov	r1,_bp
      000A58 09               [12] 3042 	inc	r1
      000A59 74 16            [12] 3043 	mov	a,#0x16
      000A5B 26               [12] 3044 	add	a,@r0
      000A5C F7               [12] 3045 	mov	@r1,a
      000A5D 74 00            [12] 3046 	mov	a,#0x00
      000A5F 08               [12] 3047 	inc	r0
      000A60 36               [12] 3048 	addc	a,@r0
      000A61 09               [12] 3049 	inc	r1
      000A62 F7               [12] 3050 	mov	@r1,a
      000A63 08               [12] 3051 	inc	r0
      000A64 E6               [12] 3052 	mov	a,@r0
      000A65 09               [12] 3053 	inc	r1
      000A66 F7               [12] 3054 	mov	@r1,a
      000A67 A8*00            [24] 3055 	mov	r0,_bp
      000A69 08               [12] 3056 	inc	r0
      000A6A 86 82            [24] 3057 	mov	dpl,@r0
      000A6C 08               [12] 3058 	inc	r0
      000A6D 86 83            [24] 3059 	mov	dph,@r0
      000A6F 08               [12] 3060 	inc	r0
      000A70 86 F0            [24] 3061 	mov	b,@r0
      000A72 12r00r00         [24] 3062 	lcall	__gptrget
      000A75 FD               [12] 3063 	mov	r5,a
      000A76 A3               [24] 3064 	inc	dptr
      000A77 12r00r00         [24] 3065 	lcall	__gptrget
      000A7A FE               [12] 3066 	mov	r6,a
      000A7B A3               [24] 3067 	inc	dptr
      000A7C 12r00r00         [24] 3068 	lcall	__gptrget
      000A7F FF               [12] 3069 	mov	r7,a
      000A80 E5*00            [12] 3070 	mov	a,_bp
      000A82 24 07            [12] 3071 	add	a,#0x07
      000A84 F8               [12] 3072 	mov	r0,a
      000A85 86 82            [24] 3073 	mov	dpl,@r0
      000A87 08               [12] 3074 	inc	r0
      000A88 86 83            [24] 3075 	mov	dph,@r0
      000A8A 08               [12] 3076 	inc	r0
      000A8B 86 F0            [24] 3077 	mov	b,@r0
      000A8D ED               [12] 3078 	mov	a,r5
      000A8E 12r00r00         [24] 3079 	lcall	__gptrput
      000A91 A3               [24] 3080 	inc	dptr
      000A92 EE               [12] 3081 	mov	a,r6
      000A93 12r00r00         [24] 3082 	lcall	__gptrput
      000A96 A3               [24] 3083 	inc	dptr
      000A97 EF               [12] 3084 	mov	a,r7
      000A98 12r00r00         [24] 3085 	lcall	__gptrput
      000A9B A8*00            [24] 3086 	mov	r0,_bp
      000A9D 08               [12] 3087 	inc	r0
      000A9E 86 82            [24] 3088 	mov	dpl,@r0
      000AA0 08               [12] 3089 	inc	r0
      000AA1 86 83            [24] 3090 	mov	dph,@r0
      000AA3 08               [12] 3091 	inc	r0
      000AA4 86 F0            [24] 3092 	mov	b,@r0
      000AA6 12r00r00         [24] 3093 	lcall	__gptrget
      000AA9 FD               [12] 3094 	mov	r5,a
      000AAA A3               [24] 3095 	inc	dptr
      000AAB 12r00r00         [24] 3096 	lcall	__gptrget
      000AAE FE               [12] 3097 	mov	r6,a
      000AAF A3               [24] 3098 	inc	dptr
      000AB0 12r00r00         [24] 3099 	lcall	__gptrget
      000AB3 FF               [12] 3100 	mov	r7,a
      000AB4 E5*00            [12] 3101 	mov	a,_bp
      000AB6 24 07            [12] 3102 	add	a,#0x07
      000AB8 F8               [12] 3103 	mov	r0,a
      000AB9 74 02            [12] 3104 	mov	a,#0x02
      000ABB 2D               [12] 3105 	add	a,r5
      000ABC F6               [12] 3106 	mov	@r0,a
      000ABD 74 00            [12] 3107 	mov	a,#0x00
      000ABF 3E               [12] 3108 	addc	a,r6
      000AC0 08               [12] 3109 	inc	r0
      000AC1 F6               [12] 3110 	mov	@r0,a
      000AC2 08               [12] 3111 	inc	r0
      000AC3 A6 07            [24] 3112 	mov	@r0,ar7
      000AC5 E5*00            [12] 3113 	mov	a,_bp
      000AC7 24 04            [12] 3114 	add	a,#0x04
      000AC9 F8               [12] 3115 	mov	r0,a
      000ACA 86 82            [24] 3116 	mov	dpl,@r0
      000ACC 08               [12] 3117 	inc	r0
      000ACD 86 83            [24] 3118 	mov	dph,@r0
      000ACF 08               [12] 3119 	inc	r0
      000AD0 86 F0            [24] 3120 	mov	b,@r0
      000AD2 12r00r00         [24] 3121 	lcall	__gptrget
      000AD5 FD               [12] 3122 	mov	r5,a
      000AD6 A3               [24] 3123 	inc	dptr
      000AD7 12r00r00         [24] 3124 	lcall	__gptrget
      000ADA FE               [12] 3125 	mov	r6,a
      000ADB A3               [24] 3126 	inc	dptr
      000ADC 12r00r00         [24] 3127 	lcall	__gptrget
      000ADF FF               [12] 3128 	mov	r7,a
      000AE0 E5*00            [12] 3129 	mov	a,_bp
      000AE2 24 07            [12] 3130 	add	a,#0x07
      000AE4 F8               [12] 3131 	mov	r0,a
      000AE5 86 82            [24] 3132 	mov	dpl,@r0
      000AE7 08               [12] 3133 	inc	r0
      000AE8 86 83            [24] 3134 	mov	dph,@r0
      000AEA 08               [12] 3135 	inc	r0
      000AEB 86 F0            [24] 3136 	mov	b,@r0
      000AED ED               [12] 3137 	mov	a,r5
      000AEE 12r00r00         [24] 3138 	lcall	__gptrput
      000AF1 A3               [24] 3139 	inc	dptr
      000AF2 EE               [12] 3140 	mov	a,r6
      000AF3 12r00r00         [24] 3141 	lcall	__gptrput
      000AF6 A3               [24] 3142 	inc	dptr
      000AF7 EF               [12] 3143 	mov	a,r7
      000AF8 12r00r00         [24] 3144 	lcall	__gptrput
      000AFB E5*00            [12] 3145 	mov	a,_bp
      000AFD 24 13            [12] 3146 	add	a,#0x13
      000AFF F8               [12] 3147 	mov	r0,a
      000B00 E5*00            [12] 3148 	mov	a,_bp
      000B02 24 07            [12] 3149 	add	a,#0x07
      000B04 F9               [12] 3150 	mov	r1,a
      000B05 74 01            [12] 3151 	mov	a,#0x01
      000B07 26               [12] 3152 	add	a,@r0
      000B08 F7               [12] 3153 	mov	@r1,a
      000B09 74 00            [12] 3154 	mov	a,#0x00
      000B0B 08               [12] 3155 	inc	r0
      000B0C 36               [12] 3156 	addc	a,@r0
      000B0D 09               [12] 3157 	inc	r1
      000B0E F7               [12] 3158 	mov	@r1,a
      000B0F 08               [12] 3159 	inc	r0
      000B10 E6               [12] 3160 	mov	a,@r0
      000B11 09               [12] 3161 	inc	r1
      000B12 F7               [12] 3162 	mov	@r1,a
      000B13 E5*00            [12] 3163 	mov	a,_bp
      000B15 24 07            [12] 3164 	add	a,#0x07
      000B17 F8               [12] 3165 	mov	r0,a
      000B18 86 82            [24] 3166 	mov	dpl,@r0
      000B1A 08               [12] 3167 	inc	r0
      000B1B 86 83            [24] 3168 	mov	dph,@r0
      000B1D 08               [12] 3169 	inc	r0
      000B1E 86 F0            [24] 3170 	mov	b,@r0
      000B20 12r00r00         [24] 3171 	lcall	__gptrget
      000B23 FD               [12] 3172 	mov	r5,a
      000B24 A3               [24] 3173 	inc	dptr
      000B25 12r00r00         [24] 3174 	lcall	__gptrget
      000B28 FE               [12] 3175 	mov	r6,a
      000B29 A3               [24] 3176 	inc	dptr
      000B2A 12r00r00         [24] 3177 	lcall	__gptrget
      000B2D FF               [12] 3178 	mov	r7,a
      000B2E C0 02            [24] 3179 	push	ar2
      000B30 C0 03            [24] 3180 	push	ar3
      000B32 C0 04            [24] 3181 	push	ar4
      000B34 8D 82            [24] 3182 	mov	dpl,r5
      000B36 8E 83            [24] 3183 	mov	dph,r6
      000B38 8F F0            [24] 3184 	mov	b,r7
      000B3A 12r00r00         [24] 3185 	lcall	___gptr_cmp
      000B3D 15 81            [12] 3186 	dec	sp
      000B3F 15 81            [12] 3187 	dec	sp
      000B41 15 81            [12] 3188 	dec	sp
      000B43 70 02            [24] 3189 	jnz	00183$
      000B45 80 03            [24] 3190 	sjmp	00184$
      000B47                       3191 00183$:
      000B47 02r0Br7E         [24] 3192 	ljmp	00102$
      000B4A                       3193 00184$:
      000B4A A8*00            [24] 3194 	mov	r0,_bp
      000B4C 08               [12] 3195 	inc	r0
      000B4D 86 82            [24] 3196 	mov	dpl,@r0
      000B4F 08               [12] 3197 	inc	r0
      000B50 86 83            [24] 3198 	mov	dph,@r0
      000B52 08               [12] 3199 	inc	r0
      000B53 86 F0            [24] 3200 	mov	b,@r0
      000B55 12r00r00         [24] 3201 	lcall	__gptrget
      000B58 FD               [12] 3202 	mov	r5,a
      000B59 A3               [24] 3203 	inc	dptr
      000B5A 12r00r00         [24] 3204 	lcall	__gptrget
      000B5D FE               [12] 3205 	mov	r6,a
      000B5E A3               [24] 3206 	inc	dptr
      000B5F 12r00r00         [24] 3207 	lcall	__gptrget
      000B62 FF               [12] 3208 	mov	r7,a
      000B63 E5*00            [12] 3209 	mov	a,_bp
      000B65 24 07            [12] 3210 	add	a,#0x07
      000B67 F8               [12] 3211 	mov	r0,a
      000B68 86 82            [24] 3212 	mov	dpl,@r0
      000B6A 08               [12] 3213 	inc	r0
      000B6B 86 83            [24] 3214 	mov	dph,@r0
      000B6D 08               [12] 3215 	inc	r0
      000B6E 86 F0            [24] 3216 	mov	b,@r0
      000B70 ED               [12] 3217 	mov	a,r5
      000B71 12r00r00         [24] 3218 	lcall	__gptrput
      000B74 A3               [24] 3219 	inc	dptr
      000B75 EE               [12] 3220 	mov	a,r6
      000B76 12r00r00         [24] 3221 	lcall	__gptrput
      000B79 A3               [24] 3222 	inc	dptr
      000B7A EF               [12] 3223 	mov	a,r7
      000B7B 12r00r00         [24] 3224 	lcall	__gptrput
      000B7E                       3225 00102$:
      000B7E 74 0B            [12] 3226 	mov	a,#0x0b
      000B80 2A               [12] 3227 	add	a,r2
      000B81 FA               [12] 3228 	mov	r2,a
      000B82 74 00            [12] 3229 	mov	a,#0x00
      000B84 3B               [12] 3230 	addc	a,r3
      000B85 FB               [12] 3231 	mov	r3,a
      000B86 8A 82            [24] 3232 	mov	dpl,r2
      000B88 8B 83            [24] 3233 	mov	dph,r3
      000B8A 8C F0            [24] 3234 	mov	b,r4
      000B8C 74 00            [12] 3235 	mov	a,#0x00
      000B8E 12r00r00         [24] 3236 	lcall	__gptrput
      000B91 A3               [24] 3237 	inc	dptr
      000B92 12r00r00         [24] 3238 	lcall	__gptrput
      000B95 A3               [24] 3239 	inc	dptr
      000B96 12r00r00         [24] 3240 	lcall	__gptrput
      000B99 E5*00            [12] 3241 	mov	a,_bp
      000B9B 24 13            [12] 3242 	add	a,#0x13
      000B9D F8               [12] 3243 	mov	r0,a
      000B9E 86 82            [24] 3244 	mov	dpl,@r0
      000BA0 08               [12] 3245 	inc	r0
      000BA1 86 83            [24] 3246 	mov	dph,@r0
      000BA3 08               [12] 3247 	inc	r0
      000BA4 86 F0            [24] 3248 	mov	b,@r0
      000BA6 12r00r00         [24] 3249 	lcall	__gptrget
      000BA9 FF               [12] 3250 	mov	r7,a
      000BAA 1F               [12] 3251 	dec	r7
      000BAB E5*00            [12] 3252 	mov	a,_bp
      000BAD 24 13            [12] 3253 	add	a,#0x13
      000BAF F8               [12] 3254 	mov	r0,a
      000BB0 86 82            [24] 3255 	mov	dpl,@r0
      000BB2 08               [12] 3256 	inc	r0
      000BB3 86 83            [24] 3257 	mov	dph,@r0
      000BB5 08               [12] 3258 	inc	r0
      000BB6 86 F0            [24] 3259 	mov	b,@r0
      000BB8 EF               [12] 3260 	mov	a,r7
      000BB9 12r00r00         [24] 3261 	lcall	__gptrput
                           000BBC  3262 	C$tasks.c$2249$6_0$241 ==.
                                   3263 ;	tasks.c:2249: listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
      000BBC E5*00            [12] 3264 	mov	a,_bp
      000BBE 24 10            [12] 3265 	add	a,#0x10
      000BC0 F8               [12] 3266 	mov	r0,a
      000BC1 74 03            [12] 3267 	mov	a,#0x03
      000BC3 26               [12] 3268 	add	a,@r0
      000BC4 FD               [12] 3269 	mov	r5,a
      000BC5 74 00            [12] 3270 	mov	a,#0x00
      000BC7 08               [12] 3271 	inc	r0
      000BC8 36               [12] 3272 	addc	a,@r0
      000BC9 FE               [12] 3273 	mov	r6,a
      000BCA 08               [12] 3274 	inc	r0
      000BCB 86 07            [24] 3275 	mov	ar7,@r0
      000BCD E5*00            [12] 3276 	mov	a,_bp
      000BCF 24 07            [12] 3277 	add	a,#0x07
      000BD1 F8               [12] 3278 	mov	r0,a
      000BD2 74 0B            [12] 3279 	mov	a,#0x0b
      000BD4 2D               [12] 3280 	add	a,r5
      000BD5 F6               [12] 3281 	mov	@r0,a
      000BD6 74 00            [12] 3282 	mov	a,#0x00
      000BD8 3E               [12] 3283 	addc	a,r6
      000BD9 08               [12] 3284 	inc	r0
      000BDA F6               [12] 3285 	mov	@r0,a
      000BDB 08               [12] 3286 	inc	r0
      000BDC A6 07            [24] 3287 	mov	@r0,ar7
      000BDE E5*00            [12] 3288 	mov	a,_bp
      000BE0 24 07            [12] 3289 	add	a,#0x07
      000BE2 F8               [12] 3290 	mov	r0,a
      000BE3 86 82            [24] 3291 	mov	dpl,@r0
      000BE5 08               [12] 3292 	inc	r0
      000BE6 86 83            [24] 3293 	mov	dph,@r0
      000BE8 08               [12] 3294 	inc	r0
      000BE9 86 F0            [24] 3295 	mov	b,@r0
      000BEB E5*00            [12] 3296 	mov	a,_bp
      000BED 24 13            [12] 3297 	add	a,#0x13
      000BEF F9               [12] 3298 	mov	r1,a
      000BF0 12r00r00         [24] 3299 	lcall	__gptrget
      000BF3 F7               [12] 3300 	mov	@r1,a
      000BF4 A3               [24] 3301 	inc	dptr
      000BF5 12r00r00         [24] 3302 	lcall	__gptrget
      000BF8 09               [12] 3303 	inc	r1
      000BF9 F7               [12] 3304 	mov	@r1,a
      000BFA A3               [24] 3305 	inc	dptr
      000BFB 12r00r00         [24] 3306 	lcall	__gptrget
      000BFE 09               [12] 3307 	inc	r1
      000BFF F7               [12] 3308 	mov	@r1,a
      000C00 A8*00            [24] 3309 	mov	r0,_bp
      000C02 08               [12] 3310 	inc	r0
      000C03 74 02            [12] 3311 	mov	a,#0x02
      000C05 2D               [12] 3312 	add	a,r5
      000C06 F6               [12] 3313 	mov	@r0,a
      000C07 74 00            [12] 3314 	mov	a,#0x00
      000C09 3E               [12] 3315 	addc	a,r6
      000C0A 08               [12] 3316 	inc	r0
      000C0B F6               [12] 3317 	mov	@r0,a
      000C0C 08               [12] 3318 	inc	r0
      000C0D A6 07            [24] 3319 	mov	@r0,ar7
      000C0F A8*00            [24] 3320 	mov	r0,_bp
      000C11 08               [12] 3321 	inc	r0
      000C12 86 82            [24] 3322 	mov	dpl,@r0
      000C14 08               [12] 3323 	inc	r0
      000C15 86 83            [24] 3324 	mov	dph,@r0
      000C17 08               [12] 3325 	inc	r0
      000C18 86 F0            [24] 3326 	mov	b,@r0
      000C1A 12r00r00         [24] 3327 	lcall	__gptrget
      000C1D FA               [12] 3328 	mov	r2,a
      000C1E A3               [24] 3329 	inc	dptr
      000C1F 12r00r00         [24] 3330 	lcall	__gptrget
      000C22 FB               [12] 3331 	mov	r3,a
      000C23 A3               [24] 3332 	inc	dptr
      000C24 12r00r00         [24] 3333 	lcall	__gptrget
      000C27 FC               [12] 3334 	mov	r4,a
      000C28 E5*00            [12] 3335 	mov	a,_bp
      000C2A 24 0A            [12] 3336 	add	a,#0x0a
      000C2C F8               [12] 3337 	mov	r0,a
      000C2D 74 05            [12] 3338 	mov	a,#0x05
      000C2F 2A               [12] 3339 	add	a,r2
      000C30 F6               [12] 3340 	mov	@r0,a
      000C31 74 00            [12] 3341 	mov	a,#0x00
      000C33 3B               [12] 3342 	addc	a,r3
      000C34 08               [12] 3343 	inc	r0
      000C35 F6               [12] 3344 	mov	@r0,a
      000C36 08               [12] 3345 	inc	r0
      000C37 A6 04            [24] 3346 	mov	@r0,ar4
      000C39 E5*00            [12] 3347 	mov	a,_bp
      000C3B 24 04            [12] 3348 	add	a,#0x04
      000C3D F8               [12] 3349 	mov	r0,a
      000C3E 74 05            [12] 3350 	mov	a,#0x05
      000C40 2D               [12] 3351 	add	a,r5
      000C41 F6               [12] 3352 	mov	@r0,a
      000C42 74 00            [12] 3353 	mov	a,#0x00
      000C44 3E               [12] 3354 	addc	a,r6
      000C45 08               [12] 3355 	inc	r0
      000C46 F6               [12] 3356 	mov	@r0,a
      000C47 08               [12] 3357 	inc	r0
      000C48 A6 07            [24] 3358 	mov	@r0,ar7
      000C4A E5*00            [12] 3359 	mov	a,_bp
      000C4C 24 04            [12] 3360 	add	a,#0x04
      000C4E F8               [12] 3361 	mov	r0,a
      000C4F 86 82            [24] 3362 	mov	dpl,@r0
      000C51 08               [12] 3363 	inc	r0
      000C52 86 83            [24] 3364 	mov	dph,@r0
      000C54 08               [12] 3365 	inc	r0
      000C55 86 F0            [24] 3366 	mov	b,@r0
      000C57 12r00r00         [24] 3367 	lcall	__gptrget
      000C5A FA               [12] 3368 	mov	r2,a
      000C5B A3               [24] 3369 	inc	dptr
      000C5C 12r00r00         [24] 3370 	lcall	__gptrget
      000C5F FB               [12] 3371 	mov	r3,a
      000C60 A3               [24] 3372 	inc	dptr
      000C61 12r00r00         [24] 3373 	lcall	__gptrget
      000C64 FC               [12] 3374 	mov	r4,a
      000C65 E5*00            [12] 3375 	mov	a,_bp
      000C67 24 0A            [12] 3376 	add	a,#0x0a
      000C69 F8               [12] 3377 	mov	r0,a
      000C6A 86 82            [24] 3378 	mov	dpl,@r0
      000C6C 08               [12] 3379 	inc	r0
      000C6D 86 83            [24] 3380 	mov	dph,@r0
      000C6F 08               [12] 3381 	inc	r0
      000C70 86 F0            [24] 3382 	mov	b,@r0
      000C72 EA               [12] 3383 	mov	a,r2
      000C73 12r00r00         [24] 3384 	lcall	__gptrput
      000C76 A3               [24] 3385 	inc	dptr
      000C77 EB               [12] 3386 	mov	a,r3
      000C78 12r00r00         [24] 3387 	lcall	__gptrput
      000C7B A3               [24] 3388 	inc	dptr
      000C7C EC               [12] 3389 	mov	a,r4
      000C7D 12r00r00         [24] 3390 	lcall	__gptrput
      000C80 E5*00            [12] 3391 	mov	a,_bp
      000C82 24 04            [12] 3392 	add	a,#0x04
      000C84 F8               [12] 3393 	mov	r0,a
      000C85 86 82            [24] 3394 	mov	dpl,@r0
      000C87 08               [12] 3395 	inc	r0
      000C88 86 83            [24] 3396 	mov	dph,@r0
      000C8A 08               [12] 3397 	inc	r0
      000C8B 86 F0            [24] 3398 	mov	b,@r0
      000C8D 12r00r00         [24] 3399 	lcall	__gptrget
      000C90 FA               [12] 3400 	mov	r2,a
      000C91 A3               [24] 3401 	inc	dptr
      000C92 12r00r00         [24] 3402 	lcall	__gptrget
      000C95 FB               [12] 3403 	mov	r3,a
      000C96 A3               [24] 3404 	inc	dptr
      000C97 12r00r00         [24] 3405 	lcall	__gptrget
      000C9A FC               [12] 3406 	mov	r4,a
      000C9B E5*00            [12] 3407 	mov	a,_bp
      000C9D 24 0A            [12] 3408 	add	a,#0x0a
      000C9F F8               [12] 3409 	mov	r0,a
      000CA0 74 02            [12] 3410 	mov	a,#0x02
      000CA2 2A               [12] 3411 	add	a,r2
      000CA3 F6               [12] 3412 	mov	@r0,a
      000CA4 74 00            [12] 3413 	mov	a,#0x00
      000CA6 3B               [12] 3414 	addc	a,r3
      000CA7 08               [12] 3415 	inc	r0
      000CA8 F6               [12] 3416 	mov	@r0,a
      000CA9 08               [12] 3417 	inc	r0
      000CAA A6 04            [24] 3418 	mov	@r0,ar4
      000CAC A8*00            [24] 3419 	mov	r0,_bp
      000CAE 08               [12] 3420 	inc	r0
      000CAF 86 82            [24] 3421 	mov	dpl,@r0
      000CB1 08               [12] 3422 	inc	r0
      000CB2 86 83            [24] 3423 	mov	dph,@r0
      000CB4 08               [12] 3424 	inc	r0
      000CB5 86 F0            [24] 3425 	mov	b,@r0
      000CB7 12r00r00         [24] 3426 	lcall	__gptrget
      000CBA FA               [12] 3427 	mov	r2,a
      000CBB A3               [24] 3428 	inc	dptr
      000CBC 12r00r00         [24] 3429 	lcall	__gptrget
      000CBF FB               [12] 3430 	mov	r3,a
      000CC0 A3               [24] 3431 	inc	dptr
      000CC1 12r00r00         [24] 3432 	lcall	__gptrget
      000CC4 FC               [12] 3433 	mov	r4,a
      000CC5 E5*00            [12] 3434 	mov	a,_bp
      000CC7 24 0A            [12] 3435 	add	a,#0x0a
      000CC9 F8               [12] 3436 	mov	r0,a
      000CCA 86 82            [24] 3437 	mov	dpl,@r0
      000CCC 08               [12] 3438 	inc	r0
      000CCD 86 83            [24] 3439 	mov	dph,@r0
      000CCF 08               [12] 3440 	inc	r0
      000CD0 86 F0            [24] 3441 	mov	b,@r0
      000CD2 EA               [12] 3442 	mov	a,r2
      000CD3 12r00r00         [24] 3443 	lcall	__gptrput
      000CD6 A3               [24] 3444 	inc	dptr
      000CD7 EB               [12] 3445 	mov	a,r3
      000CD8 12r00r00         [24] 3446 	lcall	__gptrput
      000CDB A3               [24] 3447 	inc	dptr
      000CDC EC               [12] 3448 	mov	a,r4
      000CDD 12r00r00         [24] 3449 	lcall	__gptrput
      000CE0 E5*00            [12] 3450 	mov	a,_bp
      000CE2 24 13            [12] 3451 	add	a,#0x13
      000CE4 F8               [12] 3452 	mov	r0,a
      000CE5 E5*00            [12] 3453 	mov	a,_bp
      000CE7 24 0A            [12] 3454 	add	a,#0x0a
      000CE9 F9               [12] 3455 	mov	r1,a
      000CEA 74 01            [12] 3456 	mov	a,#0x01
      000CEC 26               [12] 3457 	add	a,@r0
      000CED F7               [12] 3458 	mov	@r1,a
      000CEE 74 00            [12] 3459 	mov	a,#0x00
      000CF0 08               [12] 3460 	inc	r0
      000CF1 36               [12] 3461 	addc	a,@r0
      000CF2 09               [12] 3462 	inc	r1
      000CF3 F7               [12] 3463 	mov	@r1,a
      000CF4 08               [12] 3464 	inc	r0
      000CF5 E6               [12] 3465 	mov	a,@r0
      000CF6 09               [12] 3466 	inc	r1
      000CF7 F7               [12] 3467 	mov	@r1,a
      000CF8 E5*00            [12] 3468 	mov	a,_bp
      000CFA 24 0A            [12] 3469 	add	a,#0x0a
      000CFC F8               [12] 3470 	mov	r0,a
      000CFD 86 82            [24] 3471 	mov	dpl,@r0
      000CFF 08               [12] 3472 	inc	r0
      000D00 86 83            [24] 3473 	mov	dph,@r0
      000D02 08               [12] 3474 	inc	r0
      000D03 86 F0            [24] 3475 	mov	b,@r0
      000D05 12r00r00         [24] 3476 	lcall	__gptrget
      000D08 FA               [12] 3477 	mov	r2,a
      000D09 A3               [24] 3478 	inc	dptr
      000D0A 12r00r00         [24] 3479 	lcall	__gptrget
      000D0D FB               [12] 3480 	mov	r3,a
      000D0E A3               [24] 3481 	inc	dptr
      000D0F 12r00r00         [24] 3482 	lcall	__gptrget
      000D12 FC               [12] 3483 	mov	r4,a
      000D13 C0 05            [24] 3484 	push	ar5
      000D15 C0 06            [24] 3485 	push	ar6
      000D17 C0 07            [24] 3486 	push	ar7
      000D19 8A 82            [24] 3487 	mov	dpl,r2
      000D1B 8B 83            [24] 3488 	mov	dph,r3
      000D1D 8C F0            [24] 3489 	mov	b,r4
      000D1F 12r00r00         [24] 3490 	lcall	___gptr_cmp
      000D22 15 81            [12] 3491 	dec	sp
      000D24 15 81            [12] 3492 	dec	sp
      000D26 15 81            [12] 3493 	dec	sp
      000D28 70 02            [24] 3494 	jnz	00185$
      000D2A 80 03            [24] 3495 	sjmp	00186$
      000D2C                       3496 00185$:
      000D2C 02r0Dr65         [24] 3497 	ljmp	00104$
      000D2F                       3498 00186$:
      000D2F E5*00            [12] 3499 	mov	a,_bp
      000D31 24 04            [12] 3500 	add	a,#0x04
      000D33 F8               [12] 3501 	mov	r0,a
      000D34 86 82            [24] 3502 	mov	dpl,@r0
      000D36 08               [12] 3503 	inc	r0
      000D37 86 83            [24] 3504 	mov	dph,@r0
      000D39 08               [12] 3505 	inc	r0
      000D3A 86 F0            [24] 3506 	mov	b,@r0
      000D3C 12r00r00         [24] 3507 	lcall	__gptrget
      000D3F FA               [12] 3508 	mov	r2,a
      000D40 A3               [24] 3509 	inc	dptr
      000D41 12r00r00         [24] 3510 	lcall	__gptrget
      000D44 FB               [12] 3511 	mov	r3,a
      000D45 A3               [24] 3512 	inc	dptr
      000D46 12r00r00         [24] 3513 	lcall	__gptrget
      000D49 FC               [12] 3514 	mov	r4,a
      000D4A E5*00            [12] 3515 	mov	a,_bp
      000D4C 24 0A            [12] 3516 	add	a,#0x0a
      000D4E F8               [12] 3517 	mov	r0,a
      000D4F 86 82            [24] 3518 	mov	dpl,@r0
      000D51 08               [12] 3519 	inc	r0
      000D52 86 83            [24] 3520 	mov	dph,@r0
      000D54 08               [12] 3521 	inc	r0
      000D55 86 F0            [24] 3522 	mov	b,@r0
      000D57 EA               [12] 3523 	mov	a,r2
      000D58 12r00r00         [24] 3524 	lcall	__gptrput
      000D5B A3               [24] 3525 	inc	dptr
      000D5C EB               [12] 3526 	mov	a,r3
      000D5D 12r00r00         [24] 3527 	lcall	__gptrput
      000D60 A3               [24] 3528 	inc	dptr
      000D61 EC               [12] 3529 	mov	a,r4
      000D62 12r00r00         [24] 3530 	lcall	__gptrput
      000D65                       3531 00104$:
      000D65 C0 05            [24] 3532 	push	ar5
      000D67 C0 06            [24] 3533 	push	ar6
      000D69 C0 07            [24] 3534 	push	ar7
      000D6B E5*00            [12] 3535 	mov	a,_bp
      000D6D 24 07            [12] 3536 	add	a,#0x07
      000D6F F8               [12] 3537 	mov	r0,a
      000D70 86 82            [24] 3538 	mov	dpl,@r0
      000D72 08               [12] 3539 	inc	r0
      000D73 86 83            [24] 3540 	mov	dph,@r0
      000D75 08               [12] 3541 	inc	r0
      000D76 86 F0            [24] 3542 	mov	b,@r0
      000D78 74 00            [12] 3543 	mov	a,#0x00
      000D7A 12r00r00         [24] 3544 	lcall	__gptrput
      000D7D A3               [24] 3545 	inc	dptr
      000D7E 12r00r00         [24] 3546 	lcall	__gptrput
      000D81 A3               [24] 3547 	inc	dptr
      000D82 12r00r00         [24] 3548 	lcall	__gptrput
      000D85 E5*00            [12] 3549 	mov	a,_bp
      000D87 24 13            [12] 3550 	add	a,#0x13
      000D89 F8               [12] 3551 	mov	r0,a
      000D8A 86 82            [24] 3552 	mov	dpl,@r0
      000D8C 08               [12] 3553 	inc	r0
      000D8D 86 83            [24] 3554 	mov	dph,@r0
      000D8F 08               [12] 3555 	inc	r0
      000D90 86 F0            [24] 3556 	mov	b,@r0
      000D92 12r00r00         [24] 3557 	lcall	__gptrget
      000D95 FC               [12] 3558 	mov	r4,a
      000D96 1C               [12] 3559 	dec	r4
      000D97 E5*00            [12] 3560 	mov	a,_bp
      000D99 24 13            [12] 3561 	add	a,#0x13
      000D9B F8               [12] 3562 	mov	r0,a
      000D9C 86 82            [24] 3563 	mov	dpl,@r0
      000D9E 08               [12] 3564 	inc	r0
      000D9F 86 83            [24] 3565 	mov	dph,@r0
      000DA1 08               [12] 3566 	inc	r0
      000DA2 86 F0            [24] 3567 	mov	b,@r0
      000DA4 EC               [12] 3568 	mov	a,r4
      000DA5 12r00r00         [24] 3569 	lcall	__gptrput
                           000DA8  3570 	C$tasks.c$2250$6_0$243 ==.
                                   3571 ;	tasks.c:2250: prvAddTaskToReadyList( pxTCB );
      000DA8 E5*00            [12] 3572 	mov	a,_bp
      000DAA 24 10            [12] 3573 	add	a,#0x10
      000DAC F8               [12] 3574 	mov	r0,a
      000DAD E5*00            [12] 3575 	mov	a,_bp
      000DAF 24 0D            [12] 3576 	add	a,#0x0d
      000DB1 F9               [12] 3577 	mov	r1,a
      000DB2 74 1F            [12] 3578 	mov	a,#0x1f
      000DB4 26               [12] 3579 	add	a,@r0
      000DB5 F7               [12] 3580 	mov	@r1,a
      000DB6 74 00            [12] 3581 	mov	a,#0x00
      000DB8 08               [12] 3582 	inc	r0
      000DB9 36               [12] 3583 	addc	a,@r0
      000DBA 09               [12] 3584 	inc	r1
      000DBB F7               [12] 3585 	mov	@r1,a
      000DBC 08               [12] 3586 	inc	r0
      000DBD E6               [12] 3587 	mov	a,@r0
      000DBE 09               [12] 3588 	inc	r1
      000DBF F7               [12] 3589 	mov	@r1,a
      000DC0 E5*00            [12] 3590 	mov	a,_bp
      000DC2 24 0D            [12] 3591 	add	a,#0x0d
      000DC4 F8               [12] 3592 	mov	r0,a
      000DC5 86 82            [24] 3593 	mov	dpl,@r0
      000DC7 08               [12] 3594 	inc	r0
      000DC8 86 83            [24] 3595 	mov	dph,@r0
      000DCA 08               [12] 3596 	inc	r0
      000DCB 86 F0            [24] 3597 	mov	b,@r0
      000DCD 12r00r00         [24] 3598 	lcall	__gptrget
      000DD0 FC               [12] 3599 	mov	r4,a
      000DD1 90r00r07         [24] 3600 	mov	dptr,#_uxTopReadyPriority
      000DD4 E0               [24] 3601 	movx	a,@dptr
      000DD5 FF               [12] 3602 	mov	r7,a
      000DD6 C3               [12] 3603 	clr	c
      000DD7 EF               [12] 3604 	mov	a,r7
      000DD8 9C               [12] 3605 	subb	a,r4
      000DD9 D0 07            [24] 3606 	pop	ar7
      000DDB D0 06            [24] 3607 	pop	ar6
      000DDD D0 05            [24] 3608 	pop	ar5
      000DDF 40 03            [24] 3609 	jc	00187$
      000DE1 02r0DrE9         [24] 3610 	ljmp	00106$
      000DE4                       3611 00187$:
      000DE4 90r00r07         [24] 3612 	mov	dptr,#_uxTopReadyPriority
      000DE7 EC               [12] 3613 	mov	a,r4
      000DE8 F0               [24] 3614 	movx	@dptr,a
      000DE9                       3615 00106$:
      000DE9 E5*00            [12] 3616 	mov	a,_bp
      000DEB 24 0D            [12] 3617 	add	a,#0x0d
      000DED F8               [12] 3618 	mov	r0,a
      000DEE 86 82            [24] 3619 	mov	dpl,@r0
      000DF0 08               [12] 3620 	inc	r0
      000DF1 86 83            [24] 3621 	mov	dph,@r0
      000DF3 08               [12] 3622 	inc	r0
      000DF4 86 F0            [24] 3623 	mov	b,@r0
      000DF6 12r00r00         [24] 3624 	lcall	__gptrget
      000DF9 FC               [12] 3625 	mov	r4,a
      000DFA EC               [12] 3626 	mov	a,r4
      000DFB 75 F0 0C         [24] 3627 	mov	b,#0x0c
      000DFE A4               [48] 3628 	mul	ab
      000DFF 24r00            [12] 3629 	add	a,#_pxReadyTasksLists
      000E01 FB               [12] 3630 	mov	r3,a
      000E02 74s00            [12] 3631 	mov	a,#(_pxReadyTasksLists >> 8)
      000E04 35 F0            [12] 3632 	addc	a,b
      000E06 FC               [12] 3633 	mov	r4,a
      000E07 8B 82            [24] 3634 	mov	dpl,r3
      000E09 8C 83            [24] 3635 	mov	dph,r4
      000E0B A3               [24] 3636 	inc	dptr
      000E0C E0               [24] 3637 	movx	a,@dptr
      000E0D FA               [12] 3638 	mov	r2,a
      000E0E A3               [24] 3639 	inc	dptr
      000E0F E0               [24] 3640 	movx	a,@dptr
      000E10 FB               [12] 3641 	mov	r3,a
      000E11 A3               [24] 3642 	inc	dptr
      000E12 E0               [24] 3643 	movx	a,@dptr
      000E13 FC               [12] 3644 	mov	r4,a
      000E14 A8*00            [24] 3645 	mov	r0,_bp
      000E16 08               [12] 3646 	inc	r0
      000E17 86 82            [24] 3647 	mov	dpl,@r0
      000E19 08               [12] 3648 	inc	r0
      000E1A 86 83            [24] 3649 	mov	dph,@r0
      000E1C 08               [12] 3650 	inc	r0
      000E1D 86 F0            [24] 3651 	mov	b,@r0
      000E1F EA               [12] 3652 	mov	a,r2
      000E20 12r00r00         [24] 3653 	lcall	__gptrput
      000E23 A3               [24] 3654 	inc	dptr
      000E24 EB               [12] 3655 	mov	a,r3
      000E25 12r00r00         [24] 3656 	lcall	__gptrput
      000E28 A3               [24] 3657 	inc	dptr
      000E29 EC               [12] 3658 	mov	a,r4
      000E2A 12r00r00         [24] 3659 	lcall	__gptrput
      000E2D E5*00            [12] 3660 	mov	a,_bp
      000E2F 24 0A            [12] 3661 	add	a,#0x0a
      000E31 F8               [12] 3662 	mov	r0,a
      000E32 74 05            [12] 3663 	mov	a,#0x05
      000E34 2A               [12] 3664 	add	a,r2
      000E35 F6               [12] 3665 	mov	@r0,a
      000E36 74 00            [12] 3666 	mov	a,#0x00
      000E38 3B               [12] 3667 	addc	a,r3
      000E39 08               [12] 3668 	inc	r0
      000E3A F6               [12] 3669 	mov	@r0,a
      000E3B 08               [12] 3670 	inc	r0
      000E3C A6 04            [24] 3671 	mov	@r0,ar4
      000E3E E5*00            [12] 3672 	mov	a,_bp
      000E40 24 0A            [12] 3673 	add	a,#0x0a
      000E42 F8               [12] 3674 	mov	r0,a
      000E43 86 82            [24] 3675 	mov	dpl,@r0
      000E45 08               [12] 3676 	inc	r0
      000E46 86 83            [24] 3677 	mov	dph,@r0
      000E48 08               [12] 3678 	inc	r0
      000E49 86 F0            [24] 3679 	mov	b,@r0
      000E4B 12r00r00         [24] 3680 	lcall	__gptrget
      000E4E FA               [12] 3681 	mov	r2,a
      000E4F A3               [24] 3682 	inc	dptr
      000E50 12r00r00         [24] 3683 	lcall	__gptrget
      000E53 FB               [12] 3684 	mov	r3,a
      000E54 A3               [24] 3685 	inc	dptr
      000E55 12r00r00         [24] 3686 	lcall	__gptrget
      000E58 FC               [12] 3687 	mov	r4,a
      000E59 E5*00            [12] 3688 	mov	a,_bp
      000E5B 24 04            [12] 3689 	add	a,#0x04
      000E5D F8               [12] 3690 	mov	r0,a
      000E5E 86 82            [24] 3691 	mov	dpl,@r0
      000E60 08               [12] 3692 	inc	r0
      000E61 86 83            [24] 3693 	mov	dph,@r0
      000E63 08               [12] 3694 	inc	r0
      000E64 86 F0            [24] 3695 	mov	b,@r0
      000E66 EA               [12] 3696 	mov	a,r2
      000E67 12r00r00         [24] 3697 	lcall	__gptrput
      000E6A A3               [24] 3698 	inc	dptr
      000E6B EB               [12] 3699 	mov	a,r3
      000E6C 12r00r00         [24] 3700 	lcall	__gptrput
      000E6F A3               [24] 3701 	inc	dptr
      000E70 EC               [12] 3702 	mov	a,r4
      000E71 12r00r00         [24] 3703 	lcall	__gptrput
      000E74 E5*00            [12] 3704 	mov	a,_bp
      000E76 24 0A            [12] 3705 	add	a,#0x0a
      000E78 F8               [12] 3706 	mov	r0,a
      000E79 86 82            [24] 3707 	mov	dpl,@r0
      000E7B 08               [12] 3708 	inc	r0
      000E7C 86 83            [24] 3709 	mov	dph,@r0
      000E7E 08               [12] 3710 	inc	r0
      000E7F 86 F0            [24] 3711 	mov	b,@r0
      000E81 12r00r00         [24] 3712 	lcall	__gptrget
      000E84 FA               [12] 3713 	mov	r2,a
      000E85 A3               [24] 3714 	inc	dptr
      000E86 12r00r00         [24] 3715 	lcall	__gptrget
      000E89 FB               [12] 3716 	mov	r3,a
      000E8A A3               [24] 3717 	inc	dptr
      000E8B 12r00r00         [24] 3718 	lcall	__gptrget
      000E8E FC               [12] 3719 	mov	r4,a
      000E8F 74 02            [12] 3720 	mov	a,#0x02
      000E91 2A               [12] 3721 	add	a,r2
      000E92 FA               [12] 3722 	mov	r2,a
      000E93 74 00            [12] 3723 	mov	a,#0x00
      000E95 3B               [12] 3724 	addc	a,r3
      000E96 FB               [12] 3725 	mov	r3,a
      000E97 8A 82            [24] 3726 	mov	dpl,r2
      000E99 8B 83            [24] 3727 	mov	dph,r3
      000E9B 8C F0            [24] 3728 	mov	b,r4
      000E9D ED               [12] 3729 	mov	a,r5
      000E9E 12r00r00         [24] 3730 	lcall	__gptrput
      000EA1 A3               [24] 3731 	inc	dptr
      000EA2 EE               [12] 3732 	mov	a,r6
      000EA3 12r00r00         [24] 3733 	lcall	__gptrput
      000EA6 A3               [24] 3734 	inc	dptr
      000EA7 EF               [12] 3735 	mov	a,r7
      000EA8 12r00r00         [24] 3736 	lcall	__gptrput
      000EAB E5*00            [12] 3737 	mov	a,_bp
      000EAD 24 0A            [12] 3738 	add	a,#0x0a
      000EAF F8               [12] 3739 	mov	r0,a
      000EB0 86 82            [24] 3740 	mov	dpl,@r0
      000EB2 08               [12] 3741 	inc	r0
      000EB3 86 83            [24] 3742 	mov	dph,@r0
      000EB5 08               [12] 3743 	inc	r0
      000EB6 86 F0            [24] 3744 	mov	b,@r0
      000EB8 ED               [12] 3745 	mov	a,r5
      000EB9 12r00r00         [24] 3746 	lcall	__gptrput
      000EBC A3               [24] 3747 	inc	dptr
      000EBD EE               [12] 3748 	mov	a,r6
      000EBE 12r00r00         [24] 3749 	lcall	__gptrput
      000EC1 A3               [24] 3750 	inc	dptr
      000EC2 EF               [12] 3751 	mov	a,r7
      000EC3 12r00r00         [24] 3752 	lcall	__gptrput
      000EC6 E5*00            [12] 3753 	mov	a,_bp
      000EC8 24 0D            [12] 3754 	add	a,#0x0d
      000ECA F8               [12] 3755 	mov	r0,a
      000ECB 86 82            [24] 3756 	mov	dpl,@r0
      000ECD 08               [12] 3757 	inc	r0
      000ECE 86 83            [24] 3758 	mov	dph,@r0
      000ED0 08               [12] 3759 	inc	r0
      000ED1 86 F0            [24] 3760 	mov	b,@r0
      000ED3 12r00r00         [24] 3761 	lcall	__gptrget
      000ED6 FF               [12] 3762 	mov	r7,a
      000ED7 EF               [12] 3763 	mov	a,r7
      000ED8 75 F0 0C         [24] 3764 	mov	b,#0x0c
      000EDB A4               [48] 3765 	mul	ab
      000EDC 24r00            [12] 3766 	add	a,#_pxReadyTasksLists
      000EDE FE               [12] 3767 	mov	r6,a
      000EDF 74s00            [12] 3768 	mov	a,#(_pxReadyTasksLists >> 8)
      000EE1 35 F0            [12] 3769 	addc	a,b
      000EE3 FF               [12] 3770 	mov	r7,a
      000EE4 7D 00            [12] 3771 	mov	r5,#0x00
      000EE6 E5*00            [12] 3772 	mov	a,_bp
      000EE8 24 07            [12] 3773 	add	a,#0x07
      000EEA F8               [12] 3774 	mov	r0,a
      000EEB 86 82            [24] 3775 	mov	dpl,@r0
      000EED 08               [12] 3776 	inc	r0
      000EEE 86 83            [24] 3777 	mov	dph,@r0
      000EF0 08               [12] 3778 	inc	r0
      000EF1 86 F0            [24] 3779 	mov	b,@r0
      000EF3 EE               [12] 3780 	mov	a,r6
      000EF4 12r00r00         [24] 3781 	lcall	__gptrput
      000EF7 A3               [24] 3782 	inc	dptr
      000EF8 EF               [12] 3783 	mov	a,r7
      000EF9 12r00r00         [24] 3784 	lcall	__gptrput
      000EFC A3               [24] 3785 	inc	dptr
      000EFD ED               [12] 3786 	mov	a,r5
      000EFE 12r00r00         [24] 3787 	lcall	__gptrput
      000F01 E5*00            [12] 3788 	mov	a,_bp
      000F03 24 0D            [12] 3789 	add	a,#0x0d
      000F05 F8               [12] 3790 	mov	r0,a
      000F06 86 82            [24] 3791 	mov	dpl,@r0
      000F08 08               [12] 3792 	inc	r0
      000F09 86 83            [24] 3793 	mov	dph,@r0
      000F0B 08               [12] 3794 	inc	r0
      000F0C 86 F0            [24] 3795 	mov	b,@r0
      000F0E 12r00r00         [24] 3796 	lcall	__gptrget
      000F11 FF               [12] 3797 	mov	r7,a
      000F12 EF               [12] 3798 	mov	a,r7
      000F13 75 F0 0C         [24] 3799 	mov	b,#0x0c
      000F16 A4               [48] 3800 	mul	ab
      000F17 24r00            [12] 3801 	add	a,#_pxReadyTasksLists
      000F19 FE               [12] 3802 	mov	r6,a
      000F1A 74s00            [12] 3803 	mov	a,#(_pxReadyTasksLists >> 8)
      000F1C 35 F0            [12] 3804 	addc	a,b
      000F1E FF               [12] 3805 	mov	r7,a
      000F1F 8E 82            [24] 3806 	mov	dpl,r6
      000F21 8F 83            [24] 3807 	mov	dph,r7
      000F23 E0               [24] 3808 	movx	a,@dptr
      000F24 FD               [12] 3809 	mov	r5,a
      000F25 0D               [12] 3810 	inc	r5
      000F26 8E 82            [24] 3811 	mov	dpl,r6
      000F28 8F 83            [24] 3812 	mov	dph,r7
      000F2A ED               [12] 3813 	mov	a,r5
      000F2B F0               [24] 3814 	movx	@dptr,a
                           000F2C  3815 	C$tasks.c$2254$5_0$238 ==.
                                   3816 ;	tasks.c:2254: if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
      000F2C E5*00            [12] 3817 	mov	a,_bp
      000F2E 24 0D            [12] 3818 	add	a,#0x0d
      000F30 F8               [12] 3819 	mov	r0,a
      000F31 86 82            [24] 3820 	mov	dpl,@r0
      000F33 08               [12] 3821 	inc	r0
      000F34 86 83            [24] 3822 	mov	dph,@r0
      000F36 08               [12] 3823 	inc	r0
      000F37 86 F0            [24] 3824 	mov	b,@r0
      000F39 12r00r00         [24] 3825 	lcall	__gptrget
      000F3C FF               [12] 3826 	mov	r7,a
      000F3D 90r00r00         [24] 3827 	mov	dptr,#_pxCurrentTCB
      000F40 E0               [24] 3828 	movx	a,@dptr
      000F41 FC               [12] 3829 	mov	r4,a
      000F42 A3               [24] 3830 	inc	dptr
      000F43 E0               [24] 3831 	movx	a,@dptr
      000F44 FD               [12] 3832 	mov	r5,a
      000F45 A3               [24] 3833 	inc	dptr
      000F46 E0               [24] 3834 	movx	a,@dptr
      000F47 FE               [12] 3835 	mov	r6,a
      000F48 74 1F            [12] 3836 	mov	a,#0x1f
      000F4A 2C               [12] 3837 	add	a,r4
      000F4B FC               [12] 3838 	mov	r4,a
      000F4C 74 00            [12] 3839 	mov	a,#0x00
      000F4E 3D               [12] 3840 	addc	a,r5
      000F4F FD               [12] 3841 	mov	r5,a
      000F50 8C 82            [24] 3842 	mov	dpl,r4
      000F52 8D 83            [24] 3843 	mov	dph,r5
      000F54 8E F0            [24] 3844 	mov	b,r6
      000F56 12r00r00         [24] 3845 	lcall	__gptrget
      000F59 FC               [12] 3846 	mov	r4,a
      000F5A C3               [12] 3847 	clr	c
      000F5B EF               [12] 3848 	mov	a,r7
      000F5C 9C               [12] 3849 	subb	a,r4
      000F5D 50 03            [24] 3850 	jnc	00188$
      000F5F 02r09r93         [24] 3851 	ljmp	00109$
      000F62                       3852 00188$:
                           000F62  3853 	C$tasks.c$2256$6_0$246 ==.
                                   3854 ;	tasks.c:2256: xYieldPending = pdTRUE;
      000F62 90r00r0B         [24] 3855 	mov	dptr,#_xYieldPending
      000F65 74 01            [12] 3856 	mov	a,#0x01
      000F67 F0               [24] 3857 	movx	@dptr,a
      000F68 02r09r93         [24] 3858 	ljmp	00109$
      000F6B                       3859 00111$:
                           000F6B  3860 	C$tasks.c$2264$4_0$237 ==.
                                   3861 ;	tasks.c:2264: if( pxTCB != NULL )
      000F6B E5*00            [12] 3862 	mov	a,_bp
      000F6D 24 10            [12] 3863 	add	a,#0x10
      000F6F F8               [12] 3864 	mov	r0,a
      000F70 E6               [12] 3865 	mov	a,@r0
      000F71 08               [12] 3866 	inc	r0
      000F72 46               [12] 3867 	orl	a,@r0
      000F73 70 03            [24] 3868 	jnz	00189$
      000F75 02r0Fr7B         [24] 3869 	ljmp	00113$
      000F78                       3870 00189$:
                           000F78  3871 	C$tasks.c$2272$5_0$248 ==.
                                   3872 ;	tasks.c:2272: prvResetNextTaskUnblockTime();
      000F78 12r2BrAC         [24] 3873 	lcall	_prvResetNextTaskUnblockTime
      000F7B                       3874 00113$:
                           000F7B  3875 	C$tasks.c$2280$6_0$249 ==.
                                   3876 ;	tasks.c:2280: TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
      000F7B 90r00r09         [24] 3877 	mov	dptr,#_xPendedTicks
      000F7E E0               [24] 3878 	movx	a,@dptr
      000F7F FE               [12] 3879 	mov	r6,a
      000F80 A3               [24] 3880 	inc	dptr
      000F81 E0               [24] 3881 	movx	a,@dptr
      000F82 FF               [12] 3882 	mov	r7,a
      000F83 8E 04            [24] 3883 	mov	ar4,r6
      000F85 8F 05            [24] 3884 	mov	ar5,r7
                           000F87  3885 	C$tasks.c$2282$5_0$249 ==.
                                   3886 ;	tasks.c:2282: if( xPendedCounts > ( TickType_t ) 0U )
      000F87 EE               [12] 3887 	mov	a,r6
      000F88 4F               [12] 3888 	orl	a,r7
      000F89 70 03            [24] 3889 	jnz	00190$
      000F8B 02r0FrBE         [24] 3890 	ljmp	00120$
      000F8E                       3891 00190$:
                           000F8E  3892 	C$tasks.c$2284$1_0$234 ==.
                                   3893 ;	tasks.c:2284: do
      000F8E 8C 06            [24] 3894 	mov	ar6,r4
      000F90 8D 07            [24] 3895 	mov	ar7,r5
      000F92                       3896 00116$:
                           000F92  3897 	C$tasks.c$2286$7_0$251 ==.
                                   3898 ;	tasks.c:2286: if( xTaskIncrementTick() != pdFALSE )
      000F92 C0 07            [24] 3899 	push	ar7
      000F94 C0 06            [24] 3900 	push	ar6
      000F96 12r10r62         [24] 3901 	lcall	_xTaskIncrementTick
      000F99 E5 82            [12] 3902 	mov	a,dpl
      000F9B D0 06            [24] 3903 	pop	ar6
      000F9D D0 07            [24] 3904 	pop	ar7
      000F9F 70 03            [24] 3905 	jnz	00191$
      000FA1 02r0FrAA         [24] 3906 	ljmp	00115$
      000FA4                       3907 00191$:
                           000FA4  3908 	C$tasks.c$2288$8_0$252 ==.
                                   3909 ;	tasks.c:2288: xYieldPending = pdTRUE;
      000FA4 90r00r0B         [24] 3910 	mov	dptr,#_xYieldPending
      000FA7 74 01            [12] 3911 	mov	a,#0x01
      000FA9 F0               [24] 3912 	movx	@dptr,a
      000FAA                       3913 00115$:
                           000FAA  3914 	C$tasks.c$2295$7_0$251 ==.
                                   3915 ;	tasks.c:2295: --xPendedCounts;
      000FAA 1E               [12] 3916 	dec	r6
      000FAB BE FF 01         [24] 3917 	cjne	r6,#0xff,00192$
      000FAE 1F               [12] 3918 	dec	r7
      000FAF                       3919 00192$:
                           000FAF  3920 	C$tasks.c$2296$6_0$250 ==.
                                   3921 ;	tasks.c:2296: } while( xPendedCounts > ( TickType_t ) 0U );
      000FAF EE               [12] 3922 	mov	a,r6
      000FB0 4F               [12] 3923 	orl	a,r7
      000FB1 60 03            [24] 3924 	jz	00193$
      000FB3 02r0Fr92         [24] 3925 	ljmp	00116$
      000FB6                       3926 00193$:
                           000FB6  3927 	C$tasks.c$2298$6_0$250 ==.
                                   3928 ;	tasks.c:2298: xPendedTicks = 0;
      000FB6 90r00r09         [24] 3929 	mov	dptr,#_xPendedTicks
      000FB9 74 00            [12] 3930 	mov	a,#0x00
      000FBB F0               [24] 3931 	movx	@dptr,a
      000FBC A3               [24] 3932 	inc	dptr
      000FBD F0               [24] 3933 	movx	@dptr,a
      000FBE                       3934 00120$:
                           000FBE  3935 	C$tasks.c$2306$4_0$237 ==.
                                   3936 ;	tasks.c:2306: if( xYieldPending != pdFALSE )
      000FBE 90r00r0B         [24] 3937 	mov	dptr,#_xYieldPending
      000FC1 E0               [24] 3938 	movx	a,@dptr
      000FC2                       3939 00124$:
                           000FC2  3940 	C$tasks.c$2326$1_0$234 ==.
                                   3941 ;	tasks.c:2326: taskEXIT_CRITICAL();
      000FC2 D0 E0            [24] 3942 	pop ACC 
      000FC4 53 E0 80         [24] 3943 	anl	_ACC,#0x80
      000FC7 E5 E0            [12] 3944 	mov	a,_ACC
      000FC9 42 A8            [12] 3945 	orl	_IE,a
      000FCB D0 E0            [24] 3946 	pop ACC 
                           000FCD  3947 	C$tasks.c$2328$1_0$234 ==.
                                   3948 ;	tasks.c:2328: return xAlreadyYielded;
      000FCD 75 82 00         [24] 3949 	mov	dpl,#0x00
      000FD0                       3950 00125$:
                           000FD0  3951 	C$tasks.c$2329$1_0$234 ==.
                                   3952 ;	tasks.c:2329: }
      000FD0 85*00 81         [24] 3953 	mov	sp,_bp
      000FD3 D0*00            [24] 3954 	pop	_bp
                           000FD5  3955 	C$tasks.c$2329$1_0$234 ==.
                           000FD5  3956 	XG$xTaskResumeAll$0$0 ==.
      000FD5 22               [24] 3957 	ret
                                   3958 ;------------------------------------------------------------
                                   3959 ;Allocation info for local variables in function 'xTaskGetTickCount'
                                   3960 ;------------------------------------------------------------
                                   3961 ;xTicks                    Allocated to registers r6 r7 
                                   3962 ;------------------------------------------------------------
                           000FD6  3963 	G$xTaskGetTickCount$0$0 ==.
                           000FD6  3964 	C$tasks.c$2332$1_0$259 ==.
                                   3965 ;	tasks.c:2332: TickType_t xTaskGetTickCount( void )
                                   3966 ;	-----------------------------------------
                                   3967 ;	 function xTaskGetTickCount
                                   3968 ;	-----------------------------------------
      000FD6                       3969 _xTaskGetTickCount:
                           000FD6  3970 	C$tasks.c$2337$1_0$259 ==.
                                   3971 ;	tasks.c:2337: portTICK_TYPE_ENTER_CRITICAL();
      000FD6 C0 E0            [24] 3972 	push ACC 
      000FD8 C0 A8            [24] 3973 	push IE 
                                   3974 ;	assignBit
      000FDA C2 AF            [12] 3975 	clr	_EA
                           000FDC  3976 	C$tasks.c$2339$2_0$260 ==.
                                   3977 ;	tasks.c:2339: xTicks = xTickCount;
      000FDC 90r00r05         [24] 3978 	mov	dptr,#_xTickCount
      000FDF E0               [24] 3979 	movx	a,@dptr
      000FE0 FE               [12] 3980 	mov	r6,a
      000FE1 A3               [24] 3981 	inc	dptr
      000FE2 E0               [24] 3982 	movx	a,@dptr
      000FE3 FF               [12] 3983 	mov	r7,a
                           000FE4  3984 	C$tasks.c$2341$1_0$259 ==.
                                   3985 ;	tasks.c:2341: portTICK_TYPE_EXIT_CRITICAL();
      000FE4 D0 E0            [24] 3986 	pop ACC 
      000FE6 53 E0 80         [24] 3987 	anl	_ACC,#0x80
      000FE9 E5 E0            [12] 3988 	mov	a,_ACC
      000FEB 42 A8            [12] 3989 	orl	_IE,a
      000FED D0 E0            [24] 3990 	pop ACC 
                           000FEF  3991 	C$tasks.c$2343$1_0$259 ==.
                                   3992 ;	tasks.c:2343: return xTicks;
      000FEF 8E 82            [24] 3993 	mov	dpl,r6
      000FF1 8F 83            [24] 3994 	mov	dph,r7
      000FF3                       3995 00101$:
                           000FF3  3996 	C$tasks.c$2344$1_0$259 ==.
                                   3997 ;	tasks.c:2344: }
                           000FF3  3998 	C$tasks.c$2344$1_0$259 ==.
                           000FF3  3999 	XG$xTaskGetTickCount$0$0 ==.
      000FF3 22               [24] 4000 	ret
                                   4001 ;------------------------------------------------------------
                                   4002 ;Allocation info for local variables in function 'xTaskGetTickCountFromISR'
                                   4003 ;------------------------------------------------------------
                                   4004 ;xReturn                   Allocated to registers r6 r7 
                                   4005 ;uxSavedInterruptStatus    Allocated to registers 
                                   4006 ;------------------------------------------------------------
                           000FF4  4007 	G$xTaskGetTickCountFromISR$0$0 ==.
                           000FF4  4008 	C$tasks.c$2347$1_0$262 ==.
                                   4009 ;	tasks.c:2347: TickType_t xTaskGetTickCountFromISR( void )
                                   4010 ;	-----------------------------------------
                                   4011 ;	 function xTaskGetTickCountFromISR
                                   4012 ;	-----------------------------------------
      000FF4                       4013 _xTaskGetTickCountFromISR:
                           000FF4  4014 	C$tasks.c$2370$2_0$263 ==.
                                   4015 ;	tasks.c:2370: xReturn = xTickCount;
      000FF4 90r00r05         [24] 4016 	mov	dptr,#_xTickCount
      000FF7 E0               [24] 4017 	movx	a,@dptr
      000FF8 FE               [12] 4018 	mov	r6,a
      000FF9 A3               [24] 4019 	inc	dptr
      000FFA E0               [24] 4020 	movx	a,@dptr
      000FFB FF               [12] 4021 	mov	r7,a
                           000FFC  4022 	C$tasks.c$2374$1_0$262 ==.
                                   4023 ;	tasks.c:2374: return xReturn;
      000FFC 8E 82            [24] 4024 	mov	dpl,r6
      000FFE 8F 83            [24] 4025 	mov	dph,r7
      001000                       4026 00101$:
                           001000  4027 	C$tasks.c$2375$1_0$262 ==.
                                   4028 ;	tasks.c:2375: }
                           001000  4029 	C$tasks.c$2375$1_0$262 ==.
                           001000  4030 	XG$xTaskGetTickCountFromISR$0$0 ==.
      001000 22               [24] 4031 	ret
                                   4032 ;------------------------------------------------------------
                                   4033 ;Allocation info for local variables in function 'uxTaskGetNumberOfTasks'
                                   4034 ;------------------------------------------------------------
                           001001  4035 	G$uxTaskGetNumberOfTasks$0$0 ==.
                           001001  4036 	C$tasks.c$2378$1_0$265 ==.
                                   4037 ;	tasks.c:2378: UBaseType_t uxTaskGetNumberOfTasks( void )
                                   4038 ;	-----------------------------------------
                                   4039 ;	 function uxTaskGetNumberOfTasks
                                   4040 ;	-----------------------------------------
      001001                       4041 _uxTaskGetNumberOfTasks:
                           001001  4042 	C$tasks.c$2382$1_0$265 ==.
                                   4043 ;	tasks.c:2382: return uxCurrentNumberOfTasks;
      001001 90r00r04         [24] 4044 	mov	dptr,#_uxCurrentNumberOfTasks
      001004 E0               [24] 4045 	movx	a,@dptr
      001005 FF               [12] 4046 	mov	r7,a
      001006 8F 82            [24] 4047 	mov	dpl,r7
      001008                       4048 00101$:
                           001008  4049 	C$tasks.c$2383$1_0$265 ==.
                                   4050 ;	tasks.c:2383: }
                           001008  4051 	C$tasks.c$2383$1_0$265 ==.
                           001008  4052 	XG$uxTaskGetNumberOfTasks$0$0 ==.
      001008 22               [24] 4053 	ret
                                   4054 ;------------------------------------------------------------
                                   4055 ;Allocation info for local variables in function 'pcTaskGetName'
                                   4056 ;------------------------------------------------------------
                                   4057 ;xTaskToQuery              Allocated to registers r5 r6 r7 
                                   4058 ;pxTCB                     Allocated to registers r2 r3 r4 
                                   4059 ;------------------------------------------------------------
                           001009  4060 	G$pcTaskGetName$0$0 ==.
                           001009  4061 	C$tasks.c$2386$1_0$267 ==.
                                   4062 ;	tasks.c:2386: char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
                                   4063 ;	-----------------------------------------
                                   4064 ;	 function pcTaskGetName
                                   4065 ;	-----------------------------------------
      001009                       4066 _pcTaskGetName:
      001009 AD 82            [24] 4067 	mov	r5,dpl
      00100B AE 83            [24] 4068 	mov	r6,dph
      00100D AF F0            [24] 4069 	mov	r7,b
                           00100F  4070 	C$tasks.c$2392$1_0$267 ==.
                                   4071 ;	tasks.c:2392: pxTCB = prvGetTCBFromHandle( xTaskToQuery );
      00100F ED               [12] 4072 	mov	a,r5
      001010 4E               [12] 4073 	orl	a,r6
      001011 60 03            [24] 4074 	jz	00109$
      001013 02r10r24         [24] 4075 	ljmp	00103$
      001016                       4076 00109$:
      001016 90r00r00         [24] 4077 	mov	dptr,#_pxCurrentTCB
      001019 E0               [24] 4078 	movx	a,@dptr
      00101A FA               [12] 4079 	mov	r2,a
      00101B A3               [24] 4080 	inc	dptr
      00101C E0               [24] 4081 	movx	a,@dptr
      00101D FB               [12] 4082 	mov	r3,a
      00101E A3               [24] 4083 	inc	dptr
      00101F E0               [24] 4084 	movx	a,@dptr
      001020 FC               [12] 4085 	mov	r4,a
      001021 02r10r2A         [24] 4086 	ljmp	00104$
      001024                       4087 00103$:
      001024 8D 02            [24] 4088 	mov	ar2,r5
      001026 8E 03            [24] 4089 	mov	ar3,r6
      001028 8F 04            [24] 4090 	mov	ar4,r7
      00102A                       4091 00104$:
                           00102A  4092 	C$tasks.c$2394$1_0$267 ==.
                                   4093 ;	tasks.c:2394: return &( pxTCB->pcTaskName[ 0 ] );
      00102A 74 23            [12] 4094 	mov	a,#0x23
      00102C 2A               [12] 4095 	add	a,r2
      00102D FA               [12] 4096 	mov	r2,a
      00102E 74 00            [12] 4097 	mov	a,#0x00
      001030 3B               [12] 4098 	addc	a,r3
      001031 FB               [12] 4099 	mov	r3,a
      001032 8A 82            [24] 4100 	mov	dpl,r2
      001034 8B 83            [24] 4101 	mov	dph,r3
      001036 8C F0            [24] 4102 	mov	b,r4
      001038                       4103 00101$:
                           001038  4104 	C$tasks.c$2395$1_0$267 ==.
                                   4105 ;	tasks.c:2395: }
                           001038  4106 	C$tasks.c$2395$1_0$267 ==.
                           001038  4107 	XG$pcTaskGetName$0$0 ==.
      001038 22               [24] 4108 	ret
                                   4109 ;------------------------------------------------------------
                                   4110 ;Allocation info for local variables in function 'xTaskCatchUpTicks'
                                   4111 ;------------------------------------------------------------
                                   4112 ;xTicksToCatchUp           Allocated to registers r6 r7 
                                   4113 ;xYieldOccurred            Allocated to registers r7 
                                   4114 ;------------------------------------------------------------
                           001039  4115 	G$xTaskCatchUpTicks$0$0 ==.
                           001039  4116 	C$tasks.c$2638$1_0$269 ==.
                                   4117 ;	tasks.c:2638: BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
                                   4118 ;	-----------------------------------------
                                   4119 ;	 function xTaskCatchUpTicks
                                   4120 ;	-----------------------------------------
      001039                       4121 _xTaskCatchUpTicks:
      001039 AE 82            [24] 4122 	mov	r6,dpl
      00103B AF 83            [24] 4123 	mov	r7,dph
                           00103D  4124 	C$tasks.c$2648$1_0$269 ==.
                                   4125 ;	tasks.c:2648: vTaskSuspendAll();
      00103D C0 07            [24] 4126 	push	ar7
      00103F C0 06            [24] 4127 	push	ar6
      001041 12r09r58         [24] 4128 	lcall	_vTaskSuspendAll
      001044 D0 06            [24] 4129 	pop	ar6
      001046 D0 07            [24] 4130 	pop	ar7
                           001048  4131 	C$tasks.c$2649$1_0$269 ==.
                                   4132 ;	tasks.c:2649: xPendedTicks += xTicksToCatchUp;
      001048 90r00r09         [24] 4133 	mov	dptr,#_xPendedTicks
      00104B E0               [24] 4134 	movx	a,@dptr
      00104C FC               [12] 4135 	mov	r4,a
      00104D A3               [24] 4136 	inc	dptr
      00104E E0               [24] 4137 	movx	a,@dptr
      00104F FD               [12] 4138 	mov	r5,a
      001050 90r00r09         [24] 4139 	mov	dptr,#_xPendedTicks
      001053 EE               [12] 4140 	mov	a,r6
      001054 2C               [12] 4141 	add	a,r4
      001055 F0               [24] 4142 	movx	@dptr,a
      001056 EF               [12] 4143 	mov	a,r7
      001057 3D               [12] 4144 	addc	a,r5
      001058 A3               [24] 4145 	inc	dptr
      001059 F0               [24] 4146 	movx	@dptr,a
                           00105A  4147 	C$tasks.c$2650$1_0$269 ==.
                                   4148 ;	tasks.c:2650: xYieldOccurred = xTaskResumeAll();
      00105A 12r09r60         [24] 4149 	lcall	_xTaskResumeAll
      00105D AF 82            [24] 4150 	mov	r7,dpl
                           00105F  4151 	C$tasks.c$2652$1_0$269 ==.
                                   4152 ;	tasks.c:2652: return xYieldOccurred;
      00105F 8F 82            [24] 4153 	mov	dpl,r7
      001061                       4154 00101$:
                           001061  4155 	C$tasks.c$2653$1_0$269 ==.
                                   4156 ;	tasks.c:2653: }
                           001061  4157 	C$tasks.c$2653$1_0$269 ==.
                           001061  4158 	XG$xTaskCatchUpTicks$0$0 ==.
      001061 22               [24] 4159 	ret
                                   4160 ;------------------------------------------------------------
                                   4161 ;Allocation info for local variables in function 'xTaskIncrementTick'
                                   4162 ;------------------------------------------------------------
                                   4163 ;pxTCB                     Allocated to stack - _bp +16
                                   4164 ;xItemValue                Allocated to registers r6 r7 
                                   4165 ;xSwitchRequired           Allocated to registers 
                                   4166 ;xConstTickCount           Allocated to stack - _bp +19
                                   4167 ;pxTemp                    Allocated to registers r3 r4 r5 
                                   4168 ;pxList                    Allocated to stack - _bp +21
                                   4169 ;pxList                    Allocated to stack - _bp +21
                                   4170 ;pxIndex                   Allocated to stack - _bp +21
                                   4171 ;sloc0                     Allocated to stack - _bp +4
                                   4172 ;sloc1                     Allocated to stack - _bp +7
                                   4173 ;sloc2                     Allocated to stack - _bp +1
                                   4174 ;sloc3                     Allocated to stack - _bp +13
                                   4175 ;sloc4                     Allocated to stack - _bp +10
                                   4176 ;------------------------------------------------------------
                           001062  4177 	G$xTaskIncrementTick$0$0 ==.
                           001062  4178 	C$tasks.c$2736$1_0$271 ==.
                                   4179 ;	tasks.c:2736: BaseType_t xTaskIncrementTick( void )
                                   4180 ;	-----------------------------------------
                                   4181 ;	 function xTaskIncrementTick
                                   4182 ;	-----------------------------------------
      001062                       4183 _xTaskIncrementTick:
      001062 C0*00            [24] 4184 	push	_bp
      001064 85 81*00         [24] 4185 	mov	_bp,sp
      001067 E5 81            [12] 4186 	mov	a,sp
      001069 24 17            [12] 4187 	add	a,#0x17
      00106B F5 81            [12] 4188 	mov	sp,a
                           00106D  4189 	C$tasks.c$2747$1_0$271 ==.
                                   4190 ;	tasks.c:2747: if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
      00106D 90r00r13         [24] 4191 	mov	dptr,#_uxSchedulerSuspended
      001070 E0               [24] 4192 	movx	a,@dptr
      001071 60 03            [24] 4193 	jz	00167$
      001073 02r17r5A         [24] 4194 	ljmp	00120$
      001076                       4195 00167$:
                           001076  4196 	C$tasks.c$2751$2_0$272 ==.
                                   4197 ;	tasks.c:2751: const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
      001076 90r00r05         [24] 4198 	mov	dptr,#_xTickCount
      001079 E0               [24] 4199 	movx	a,@dptr
      00107A FE               [12] 4200 	mov	r6,a
      00107B A3               [24] 4201 	inc	dptr
      00107C E0               [24] 4202 	movx	a,@dptr
      00107D FF               [12] 4203 	mov	r7,a
      00107E E5*00            [12] 4204 	mov	a,_bp
      001080 24 13            [12] 4205 	add	a,#0x13
      001082 F8               [12] 4206 	mov	r0,a
      001083 74 01            [12] 4207 	mov	a,#0x01
      001085 2E               [12] 4208 	add	a,r6
      001086 F6               [12] 4209 	mov	@r0,a
      001087 74 00            [12] 4210 	mov	a,#0x00
      001089 3F               [12] 4211 	addc	a,r7
      00108A 08               [12] 4212 	inc	r0
      00108B F6               [12] 4213 	mov	@r0,a
                           00108C  4214 	C$tasks.c$2755$2_0$272 ==.
                                   4215 ;	tasks.c:2755: xTickCount = xConstTickCount;
      00108C E5*00            [12] 4216 	mov	a,_bp
      00108E 24 13            [12] 4217 	add	a,#0x13
      001090 F8               [12] 4218 	mov	r0,a
      001091 90r00r05         [24] 4219 	mov	dptr,#_xTickCount
      001094 E6               [12] 4220 	mov	a,@r0
      001095 F0               [24] 4221 	movx	@dptr,a
      001096 08               [12] 4222 	inc	r0
      001097 E6               [12] 4223 	mov	a,@r0
      001098 A3               [24] 4224 	inc	dptr
      001099 F0               [24] 4225 	movx	@dptr,a
                           00109A  4226 	C$tasks.c$2757$2_0$272 ==.
                                   4227 ;	tasks.c:2757: if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
      00109A E5*00            [12] 4228 	mov	a,_bp
      00109C 24 13            [12] 4229 	add	a,#0x13
      00109E F8               [12] 4230 	mov	r0,a
      00109F E6               [12] 4231 	mov	a,@r0
      0010A0 08               [12] 4232 	inc	r0
      0010A1 46               [12] 4233 	orl	a,@r0
      0010A2 60 03            [24] 4234 	jz	00168$
      0010A4 02r10rDC         [24] 4235 	ljmp	00102$
      0010A7                       4236 00168$:
                           0010A7  4237 	C$tasks.c$2759$1_0$271 ==.
                                   4238 ;	tasks.c:2759: taskSWITCH_DELAYED_LISTS();
      0010A7 90r00r48         [24] 4239 	mov	dptr,#_pxDelayedTaskList
      0010AA E0               [24] 4240 	movx	a,@dptr
      0010AB FB               [12] 4241 	mov	r3,a
      0010AC A3               [24] 4242 	inc	dptr
      0010AD E0               [24] 4243 	movx	a,@dptr
      0010AE FC               [12] 4244 	mov	r4,a
      0010AF A3               [24] 4245 	inc	dptr
      0010B0 E0               [24] 4246 	movx	a,@dptr
      0010B1 FD               [12] 4247 	mov	r5,a
      0010B2 90r00r4B         [24] 4248 	mov	dptr,#_pxOverflowDelayedTaskList
      0010B5 E0               [24] 4249 	movx	a,@dptr
      0010B6 FA               [12] 4250 	mov	r2,a
      0010B7 A3               [24] 4251 	inc	dptr
      0010B8 E0               [24] 4252 	movx	a,@dptr
      0010B9 FE               [12] 4253 	mov	r6,a
      0010BA A3               [24] 4254 	inc	dptr
      0010BB E0               [24] 4255 	movx	a,@dptr
      0010BC FF               [12] 4256 	mov	r7,a
      0010BD 90r00r48         [24] 4257 	mov	dptr,#_pxDelayedTaskList
      0010C0 EA               [12] 4258 	mov	a,r2
      0010C1 F0               [24] 4259 	movx	@dptr,a
      0010C2 EE               [12] 4260 	mov	a,r6
      0010C3 A3               [24] 4261 	inc	dptr
      0010C4 F0               [24] 4262 	movx	@dptr,a
      0010C5 EF               [12] 4263 	mov	a,r7
      0010C6 A3               [24] 4264 	inc	dptr
      0010C7 F0               [24] 4265 	movx	@dptr,a
      0010C8 90r00r4B         [24] 4266 	mov	dptr,#_pxOverflowDelayedTaskList
      0010CB EB               [12] 4267 	mov	a,r3
      0010CC F0               [24] 4268 	movx	@dptr,a
      0010CD EC               [12] 4269 	mov	a,r4
      0010CE A3               [24] 4270 	inc	dptr
      0010CF F0               [24] 4271 	movx	@dptr,a
      0010D0 ED               [12] 4272 	mov	a,r5
      0010D1 A3               [24] 4273 	inc	dptr
      0010D2 F0               [24] 4274 	movx	@dptr,a
      0010D3 90r00r0C         [24] 4275 	mov	dptr,#_xNumOfOverflows
      0010D6 E0               [24] 4276 	movx	a,@dptr
      0010D7 04               [12] 4277 	inc	a
      0010D8 F0               [24] 4278 	movx	@dptr,a
      0010D9 12r2BrAC         [24] 4279 	lcall	_prvResetNextTaskUnblockTime
                           0010DC  4280 	C$tasks.c$2905$1_0$271 ==.
                                   4281 ;	tasks.c:2905: return xSwitchRequired;
                           0010DC  4282 	C$tasks.c$2759$2_0$272 ==.
                                   4283 ;	tasks.c:2759: taskSWITCH_DELAYED_LISTS();
      0010DC                       4284 00102$:
                           0010DC  4285 	C$tasks.c$2770$2_0$272 ==.
                                   4286 ;	tasks.c:2770: if( xConstTickCount >= xNextTaskUnblockTime )
      0010DC 90r00r0E         [24] 4287 	mov	dptr,#_xNextTaskUnblockTime
      0010DF E0               [24] 4288 	movx	a,@dptr
      0010E0 FC               [12] 4289 	mov	r4,a
      0010E1 A3               [24] 4290 	inc	dptr
      0010E2 E0               [24] 4291 	movx	a,@dptr
      0010E3 FD               [12] 4292 	mov	r5,a
      0010E4 E5*00            [12] 4293 	mov	a,_bp
      0010E6 24 13            [12] 4294 	add	a,#0x13
      0010E8 F8               [12] 4295 	mov	r0,a
      0010E9 C3               [12] 4296 	clr	c
      0010EA E6               [12] 4297 	mov	a,@r0
      0010EB 9C               [12] 4298 	subb	a,r4
      0010EC 08               [12] 4299 	inc	r0
      0010ED E6               [12] 4300 	mov	a,@r0
      0010EE 9D               [12] 4301 	subb	a,r5
      0010EF 50 03            [24] 4302 	jnc	00169$
      0010F1 02r17r66         [24] 4303 	ljmp	00121$
      0010F4                       4304 00169$:
      0010F4                       4305 00122$:
                           0010F4  4306 	C$tasks.c$2774$5_0$278 ==.
                                   4307 ;	tasks.c:2774: if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
      0010F4 90r00r48         [24] 4308 	mov	dptr,#_pxDelayedTaskList
      0010F7 E0               [24] 4309 	movx	a,@dptr
      0010F8 FB               [12] 4310 	mov	r3,a
      0010F9 A3               [24] 4311 	inc	dptr
      0010FA E0               [24] 4312 	movx	a,@dptr
      0010FB FC               [12] 4313 	mov	r4,a
      0010FC A3               [24] 4314 	inc	dptr
      0010FD E0               [24] 4315 	movx	a,@dptr
      0010FE FD               [12] 4316 	mov	r5,a
      0010FF 8B 82            [24] 4317 	mov	dpl,r3
      001101 8C 83            [24] 4318 	mov	dph,r4
      001103 8D F0            [24] 4319 	mov	b,r5
      001105 12r00r00         [24] 4320 	lcall	__gptrget
      001108 60 03            [24] 4321 	jz	00170$
      00110A 02r11r18         [24] 4322 	ljmp	00114$
      00110D                       4323 00170$:
                           00110D  4324 	C$tasks.c$2781$6_0$279 ==.
                                   4325 ;	tasks.c:2781: xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      00110D 90r00r0E         [24] 4326 	mov	dptr,#_xNextTaskUnblockTime
      001110 74 FF            [12] 4327 	mov	a,#0xff
      001112 F0               [24] 4328 	movx	@dptr,a
      001113 A3               [24] 4329 	inc	dptr
      001114 F0               [24] 4330 	movx	@dptr,a
                           001115  4331 	C$tasks.c$2782$6_0$279 ==.
                                   4332 ;	tasks.c:2782: break;
      001115 02r17r66         [24] 4333 	ljmp	00121$
      001118                       4334 00114$:
                           001118  4335 	C$tasks.c$2790$6_0$280 ==.
                                   4336 ;	tasks.c:2790: pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      001118 90r00r48         [24] 4337 	mov	dptr,#_pxDelayedTaskList
      00111B E0               [24] 4338 	movx	a,@dptr
      00111C FB               [12] 4339 	mov	r3,a
      00111D A3               [24] 4340 	inc	dptr
      00111E E0               [24] 4341 	movx	a,@dptr
      00111F FC               [12] 4342 	mov	r4,a
      001120 A3               [24] 4343 	inc	dptr
      001121 E0               [24] 4344 	movx	a,@dptr
      001122 FD               [12] 4345 	mov	r5,a
      001123 74 04            [12] 4346 	mov	a,#0x04
      001125 2B               [12] 4347 	add	a,r3
      001126 FB               [12] 4348 	mov	r3,a
      001127 74 00            [12] 4349 	mov	a,#0x00
      001129 3C               [12] 4350 	addc	a,r4
      00112A FC               [12] 4351 	mov	r4,a
      00112B 74 02            [12] 4352 	mov	a,#0x02
      00112D 2B               [12] 4353 	add	a,r3
      00112E FB               [12] 4354 	mov	r3,a
      00112F 74 00            [12] 4355 	mov	a,#0x00
      001131 3C               [12] 4356 	addc	a,r4
      001132 FC               [12] 4357 	mov	r4,a
      001133 8B 82            [24] 4358 	mov	dpl,r3
      001135 8C 83            [24] 4359 	mov	dph,r4
      001137 8D F0            [24] 4360 	mov	b,r5
      001139 12r00r00         [24] 4361 	lcall	__gptrget
      00113C FB               [12] 4362 	mov	r3,a
      00113D A3               [24] 4363 	inc	dptr
      00113E 12r00r00         [24] 4364 	lcall	__gptrget
      001141 FC               [12] 4365 	mov	r4,a
      001142 A3               [24] 4366 	inc	dptr
      001143 12r00r00         [24] 4367 	lcall	__gptrget
      001146 FD               [12] 4368 	mov	r5,a
      001147 74 08            [12] 4369 	mov	a,#0x08
      001149 2B               [12] 4370 	add	a,r3
      00114A FB               [12] 4371 	mov	r3,a
      00114B 74 00            [12] 4372 	mov	a,#0x00
      00114D 3C               [12] 4373 	addc	a,r4
      00114E FC               [12] 4374 	mov	r4,a
      00114F 8B 82            [24] 4375 	mov	dpl,r3
      001151 8C 83            [24] 4376 	mov	dph,r4
      001153 8D F0            [24] 4377 	mov	b,r5
      001155 12r00r00         [24] 4378 	lcall	__gptrget
      001158 FB               [12] 4379 	mov	r3,a
      001159 A3               [24] 4380 	inc	dptr
      00115A 12r00r00         [24] 4381 	lcall	__gptrget
      00115D FC               [12] 4382 	mov	r4,a
      00115E A3               [24] 4383 	inc	dptr
      00115F 12r00r00         [24] 4384 	lcall	__gptrget
      001162 FD               [12] 4385 	mov	r5,a
      001163 E5*00            [12] 4386 	mov	a,_bp
      001165 24 10            [12] 4387 	add	a,#0x10
      001167 F8               [12] 4388 	mov	r0,a
      001168 A6 03            [24] 4389 	mov	@r0,ar3
      00116A 08               [12] 4390 	inc	r0
      00116B A6 04            [24] 4391 	mov	@r0,ar4
      00116D 08               [12] 4392 	inc	r0
      00116E A6 05            [24] 4393 	mov	@r0,ar5
                           001170  4394 	C$tasks.c$2791$6_0$280 ==.
                                   4395 ;	tasks.c:2791: xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
      001170 E5*00            [12] 4396 	mov	a,_bp
      001172 24 10            [12] 4397 	add	a,#0x10
      001174 F8               [12] 4398 	mov	r0,a
      001175 74 03            [12] 4399 	mov	a,#0x03
      001177 26               [12] 4400 	add	a,@r0
      001178 FE               [12] 4401 	mov	r6,a
      001179 74 00            [12] 4402 	mov	a,#0x00
      00117B 08               [12] 4403 	inc	r0
      00117C 36               [12] 4404 	addc	a,@r0
      00117D FA               [12] 4405 	mov	r2,a
      00117E 08               [12] 4406 	inc	r0
      00117F 86 07            [24] 4407 	mov	ar7,@r0
      001181 8E 82            [24] 4408 	mov	dpl,r6
      001183 8A 83            [24] 4409 	mov	dph,r2
      001185 8F F0            [24] 4410 	mov	b,r7
      001187 12r00r00         [24] 4411 	lcall	__gptrget
      00118A FE               [12] 4412 	mov	r6,a
      00118B A3               [24] 4413 	inc	dptr
      00118C 12r00r00         [24] 4414 	lcall	__gptrget
      00118F FF               [12] 4415 	mov	r7,a
                           001190  4416 	C$tasks.c$2793$6_0$280 ==.
                                   4417 ;	tasks.c:2793: if( xConstTickCount < xItemValue )
      001190 E5*00            [12] 4418 	mov	a,_bp
      001192 24 13            [12] 4419 	add	a,#0x13
      001194 F8               [12] 4420 	mov	r0,a
      001195 C3               [12] 4421 	clr	c
      001196 E6               [12] 4422 	mov	a,@r0
      001197 9E               [12] 4423 	subb	a,r6
      001198 08               [12] 4424 	inc	r0
      001199 E6               [12] 4425 	mov	a,@r0
      00119A 9F               [12] 4426 	subb	a,r7
      00119B 40 03            [24] 4427 	jc	00171$
      00119D 02r11rAB         [24] 4428 	ljmp	00104$
      0011A0                       4429 00171$:
                           0011A0  4430 	C$tasks.c$2800$7_0$281 ==.
                                   4431 ;	tasks.c:2800: xNextTaskUnblockTime = xItemValue;
      0011A0 90r00r0E         [24] 4432 	mov	dptr,#_xNextTaskUnblockTime
      0011A3 EE               [12] 4433 	mov	a,r6
      0011A4 F0               [24] 4434 	movx	@dptr,a
      0011A5 EF               [12] 4435 	mov	a,r7
      0011A6 A3               [24] 4436 	inc	dptr
      0011A7 F0               [24] 4437 	movx	@dptr,a
                           0011A8  4438 	C$tasks.c$2801$7_0$281 ==.
                                   4439 ;	tasks.c:2801: break; /*lint !e9011 Code structure here is deemed easier to understand with multiple breaks. */
      0011A8 02r17r66         [24] 4440 	ljmp	00121$
      0011AB                       4441 00104$:
                           0011AB  4442 	C$tasks.c$2809$7_0$283 ==.
                                   4443 ;	tasks.c:2809: listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
      0011AB E5*00            [12] 4444 	mov	a,_bp
      0011AD 24 10            [12] 4445 	add	a,#0x10
      0011AF F8               [12] 4446 	mov	r0,a
      0011B0 74 03            [12] 4447 	mov	a,#0x03
      0011B2 26               [12] 4448 	add	a,@r0
      0011B3 FA               [12] 4449 	mov	r2,a
      0011B4 74 00            [12] 4450 	mov	a,#0x00
      0011B6 08               [12] 4451 	inc	r0
      0011B7 36               [12] 4452 	addc	a,@r0
      0011B8 FE               [12] 4453 	mov	r6,a
      0011B9 08               [12] 4454 	inc	r0
      0011BA 86 07            [24] 4455 	mov	ar7,@r0
      0011BC E5*00            [12] 4456 	mov	a,_bp
      0011BE 24 10            [12] 4457 	add	a,#0x10
      0011C0 F8               [12] 4458 	mov	r0,a
      0011C1 74 0E            [12] 4459 	mov	a,#0x0e
      0011C3 26               [12] 4460 	add	a,@r0
      0011C4 FB               [12] 4461 	mov	r3,a
      0011C5 74 00            [12] 4462 	mov	a,#0x00
      0011C7 08               [12] 4463 	inc	r0
      0011C8 36               [12] 4464 	addc	a,@r0
      0011C9 FC               [12] 4465 	mov	r4,a
      0011CA 08               [12] 4466 	inc	r0
      0011CB 86 05            [24] 4467 	mov	ar5,@r0
      0011CD 8B 82            [24] 4468 	mov	dpl,r3
      0011CF 8C 83            [24] 4469 	mov	dph,r4
      0011D1 8D F0            [24] 4470 	mov	b,r5
      0011D3 E5*00            [12] 4471 	mov	a,_bp
      0011D5 24 15            [12] 4472 	add	a,#0x15
      0011D7 F8               [12] 4473 	mov	r0,a
      0011D8 12r00r00         [24] 4474 	lcall	__gptrget
      0011DB F6               [12] 4475 	mov	@r0,a
      0011DC A3               [24] 4476 	inc	dptr
      0011DD 12r00r00         [24] 4477 	lcall	__gptrget
      0011E0 08               [12] 4478 	inc	r0
      0011E1 F6               [12] 4479 	mov	@r0,a
      0011E2 A3               [24] 4480 	inc	dptr
      0011E3 12r00r00         [24] 4481 	lcall	__gptrget
      0011E6 08               [12] 4482 	inc	r0
      0011E7 F6               [12] 4483 	mov	@r0,a
      0011E8 E5*00            [12] 4484 	mov	a,_bp
      0011EA 24 10            [12] 4485 	add	a,#0x10
      0011EC F8               [12] 4486 	mov	r0,a
      0011ED E5*00            [12] 4487 	mov	a,_bp
      0011EF 24 04            [12] 4488 	add	a,#0x04
      0011F1 F9               [12] 4489 	mov	r1,a
      0011F2 74 05            [12] 4490 	mov	a,#0x05
      0011F4 26               [12] 4491 	add	a,@r0
      0011F5 F7               [12] 4492 	mov	@r1,a
      0011F6 74 00            [12] 4493 	mov	a,#0x00
      0011F8 08               [12] 4494 	inc	r0
      0011F9 36               [12] 4495 	addc	a,@r0
      0011FA 09               [12] 4496 	inc	r1
      0011FB F7               [12] 4497 	mov	@r1,a
      0011FC 08               [12] 4498 	inc	r0
      0011FD E6               [12] 4499 	mov	a,@r0
      0011FE 09               [12] 4500 	inc	r1
      0011FF F7               [12] 4501 	mov	@r1,a
      001200 E5*00            [12] 4502 	mov	a,_bp
      001202 24 04            [12] 4503 	add	a,#0x04
      001204 F8               [12] 4504 	mov	r0,a
      001205 86 82            [24] 4505 	mov	dpl,@r0
      001207 08               [12] 4506 	inc	r0
      001208 86 83            [24] 4507 	mov	dph,@r0
      00120A 08               [12] 4508 	inc	r0
      00120B 86 F0            [24] 4509 	mov	b,@r0
      00120D 12r00r00         [24] 4510 	lcall	__gptrget
      001210 FB               [12] 4511 	mov	r3,a
      001211 A3               [24] 4512 	inc	dptr
      001212 12r00r00         [24] 4513 	lcall	__gptrget
      001215 FC               [12] 4514 	mov	r4,a
      001216 A3               [24] 4515 	inc	dptr
      001217 12r00r00         [24] 4516 	lcall	__gptrget
      00121A FD               [12] 4517 	mov	r5,a
      00121B A8*00            [24] 4518 	mov	r0,_bp
      00121D 08               [12] 4519 	inc	r0
      00121E 74 05            [12] 4520 	mov	a,#0x05
      001220 2B               [12] 4521 	add	a,r3
      001221 F6               [12] 4522 	mov	@r0,a
      001222 74 00            [12] 4523 	mov	a,#0x00
      001224 3C               [12] 4524 	addc	a,r4
      001225 08               [12] 4525 	inc	r0
      001226 F6               [12] 4526 	mov	@r0,a
      001227 08               [12] 4527 	inc	r0
      001228 A6 05            [24] 4528 	mov	@r0,ar5
      00122A E5*00            [12] 4529 	mov	a,_bp
      00122C 24 10            [12] 4530 	add	a,#0x10
      00122E F8               [12] 4531 	mov	r0,a
      00122F E5*00            [12] 4532 	mov	a,_bp
      001231 24 07            [12] 4533 	add	a,#0x07
      001233 F9               [12] 4534 	mov	r1,a
      001234 74 08            [12] 4535 	mov	a,#0x08
      001236 26               [12] 4536 	add	a,@r0
      001237 F7               [12] 4537 	mov	@r1,a
      001238 74 00            [12] 4538 	mov	a,#0x00
      00123A 08               [12] 4539 	inc	r0
      00123B 36               [12] 4540 	addc	a,@r0
      00123C 09               [12] 4541 	inc	r1
      00123D F7               [12] 4542 	mov	@r1,a
      00123E 08               [12] 4543 	inc	r0
      00123F E6               [12] 4544 	mov	a,@r0
      001240 09               [12] 4545 	inc	r1
      001241 F7               [12] 4546 	mov	@r1,a
      001242 E5*00            [12] 4547 	mov	a,_bp
      001244 24 07            [12] 4548 	add	a,#0x07
      001246 F8               [12] 4549 	mov	r0,a
      001247 86 82            [24] 4550 	mov	dpl,@r0
      001249 08               [12] 4551 	inc	r0
      00124A 86 83            [24] 4552 	mov	dph,@r0
      00124C 08               [12] 4553 	inc	r0
      00124D 86 F0            [24] 4554 	mov	b,@r0
      00124F 12r00r00         [24] 4555 	lcall	__gptrget
      001252 FB               [12] 4556 	mov	r3,a
      001253 A3               [24] 4557 	inc	dptr
      001254 12r00r00         [24] 4558 	lcall	__gptrget
      001257 FC               [12] 4559 	mov	r4,a
      001258 A3               [24] 4560 	inc	dptr
      001259 12r00r00         [24] 4561 	lcall	__gptrget
      00125C FD               [12] 4562 	mov	r5,a
      00125D A8*00            [24] 4563 	mov	r0,_bp
      00125F 08               [12] 4564 	inc	r0
      001260 86 82            [24] 4565 	mov	dpl,@r0
      001262 08               [12] 4566 	inc	r0
      001263 86 83            [24] 4567 	mov	dph,@r0
      001265 08               [12] 4568 	inc	r0
      001266 86 F0            [24] 4569 	mov	b,@r0
      001268 EB               [12] 4570 	mov	a,r3
      001269 12r00r00         [24] 4571 	lcall	__gptrput
      00126C A3               [24] 4572 	inc	dptr
      00126D EC               [12] 4573 	mov	a,r4
      00126E 12r00r00         [24] 4574 	lcall	__gptrput
      001271 A3               [24] 4575 	inc	dptr
      001272 ED               [12] 4576 	mov	a,r5
      001273 12r00r00         [24] 4577 	lcall	__gptrput
      001276 E5*00            [12] 4578 	mov	a,_bp
      001278 24 07            [12] 4579 	add	a,#0x07
      00127A F8               [12] 4580 	mov	r0,a
      00127B 86 82            [24] 4581 	mov	dpl,@r0
      00127D 08               [12] 4582 	inc	r0
      00127E 86 83            [24] 4583 	mov	dph,@r0
      001280 08               [12] 4584 	inc	r0
      001281 86 F0            [24] 4585 	mov	b,@r0
      001283 12r00r00         [24] 4586 	lcall	__gptrget
      001286 FB               [12] 4587 	mov	r3,a
      001287 A3               [24] 4588 	inc	dptr
      001288 12r00r00         [24] 4589 	lcall	__gptrget
      00128B FC               [12] 4590 	mov	r4,a
      00128C A3               [24] 4591 	inc	dptr
      00128D 12r00r00         [24] 4592 	lcall	__gptrget
      001290 FD               [12] 4593 	mov	r5,a
      001291 A8*00            [24] 4594 	mov	r0,_bp
      001293 08               [12] 4595 	inc	r0
      001294 74 02            [12] 4596 	mov	a,#0x02
      001296 2B               [12] 4597 	add	a,r3
      001297 F6               [12] 4598 	mov	@r0,a
      001298 74 00            [12] 4599 	mov	a,#0x00
      00129A 3C               [12] 4600 	addc	a,r4
      00129B 08               [12] 4601 	inc	r0
      00129C F6               [12] 4602 	mov	@r0,a
      00129D 08               [12] 4603 	inc	r0
      00129E A6 05            [24] 4604 	mov	@r0,ar5
      0012A0 E5*00            [12] 4605 	mov	a,_bp
      0012A2 24 04            [12] 4606 	add	a,#0x04
      0012A4 F8               [12] 4607 	mov	r0,a
      0012A5 86 82            [24] 4608 	mov	dpl,@r0
      0012A7 08               [12] 4609 	inc	r0
      0012A8 86 83            [24] 4610 	mov	dph,@r0
      0012AA 08               [12] 4611 	inc	r0
      0012AB 86 F0            [24] 4612 	mov	b,@r0
      0012AD 12r00r00         [24] 4613 	lcall	__gptrget
      0012B0 FB               [12] 4614 	mov	r3,a
      0012B1 A3               [24] 4615 	inc	dptr
      0012B2 12r00r00         [24] 4616 	lcall	__gptrget
      0012B5 FC               [12] 4617 	mov	r4,a
      0012B6 A3               [24] 4618 	inc	dptr
      0012B7 12r00r00         [24] 4619 	lcall	__gptrget
      0012BA FD               [12] 4620 	mov	r5,a
      0012BB A8*00            [24] 4621 	mov	r0,_bp
      0012BD 08               [12] 4622 	inc	r0
      0012BE 86 82            [24] 4623 	mov	dpl,@r0
      0012C0 08               [12] 4624 	inc	r0
      0012C1 86 83            [24] 4625 	mov	dph,@r0
      0012C3 08               [12] 4626 	inc	r0
      0012C4 86 F0            [24] 4627 	mov	b,@r0
      0012C6 EB               [12] 4628 	mov	a,r3
      0012C7 12r00r00         [24] 4629 	lcall	__gptrput
      0012CA A3               [24] 4630 	inc	dptr
      0012CB EC               [12] 4631 	mov	a,r4
      0012CC 12r00r00         [24] 4632 	lcall	__gptrput
      0012CF A3               [24] 4633 	inc	dptr
      0012D0 ED               [12] 4634 	mov	a,r5
      0012D1 12r00r00         [24] 4635 	lcall	__gptrput
      0012D4 E5*00            [12] 4636 	mov	a,_bp
      0012D6 24 15            [12] 4637 	add	a,#0x15
      0012D8 F8               [12] 4638 	mov	r0,a
      0012D9 A9*00            [24] 4639 	mov	r1,_bp
      0012DB 09               [12] 4640 	inc	r1
      0012DC 74 01            [12] 4641 	mov	a,#0x01
      0012DE 26               [12] 4642 	add	a,@r0
      0012DF F7               [12] 4643 	mov	@r1,a
      0012E0 74 00            [12] 4644 	mov	a,#0x00
      0012E2 08               [12] 4645 	inc	r0
      0012E3 36               [12] 4646 	addc	a,@r0
      0012E4 09               [12] 4647 	inc	r1
      0012E5 F7               [12] 4648 	mov	@r1,a
      0012E6 08               [12] 4649 	inc	r0
      0012E7 E6               [12] 4650 	mov	a,@r0
      0012E8 09               [12] 4651 	inc	r1
      0012E9 F7               [12] 4652 	mov	@r1,a
      0012EA A8*00            [24] 4653 	mov	r0,_bp
      0012EC 08               [12] 4654 	inc	r0
      0012ED 86 82            [24] 4655 	mov	dpl,@r0
      0012EF 08               [12] 4656 	inc	r0
      0012F0 86 83            [24] 4657 	mov	dph,@r0
      0012F2 08               [12] 4658 	inc	r0
      0012F3 86 F0            [24] 4659 	mov	b,@r0
      0012F5 12r00r00         [24] 4660 	lcall	__gptrget
      0012F8 FB               [12] 4661 	mov	r3,a
      0012F9 A3               [24] 4662 	inc	dptr
      0012FA 12r00r00         [24] 4663 	lcall	__gptrget
      0012FD FC               [12] 4664 	mov	r4,a
      0012FE A3               [24] 4665 	inc	dptr
      0012FF 12r00r00         [24] 4666 	lcall	__gptrget
      001302 FD               [12] 4667 	mov	r5,a
      001303 C0 02            [24] 4668 	push	ar2
      001305 C0 06            [24] 4669 	push	ar6
      001307 C0 07            [24] 4670 	push	ar7
      001309 8B 82            [24] 4671 	mov	dpl,r3
      00130B 8C 83            [24] 4672 	mov	dph,r4
      00130D 8D F0            [24] 4673 	mov	b,r5
      00130F 12r00r00         [24] 4674 	lcall	___gptr_cmp
      001312 15 81            [12] 4675 	dec	sp
      001314 15 81            [12] 4676 	dec	sp
      001316 15 81            [12] 4677 	dec	sp
      001318 70 02            [24] 4678 	jnz	00172$
      00131A 80 03            [24] 4679 	sjmp	00173$
      00131C                       4680 00172$:
      00131C 02r13r53         [24] 4681 	ljmp	00106$
      00131F                       4682 00173$:
      00131F E5*00            [12] 4683 	mov	a,_bp
      001321 24 07            [12] 4684 	add	a,#0x07
      001323 F8               [12] 4685 	mov	r0,a
      001324 86 82            [24] 4686 	mov	dpl,@r0
      001326 08               [12] 4687 	inc	r0
      001327 86 83            [24] 4688 	mov	dph,@r0
      001329 08               [12] 4689 	inc	r0
      00132A 86 F0            [24] 4690 	mov	b,@r0
      00132C 12r00r00         [24] 4691 	lcall	__gptrget
      00132F FB               [12] 4692 	mov	r3,a
      001330 A3               [24] 4693 	inc	dptr
      001331 12r00r00         [24] 4694 	lcall	__gptrget
      001334 FC               [12] 4695 	mov	r4,a
      001335 A3               [24] 4696 	inc	dptr
      001336 12r00r00         [24] 4697 	lcall	__gptrget
      001339 FD               [12] 4698 	mov	r5,a
      00133A A8*00            [24] 4699 	mov	r0,_bp
      00133C 08               [12] 4700 	inc	r0
      00133D 86 82            [24] 4701 	mov	dpl,@r0
      00133F 08               [12] 4702 	inc	r0
      001340 86 83            [24] 4703 	mov	dph,@r0
      001342 08               [12] 4704 	inc	r0
      001343 86 F0            [24] 4705 	mov	b,@r0
      001345 EB               [12] 4706 	mov	a,r3
      001346 12r00r00         [24] 4707 	lcall	__gptrput
      001349 A3               [24] 4708 	inc	dptr
      00134A EC               [12] 4709 	mov	a,r4
      00134B 12r00r00         [24] 4710 	lcall	__gptrput
      00134E A3               [24] 4711 	inc	dptr
      00134F ED               [12] 4712 	mov	a,r5
      001350 12r00r00         [24] 4713 	lcall	__gptrput
      001353                       4714 00106$:
      001353 E5*00            [12] 4715 	mov	a,_bp
      001355 24 0D            [12] 4716 	add	a,#0x0d
      001357 F8               [12] 4717 	mov	r0,a
      001358 74 0B            [12] 4718 	mov	a,#0x0b
      00135A 2A               [12] 4719 	add	a,r2
      00135B F6               [12] 4720 	mov	@r0,a
      00135C 74 00            [12] 4721 	mov	a,#0x00
      00135E 3E               [12] 4722 	addc	a,r6
      00135F 08               [12] 4723 	inc	r0
      001360 F6               [12] 4724 	mov	@r0,a
      001361 08               [12] 4725 	inc	r0
      001362 A6 07            [24] 4726 	mov	@r0,ar7
      001364 E5*00            [12] 4727 	mov	a,_bp
      001366 24 0D            [12] 4728 	add	a,#0x0d
      001368 F8               [12] 4729 	mov	r0,a
      001369 86 82            [24] 4730 	mov	dpl,@r0
      00136B 08               [12] 4731 	inc	r0
      00136C 86 83            [24] 4732 	mov	dph,@r0
      00136E 08               [12] 4733 	inc	r0
      00136F 86 F0            [24] 4734 	mov	b,@r0
      001371 74 00            [12] 4735 	mov	a,#0x00
      001373 12r00r00         [24] 4736 	lcall	__gptrput
      001376 A3               [24] 4737 	inc	dptr
      001377 12r00r00         [24] 4738 	lcall	__gptrput
      00137A A3               [24] 4739 	inc	dptr
      00137B 12r00r00         [24] 4740 	lcall	__gptrput
      00137E C0 02            [24] 4741 	push	ar2
      001380 C0 06            [24] 4742 	push	ar6
      001382 C0 07            [24] 4743 	push	ar7
      001384 E5*00            [12] 4744 	mov	a,_bp
      001386 24 15            [12] 4745 	add	a,#0x15
      001388 F8               [12] 4746 	mov	r0,a
      001389 86 82            [24] 4747 	mov	dpl,@r0
      00138B 08               [12] 4748 	inc	r0
      00138C 86 83            [24] 4749 	mov	dph,@r0
      00138E 08               [12] 4750 	inc	r0
      00138F 86 F0            [24] 4751 	mov	b,@r0
      001391 12r00r00         [24] 4752 	lcall	__gptrget
      001394 FF               [12] 4753 	mov	r7,a
      001395 1F               [12] 4754 	dec	r7
      001396 E5*00            [12] 4755 	mov	a,_bp
      001398 24 15            [12] 4756 	add	a,#0x15
      00139A F8               [12] 4757 	mov	r0,a
      00139B 86 82            [24] 4758 	mov	dpl,@r0
      00139D 08               [12] 4759 	inc	r0
      00139E 86 83            [24] 4760 	mov	dph,@r0
      0013A0 08               [12] 4761 	inc	r0
      0013A1 86 F0            [24] 4762 	mov	b,@r0
      0013A3 EF               [12] 4763 	mov	a,r7
      0013A4 12r00r00         [24] 4764 	lcall	__gptrput
                           0013A7  4765 	C$tasks.c$2813$6_0$280 ==.
                                   4766 ;	tasks.c:2813: if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
      0013A7 E5*00            [12] 4767 	mov	a,_bp
      0013A9 24 10            [12] 4768 	add	a,#0x10
      0013AB F8               [12] 4769 	mov	r0,a
      0013AC A9*00            [24] 4770 	mov	r1,_bp
      0013AE 09               [12] 4771 	inc	r1
      0013AF 74 11            [12] 4772 	mov	a,#0x11
      0013B1 26               [12] 4773 	add	a,@r0
      0013B2 F7               [12] 4774 	mov	@r1,a
      0013B3 74 00            [12] 4775 	mov	a,#0x00
      0013B5 08               [12] 4776 	inc	r0
      0013B6 36               [12] 4777 	addc	a,@r0
      0013B7 09               [12] 4778 	inc	r1
      0013B8 F7               [12] 4779 	mov	@r1,a
      0013B9 08               [12] 4780 	inc	r0
      0013BA E6               [12] 4781 	mov	a,@r0
      0013BB 09               [12] 4782 	inc	r1
      0013BC F7               [12] 4783 	mov	@r1,a
      0013BD A8*00            [24] 4784 	mov	r0,_bp
      0013BF 08               [12] 4785 	inc	r0
      0013C0 E5*00            [12] 4786 	mov	a,_bp
      0013C2 24 07            [12] 4787 	add	a,#0x07
      0013C4 F9               [12] 4788 	mov	r1,a
      0013C5 74 0B            [12] 4789 	mov	a,#0x0b
      0013C7 26               [12] 4790 	add	a,@r0
      0013C8 F7               [12] 4791 	mov	@r1,a
      0013C9 74 00            [12] 4792 	mov	a,#0x00
      0013CB 08               [12] 4793 	inc	r0
      0013CC 36               [12] 4794 	addc	a,@r0
      0013CD 09               [12] 4795 	inc	r1
      0013CE F7               [12] 4796 	mov	@r1,a
      0013CF 08               [12] 4797 	inc	r0
      0013D0 E6               [12] 4798 	mov	a,@r0
      0013D1 09               [12] 4799 	inc	r1
      0013D2 F7               [12] 4800 	mov	@r1,a
      0013D3 E5*00            [12] 4801 	mov	a,_bp
      0013D5 24 07            [12] 4802 	add	a,#0x07
      0013D7 F8               [12] 4803 	mov	r0,a
      0013D8 86 82            [24] 4804 	mov	dpl,@r0
      0013DA 08               [12] 4805 	inc	r0
      0013DB 86 83            [24] 4806 	mov	dph,@r0
      0013DD 08               [12] 4807 	inc	r0
      0013DE 86 F0            [24] 4808 	mov	b,@r0
      0013E0 12r00r00         [24] 4809 	lcall	__gptrget
      0013E3 FB               [12] 4810 	mov	r3,a
      0013E4 A3               [24] 4811 	inc	dptr
      0013E5 12r00r00         [24] 4812 	lcall	__gptrget
      0013E8 FC               [12] 4813 	mov	r4,a
      0013E9 A3               [24] 4814 	inc	dptr
      0013EA 12r00r00         [24] 4815 	lcall	__gptrget
      0013ED FD               [12] 4816 	mov	r5,a
      0013EE D0 07            [24] 4817 	pop	ar7
      0013F0 D0 06            [24] 4818 	pop	ar6
      0013F2 D0 02            [24] 4819 	pop	ar2
      0013F4 EB               [12] 4820 	mov	a,r3
      0013F5 4C               [12] 4821 	orl	a,r4
      0013F6 70 03            [24] 4822 	jnz	00174$
      0013F8 02r15rAC         [24] 4823 	ljmp	00110$
      0013FB                       4824 00174$:
                           0013FB  4825 	C$tasks.c$2815$1_0$271 ==.
                                   4826 ;	tasks.c:2815: listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
      0013FB C0 02            [24] 4827 	push	ar2
      0013FD C0 06            [24] 4828 	push	ar6
      0013FF C0 07            [24] 4829 	push	ar7
      001401 E5*00            [12] 4830 	mov	a,_bp
      001403 24 15            [12] 4831 	add	a,#0x15
      001405 F8               [12] 4832 	mov	r0,a
      001406 A6 03            [24] 4833 	mov	@r0,ar3
      001408 08               [12] 4834 	inc	r0
      001409 A6 04            [24] 4835 	mov	@r0,ar4
      00140B 08               [12] 4836 	inc	r0
      00140C A6 05            [24] 4837 	mov	@r0,ar5
      00140E A8*00            [24] 4838 	mov	r0,_bp
      001410 08               [12] 4839 	inc	r0
      001411 74 02            [12] 4840 	mov	a,#0x02
      001413 26               [12] 4841 	add	a,@r0
      001414 FA               [12] 4842 	mov	r2,a
      001415 74 00            [12] 4843 	mov	a,#0x00
      001417 08               [12] 4844 	inc	r0
      001418 36               [12] 4845 	addc	a,@r0
      001419 FE               [12] 4846 	mov	r6,a
      00141A 08               [12] 4847 	inc	r0
      00141B 86 07            [24] 4848 	mov	ar7,@r0
      00141D 8A 82            [24] 4849 	mov	dpl,r2
      00141F 8E 83            [24] 4850 	mov	dph,r6
      001421 8F F0            [24] 4851 	mov	b,r7
      001423 12r00r00         [24] 4852 	lcall	__gptrget
      001426 FB               [12] 4853 	mov	r3,a
      001427 A3               [24] 4854 	inc	dptr
      001428 12r00r00         [24] 4855 	lcall	__gptrget
      00142B FC               [12] 4856 	mov	r4,a
      00142C A3               [24] 4857 	inc	dptr
      00142D 12r00r00         [24] 4858 	lcall	__gptrget
      001430 FD               [12] 4859 	mov	r5,a
      001431 E5*00            [12] 4860 	mov	a,_bp
      001433 24 0A            [12] 4861 	add	a,#0x0a
      001435 F8               [12] 4862 	mov	r0,a
      001436 74 05            [12] 4863 	mov	a,#0x05
      001438 2B               [12] 4864 	add	a,r3
      001439 F6               [12] 4865 	mov	@r0,a
      00143A 74 00            [12] 4866 	mov	a,#0x00
      00143C 3C               [12] 4867 	addc	a,r4
      00143D 08               [12] 4868 	inc	r0
      00143E F6               [12] 4869 	mov	@r0,a
      00143F 08               [12] 4870 	inc	r0
      001440 A6 05            [24] 4871 	mov	@r0,ar5
      001442 A8*00            [24] 4872 	mov	r0,_bp
      001444 08               [12] 4873 	inc	r0
      001445 E5*00            [12] 4874 	mov	a,_bp
      001447 24 04            [12] 4875 	add	a,#0x04
      001449 F9               [12] 4876 	mov	r1,a
      00144A 74 05            [12] 4877 	mov	a,#0x05
      00144C 26               [12] 4878 	add	a,@r0
      00144D F7               [12] 4879 	mov	@r1,a
      00144E 74 00            [12] 4880 	mov	a,#0x00
      001450 08               [12] 4881 	inc	r0
      001451 36               [12] 4882 	addc	a,@r0
      001452 09               [12] 4883 	inc	r1
      001453 F7               [12] 4884 	mov	@r1,a
      001454 08               [12] 4885 	inc	r0
      001455 E6               [12] 4886 	mov	a,@r0
      001456 09               [12] 4887 	inc	r1
      001457 F7               [12] 4888 	mov	@r1,a
      001458 E5*00            [12] 4889 	mov	a,_bp
      00145A 24 04            [12] 4890 	add	a,#0x04
      00145C F8               [12] 4891 	mov	r0,a
      00145D 86 82            [24] 4892 	mov	dpl,@r0
      00145F 08               [12] 4893 	inc	r0
      001460 86 83            [24] 4894 	mov	dph,@r0
      001462 08               [12] 4895 	inc	r0
      001463 86 F0            [24] 4896 	mov	b,@r0
      001465 12r00r00         [24] 4897 	lcall	__gptrget
      001468 FB               [12] 4898 	mov	r3,a
      001469 A3               [24] 4899 	inc	dptr
      00146A 12r00r00         [24] 4900 	lcall	__gptrget
      00146D FC               [12] 4901 	mov	r4,a
      00146E A3               [24] 4902 	inc	dptr
      00146F 12r00r00         [24] 4903 	lcall	__gptrget
      001472 FD               [12] 4904 	mov	r5,a
      001473 E5*00            [12] 4905 	mov	a,_bp
      001475 24 0A            [12] 4906 	add	a,#0x0a
      001477 F8               [12] 4907 	mov	r0,a
      001478 86 82            [24] 4908 	mov	dpl,@r0
      00147A 08               [12] 4909 	inc	r0
      00147B 86 83            [24] 4910 	mov	dph,@r0
      00147D 08               [12] 4911 	inc	r0
      00147E 86 F0            [24] 4912 	mov	b,@r0
      001480 EB               [12] 4913 	mov	a,r3
      001481 12r00r00         [24] 4914 	lcall	__gptrput
      001484 A3               [24] 4915 	inc	dptr
      001485 EC               [12] 4916 	mov	a,r4
      001486 12r00r00         [24] 4917 	lcall	__gptrput
      001489 A3               [24] 4918 	inc	dptr
      00148A ED               [12] 4919 	mov	a,r5
      00148B 12r00r00         [24] 4920 	lcall	__gptrput
      00148E E5*00            [12] 4921 	mov	a,_bp
      001490 24 04            [12] 4922 	add	a,#0x04
      001492 F8               [12] 4923 	mov	r0,a
      001493 86 82            [24] 4924 	mov	dpl,@r0
      001495 08               [12] 4925 	inc	r0
      001496 86 83            [24] 4926 	mov	dph,@r0
      001498 08               [12] 4927 	inc	r0
      001499 86 F0            [24] 4928 	mov	b,@r0
      00149B 12r00r00         [24] 4929 	lcall	__gptrget
      00149E FB               [12] 4930 	mov	r3,a
      00149F A3               [24] 4931 	inc	dptr
      0014A0 12r00r00         [24] 4932 	lcall	__gptrget
      0014A3 FC               [12] 4933 	mov	r4,a
      0014A4 A3               [24] 4934 	inc	dptr
      0014A5 12r00r00         [24] 4935 	lcall	__gptrget
      0014A8 FD               [12] 4936 	mov	r5,a
      0014A9 74 02            [12] 4937 	mov	a,#0x02
      0014AB 2B               [12] 4938 	add	a,r3
      0014AC FB               [12] 4939 	mov	r3,a
      0014AD 74 00            [12] 4940 	mov	a,#0x00
      0014AF 3C               [12] 4941 	addc	a,r4
      0014B0 FC               [12] 4942 	mov	r4,a
      0014B1 8A 82            [24] 4943 	mov	dpl,r2
      0014B3 8E 83            [24] 4944 	mov	dph,r6
      0014B5 8F F0            [24] 4945 	mov	b,r7
      0014B7 12r00r00         [24] 4946 	lcall	__gptrget
      0014BA FA               [12] 4947 	mov	r2,a
      0014BB A3               [24] 4948 	inc	dptr
      0014BC 12r00r00         [24] 4949 	lcall	__gptrget
      0014BF FE               [12] 4950 	mov	r6,a
      0014C0 A3               [24] 4951 	inc	dptr
      0014C1 12r00r00         [24] 4952 	lcall	__gptrget
      0014C4 FF               [12] 4953 	mov	r7,a
      0014C5 8B 82            [24] 4954 	mov	dpl,r3
      0014C7 8C 83            [24] 4955 	mov	dph,r4
      0014C9 8D F0            [24] 4956 	mov	b,r5
      0014CB EA               [12] 4957 	mov	a,r2
      0014CC 12r00r00         [24] 4958 	lcall	__gptrput
      0014CF A3               [24] 4959 	inc	dptr
      0014D0 EE               [12] 4960 	mov	a,r6
      0014D1 12r00r00         [24] 4961 	lcall	__gptrput
      0014D4 A3               [24] 4962 	inc	dptr
      0014D5 EF               [12] 4963 	mov	a,r7
      0014D6 12r00r00         [24] 4964 	lcall	__gptrput
      0014D9 E5*00            [12] 4965 	mov	a,_bp
      0014DB 24 15            [12] 4966 	add	a,#0x15
      0014DD F8               [12] 4967 	mov	r0,a
      0014DE E5*00            [12] 4968 	mov	a,_bp
      0014E0 24 0A            [12] 4969 	add	a,#0x0a
      0014E2 F9               [12] 4970 	mov	r1,a
      0014E3 74 01            [12] 4971 	mov	a,#0x01
      0014E5 26               [12] 4972 	add	a,@r0
      0014E6 F7               [12] 4973 	mov	@r1,a
      0014E7 74 00            [12] 4974 	mov	a,#0x00
      0014E9 08               [12] 4975 	inc	r0
      0014EA 36               [12] 4976 	addc	a,@r0
      0014EB 09               [12] 4977 	inc	r1
      0014EC F7               [12] 4978 	mov	@r1,a
      0014ED 08               [12] 4979 	inc	r0
      0014EE E6               [12] 4980 	mov	a,@r0
      0014EF 09               [12] 4981 	inc	r1
      0014F0 F7               [12] 4982 	mov	@r1,a
      0014F1 E5*00            [12] 4983 	mov	a,_bp
      0014F3 24 0A            [12] 4984 	add	a,#0x0a
      0014F5 F8               [12] 4985 	mov	r0,a
      0014F6 86 82            [24] 4986 	mov	dpl,@r0
      0014F8 08               [12] 4987 	inc	r0
      0014F9 86 83            [24] 4988 	mov	dph,@r0
      0014FB 08               [12] 4989 	inc	r0
      0014FC 86 F0            [24] 4990 	mov	b,@r0
      0014FE 12r00r00         [24] 4991 	lcall	__gptrget
      001501 FD               [12] 4992 	mov	r5,a
      001502 A3               [24] 4993 	inc	dptr
      001503 12r00r00         [24] 4994 	lcall	__gptrget
      001506 FE               [12] 4995 	mov	r6,a
      001507 A3               [24] 4996 	inc	dptr
      001508 12r00r00         [24] 4997 	lcall	__gptrget
      00150B FF               [12] 4998 	mov	r7,a
      00150C A8*00            [24] 4999 	mov	r0,_bp
      00150E 08               [12] 5000 	inc	r0
      00150F C0 05            [24] 5001 	push	ar5
      001511 C0 06            [24] 5002 	push	ar6
      001513 C0 07            [24] 5003 	push	ar7
      001515 86 82            [24] 5004 	mov	dpl,@r0
      001517 08               [12] 5005 	inc	r0
      001518 86 83            [24] 5006 	mov	dph,@r0
      00151A 08               [12] 5007 	inc	r0
      00151B 86 F0            [24] 5008 	mov	b,@r0
      00151D 12r00r00         [24] 5009 	lcall	___gptr_cmp
      001520 15 81            [12] 5010 	dec	sp
      001522 15 81            [12] 5011 	dec	sp
      001524 15 81            [12] 5012 	dec	sp
      001526 70 02            [24] 5013 	jnz	00175$
      001528 80 09            [24] 5014 	sjmp	00176$
      00152A                       5015 00175$:
      00152A D0 07            [24] 5016 	pop	ar7
      00152C D0 06            [24] 5017 	pop	ar6
      00152E D0 02            [24] 5018 	pop	ar2
      001530 02r15r6F         [24] 5019 	ljmp	00108$
      001533                       5020 00176$:
      001533 D0 07            [24] 5021 	pop	ar7
      001535 D0 06            [24] 5022 	pop	ar6
      001537 D0 02            [24] 5023 	pop	ar2
      001539 E5*00            [12] 5024 	mov	a,_bp
      00153B 24 04            [12] 5025 	add	a,#0x04
      00153D F8               [12] 5026 	mov	r0,a
      00153E 86 82            [24] 5027 	mov	dpl,@r0
      001540 08               [12] 5028 	inc	r0
      001541 86 83            [24] 5029 	mov	dph,@r0
      001543 08               [12] 5030 	inc	r0
      001544 86 F0            [24] 5031 	mov	b,@r0
      001546 12r00r00         [24] 5032 	lcall	__gptrget
      001549 FB               [12] 5033 	mov	r3,a
      00154A A3               [24] 5034 	inc	dptr
      00154B 12r00r00         [24] 5035 	lcall	__gptrget
      00154E FC               [12] 5036 	mov	r4,a
      00154F A3               [24] 5037 	inc	dptr
      001550 12r00r00         [24] 5038 	lcall	__gptrget
      001553 FD               [12] 5039 	mov	r5,a
      001554 E5*00            [12] 5040 	mov	a,_bp
      001556 24 0A            [12] 5041 	add	a,#0x0a
      001558 F8               [12] 5042 	mov	r0,a
      001559 86 82            [24] 5043 	mov	dpl,@r0
      00155B 08               [12] 5044 	inc	r0
      00155C 86 83            [24] 5045 	mov	dph,@r0
      00155E 08               [12] 5046 	inc	r0
      00155F 86 F0            [24] 5047 	mov	b,@r0
      001561 EB               [12] 5048 	mov	a,r3
      001562 12r00r00         [24] 5049 	lcall	__gptrput
      001565 A3               [24] 5050 	inc	dptr
      001566 EC               [12] 5051 	mov	a,r4
      001567 12r00r00         [24] 5052 	lcall	__gptrput
      00156A A3               [24] 5053 	inc	dptr
      00156B ED               [12] 5054 	mov	a,r5
      00156C 12r00r00         [24] 5055 	lcall	__gptrput
      00156F                       5056 00108$:
      00156F E5*00            [12] 5057 	mov	a,_bp
      001571 24 07            [12] 5058 	add	a,#0x07
      001573 F8               [12] 5059 	mov	r0,a
      001574 86 82            [24] 5060 	mov	dpl,@r0
      001576 08               [12] 5061 	inc	r0
      001577 86 83            [24] 5062 	mov	dph,@r0
      001579 08               [12] 5063 	inc	r0
      00157A 86 F0            [24] 5064 	mov	b,@r0
      00157C 74 00            [12] 5065 	mov	a,#0x00
      00157E 12r00r00         [24] 5066 	lcall	__gptrput
      001581 A3               [24] 5067 	inc	dptr
      001582 12r00r00         [24] 5068 	lcall	__gptrput
      001585 A3               [24] 5069 	inc	dptr
      001586 12r00r00         [24] 5070 	lcall	__gptrput
      001589 E5*00            [12] 5071 	mov	a,_bp
      00158B 24 15            [12] 5072 	add	a,#0x15
      00158D F8               [12] 5073 	mov	r0,a
      00158E 86 82            [24] 5074 	mov	dpl,@r0
      001590 08               [12] 5075 	inc	r0
      001591 86 83            [24] 5076 	mov	dph,@r0
      001593 08               [12] 5077 	inc	r0
      001594 86 F0            [24] 5078 	mov	b,@r0
      001596 12r00r00         [24] 5079 	lcall	__gptrget
      001599 FD               [12] 5080 	mov	r5,a
      00159A 1D               [12] 5081 	dec	r5
      00159B E5*00            [12] 5082 	mov	a,_bp
      00159D 24 15            [12] 5083 	add	a,#0x15
      00159F F8               [12] 5084 	mov	r0,a
      0015A0 86 82            [24] 5085 	mov	dpl,@r0
      0015A2 08               [12] 5086 	inc	r0
      0015A3 86 83            [24] 5087 	mov	dph,@r0
      0015A5 08               [12] 5088 	inc	r0
      0015A6 86 F0            [24] 5089 	mov	b,@r0
      0015A8 ED               [12] 5090 	mov	a,r5
      0015A9 12r00r00         [24] 5091 	lcall	__gptrput
      0015AC                       5092 00110$:
                           0015AC  5093 	C$tasks.c$2824$1_0$271 ==.
                                   5094 ;	tasks.c:2824: prvAddTaskToReadyList( pxTCB );
      0015AC C0 02            [24] 5095 	push	ar2
      0015AE C0 06            [24] 5096 	push	ar6
      0015B0 C0 07            [24] 5097 	push	ar7
      0015B2 E5*00            [12] 5098 	mov	a,_bp
      0015B4 24 10            [12] 5099 	add	a,#0x10
      0015B6 F8               [12] 5100 	mov	r0,a
      0015B7 A9*00            [24] 5101 	mov	r1,_bp
      0015B9 09               [12] 5102 	inc	r1
      0015BA 74 1F            [12] 5103 	mov	a,#0x1f
      0015BC 26               [12] 5104 	add	a,@r0
      0015BD F7               [12] 5105 	mov	@r1,a
      0015BE 74 00            [12] 5106 	mov	a,#0x00
      0015C0 08               [12] 5107 	inc	r0
      0015C1 36               [12] 5108 	addc	a,@r0
      0015C2 09               [12] 5109 	inc	r1
      0015C3 F7               [12] 5110 	mov	@r1,a
      0015C4 08               [12] 5111 	inc	r0
      0015C5 E6               [12] 5112 	mov	a,@r0
      0015C6 09               [12] 5113 	inc	r1
      0015C7 F7               [12] 5114 	mov	@r1,a
      0015C8 A8*00            [24] 5115 	mov	r0,_bp
      0015CA 08               [12] 5116 	inc	r0
      0015CB 86 82            [24] 5117 	mov	dpl,@r0
      0015CD 08               [12] 5118 	inc	r0
      0015CE 86 83            [24] 5119 	mov	dph,@r0
      0015D0 08               [12] 5120 	inc	r0
      0015D1 86 F0            [24] 5121 	mov	b,@r0
      0015D3 12r00r00         [24] 5122 	lcall	__gptrget
      0015D6 FD               [12] 5123 	mov	r5,a
      0015D7 90r00r07         [24] 5124 	mov	dptr,#_uxTopReadyPriority
      0015DA E0               [24] 5125 	movx	a,@dptr
      0015DB FF               [12] 5126 	mov	r7,a
      0015DC C3               [12] 5127 	clr	c
      0015DD EF               [12] 5128 	mov	a,r7
      0015DE 9D               [12] 5129 	subb	a,r5
      0015DF D0 07            [24] 5130 	pop	ar7
      0015E1 D0 06            [24] 5131 	pop	ar6
      0015E3 D0 02            [24] 5132 	pop	ar2
      0015E5 40 03            [24] 5133 	jc	00177$
      0015E7 02r15rEF         [24] 5134 	ljmp	00112$
      0015EA                       5135 00177$:
      0015EA 90r00r07         [24] 5136 	mov	dptr,#_uxTopReadyPriority
      0015ED ED               [12] 5137 	mov	a,r5
      0015EE F0               [24] 5138 	movx	@dptr,a
      0015EF                       5139 00112$:
      0015EF A8*00            [24] 5140 	mov	r0,_bp
      0015F1 08               [12] 5141 	inc	r0
      0015F2 86 82            [24] 5142 	mov	dpl,@r0
      0015F4 08               [12] 5143 	inc	r0
      0015F5 86 83            [24] 5144 	mov	dph,@r0
      0015F7 08               [12] 5145 	inc	r0
      0015F8 86 F0            [24] 5146 	mov	b,@r0
      0015FA 12r00r00         [24] 5147 	lcall	__gptrget
      0015FD FD               [12] 5148 	mov	r5,a
      0015FE ED               [12] 5149 	mov	a,r5
      0015FF 75 F0 0C         [24] 5150 	mov	b,#0x0c
      001602 A4               [48] 5151 	mul	ab
      001603 24r00            [12] 5152 	add	a,#_pxReadyTasksLists
      001605 FC               [12] 5153 	mov	r4,a
      001606 74s00            [12] 5154 	mov	a,#(_pxReadyTasksLists >> 8)
      001608 35 F0            [12] 5155 	addc	a,b
      00160A FD               [12] 5156 	mov	r5,a
      00160B 8C 82            [24] 5157 	mov	dpl,r4
      00160D 8D 83            [24] 5158 	mov	dph,r5
      00160F A3               [24] 5159 	inc	dptr
      001610 E5*00            [12] 5160 	mov	a,_bp
      001612 24 15            [12] 5161 	add	a,#0x15
      001614 F8               [12] 5162 	mov	r0,a
      001615 E0               [24] 5163 	movx	a,@dptr
      001616 F6               [12] 5164 	mov	@r0,a
      001617 A3               [24] 5165 	inc	dptr
      001618 E0               [24] 5166 	movx	a,@dptr
      001619 08               [12] 5167 	inc	r0
      00161A F6               [12] 5168 	mov	@r0,a
      00161B A3               [24] 5169 	inc	dptr
      00161C E0               [24] 5170 	movx	a,@dptr
      00161D 08               [12] 5171 	inc	r0
      00161E F6               [12] 5172 	mov	@r0,a
      00161F 74 02            [12] 5173 	mov	a,#0x02
      001621 2A               [12] 5174 	add	a,r2
      001622 FB               [12] 5175 	mov	r3,a
      001623 74 00            [12] 5176 	mov	a,#0x00
      001625 3E               [12] 5177 	addc	a,r6
      001626 FC               [12] 5178 	mov	r4,a
      001627 8F 05            [24] 5179 	mov	ar5,r7
      001629 8B 82            [24] 5180 	mov	dpl,r3
      00162B 8C 83            [24] 5181 	mov	dph,r4
      00162D 8D F0            [24] 5182 	mov	b,r5
      00162F E5*00            [12] 5183 	mov	a,_bp
      001631 24 15            [12] 5184 	add	a,#0x15
      001633 F8               [12] 5185 	mov	r0,a
      001634 E6               [12] 5186 	mov	a,@r0
      001635 12r00r00         [24] 5187 	lcall	__gptrput
      001638 A3               [24] 5188 	inc	dptr
      001639 08               [12] 5189 	inc	r0
      00163A E6               [12] 5190 	mov	a,@r0
      00163B 12r00r00         [24] 5191 	lcall	__gptrput
      00163E A3               [24] 5192 	inc	dptr
      00163F 08               [12] 5193 	inc	r0
      001640 E6               [12] 5194 	mov	a,@r0
      001641 12r00r00         [24] 5195 	lcall	__gptrput
      001644 E5*00            [12] 5196 	mov	a,_bp
      001646 24 0A            [12] 5197 	add	a,#0x0a
      001648 F8               [12] 5198 	mov	r0,a
      001649 74 05            [12] 5199 	mov	a,#0x05
      00164B 2A               [12] 5200 	add	a,r2
      00164C F6               [12] 5201 	mov	@r0,a
      00164D 74 00            [12] 5202 	mov	a,#0x00
      00164F 3E               [12] 5203 	addc	a,r6
      001650 08               [12] 5204 	inc	r0
      001651 F6               [12] 5205 	mov	@r0,a
      001652 08               [12] 5206 	inc	r0
      001653 A6 07            [24] 5207 	mov	@r0,ar7
      001655 E5*00            [12] 5208 	mov	a,_bp
      001657 24 15            [12] 5209 	add	a,#0x15
      001659 F8               [12] 5210 	mov	r0,a
      00165A E5*00            [12] 5211 	mov	a,_bp
      00165C 24 07            [12] 5212 	add	a,#0x07
      00165E F9               [12] 5213 	mov	r1,a
      00165F 74 05            [12] 5214 	mov	a,#0x05
      001661 26               [12] 5215 	add	a,@r0
      001662 F7               [12] 5216 	mov	@r1,a
      001663 74 00            [12] 5217 	mov	a,#0x00
      001665 08               [12] 5218 	inc	r0
      001666 36               [12] 5219 	addc	a,@r0
      001667 09               [12] 5220 	inc	r1
      001668 F7               [12] 5221 	mov	@r1,a
      001669 08               [12] 5222 	inc	r0
      00166A E6               [12] 5223 	mov	a,@r0
      00166B 09               [12] 5224 	inc	r1
      00166C F7               [12] 5225 	mov	@r1,a
      00166D E5*00            [12] 5226 	mov	a,_bp
      00166F 24 07            [12] 5227 	add	a,#0x07
      001671 F8               [12] 5228 	mov	r0,a
      001672 86 82            [24] 5229 	mov	dpl,@r0
      001674 08               [12] 5230 	inc	r0
      001675 86 83            [24] 5231 	mov	dph,@r0
      001677 08               [12] 5232 	inc	r0
      001678 86 F0            [24] 5233 	mov	b,@r0
      00167A 12r00r00         [24] 5234 	lcall	__gptrget
      00167D FB               [12] 5235 	mov	r3,a
      00167E A3               [24] 5236 	inc	dptr
      00167F 12r00r00         [24] 5237 	lcall	__gptrget
      001682 FC               [12] 5238 	mov	r4,a
      001683 A3               [24] 5239 	inc	dptr
      001684 12r00r00         [24] 5240 	lcall	__gptrget
      001687 FD               [12] 5241 	mov	r5,a
      001688 E5*00            [12] 5242 	mov	a,_bp
      00168A 24 0A            [12] 5243 	add	a,#0x0a
      00168C F8               [12] 5244 	mov	r0,a
      00168D 86 82            [24] 5245 	mov	dpl,@r0
      00168F 08               [12] 5246 	inc	r0
      001690 86 83            [24] 5247 	mov	dph,@r0
      001692 08               [12] 5248 	inc	r0
      001693 86 F0            [24] 5249 	mov	b,@r0
      001695 EB               [12] 5250 	mov	a,r3
      001696 12r00r00         [24] 5251 	lcall	__gptrput
      001699 A3               [24] 5252 	inc	dptr
      00169A EC               [12] 5253 	mov	a,r4
      00169B 12r00r00         [24] 5254 	lcall	__gptrput
      00169E A3               [24] 5255 	inc	dptr
      00169F ED               [12] 5256 	mov	a,r5
      0016A0 12r00r00         [24] 5257 	lcall	__gptrput
      0016A3 E5*00            [12] 5258 	mov	a,_bp
      0016A5 24 07            [12] 5259 	add	a,#0x07
      0016A7 F8               [12] 5260 	mov	r0,a
      0016A8 86 82            [24] 5261 	mov	dpl,@r0
      0016AA 08               [12] 5262 	inc	r0
      0016AB 86 83            [24] 5263 	mov	dph,@r0
      0016AD 08               [12] 5264 	inc	r0
      0016AE 86 F0            [24] 5265 	mov	b,@r0
      0016B0 12r00r00         [24] 5266 	lcall	__gptrget
      0016B3 FB               [12] 5267 	mov	r3,a
      0016B4 A3               [24] 5268 	inc	dptr
      0016B5 12r00r00         [24] 5269 	lcall	__gptrget
      0016B8 FC               [12] 5270 	mov	r4,a
      0016B9 A3               [24] 5271 	inc	dptr
      0016BA 12r00r00         [24] 5272 	lcall	__gptrget
      0016BD FD               [12] 5273 	mov	r5,a
      0016BE 74 02            [12] 5274 	mov	a,#0x02
      0016C0 2B               [12] 5275 	add	a,r3
      0016C1 FB               [12] 5276 	mov	r3,a
      0016C2 74 00            [12] 5277 	mov	a,#0x00
      0016C4 3C               [12] 5278 	addc	a,r4
      0016C5 FC               [12] 5279 	mov	r4,a
      0016C6 8B 82            [24] 5280 	mov	dpl,r3
      0016C8 8C 83            [24] 5281 	mov	dph,r4
      0016CA 8D F0            [24] 5282 	mov	b,r5
      0016CC EA               [12] 5283 	mov	a,r2
      0016CD 12r00r00         [24] 5284 	lcall	__gptrput
      0016D0 A3               [24] 5285 	inc	dptr
      0016D1 EE               [12] 5286 	mov	a,r6
      0016D2 12r00r00         [24] 5287 	lcall	__gptrput
      0016D5 A3               [24] 5288 	inc	dptr
      0016D6 EF               [12] 5289 	mov	a,r7
      0016D7 12r00r00         [24] 5290 	lcall	__gptrput
      0016DA E5*00            [12] 5291 	mov	a,_bp
      0016DC 24 07            [12] 5292 	add	a,#0x07
      0016DE F8               [12] 5293 	mov	r0,a
      0016DF 86 82            [24] 5294 	mov	dpl,@r0
      0016E1 08               [12] 5295 	inc	r0
      0016E2 86 83            [24] 5296 	mov	dph,@r0
      0016E4 08               [12] 5297 	inc	r0
      0016E5 86 F0            [24] 5298 	mov	b,@r0
      0016E7 EA               [12] 5299 	mov	a,r2
      0016E8 12r00r00         [24] 5300 	lcall	__gptrput
      0016EB A3               [24] 5301 	inc	dptr
      0016EC EE               [12] 5302 	mov	a,r6
      0016ED 12r00r00         [24] 5303 	lcall	__gptrput
      0016F0 A3               [24] 5304 	inc	dptr
      0016F1 EF               [12] 5305 	mov	a,r7
      0016F2 12r00r00         [24] 5306 	lcall	__gptrput
      0016F5 A8*00            [24] 5307 	mov	r0,_bp
      0016F7 08               [12] 5308 	inc	r0
      0016F8 86 82            [24] 5309 	mov	dpl,@r0
      0016FA 08               [12] 5310 	inc	r0
      0016FB 86 83            [24] 5311 	mov	dph,@r0
      0016FD 08               [12] 5312 	inc	r0
      0016FE 86 F0            [24] 5313 	mov	b,@r0
      001700 12r00r00         [24] 5314 	lcall	__gptrget
      001703 FF               [12] 5315 	mov	r7,a
      001704 EF               [12] 5316 	mov	a,r7
      001705 75 F0 0C         [24] 5317 	mov	b,#0x0c
      001708 A4               [48] 5318 	mul	ab
      001709 24r00            [12] 5319 	add	a,#_pxReadyTasksLists
      00170B FE               [12] 5320 	mov	r6,a
      00170C 74s00            [12] 5321 	mov	a,#(_pxReadyTasksLists >> 8)
      00170E 35 F0            [12] 5322 	addc	a,b
      001710 FF               [12] 5323 	mov	r7,a
      001711 7D 00            [12] 5324 	mov	r5,#0x00
      001713 E5*00            [12] 5325 	mov	a,_bp
      001715 24 0D            [12] 5326 	add	a,#0x0d
      001717 F8               [12] 5327 	mov	r0,a
      001718 86 82            [24] 5328 	mov	dpl,@r0
      00171A 08               [12] 5329 	inc	r0
      00171B 86 83            [24] 5330 	mov	dph,@r0
      00171D 08               [12] 5331 	inc	r0
      00171E 86 F0            [24] 5332 	mov	b,@r0
      001720 EE               [12] 5333 	mov	a,r6
      001721 12r00r00         [24] 5334 	lcall	__gptrput
      001724 A3               [24] 5335 	inc	dptr
      001725 EF               [12] 5336 	mov	a,r7
      001726 12r00r00         [24] 5337 	lcall	__gptrput
      001729 A3               [24] 5338 	inc	dptr
      00172A ED               [12] 5339 	mov	a,r5
      00172B 12r00r00         [24] 5340 	lcall	__gptrput
      00172E A8*00            [24] 5341 	mov	r0,_bp
      001730 08               [12] 5342 	inc	r0
      001731 86 82            [24] 5343 	mov	dpl,@r0
      001733 08               [12] 5344 	inc	r0
      001734 86 83            [24] 5345 	mov	dph,@r0
      001736 08               [12] 5346 	inc	r0
      001737 86 F0            [24] 5347 	mov	b,@r0
      001739 12r00r00         [24] 5348 	lcall	__gptrget
      00173C FF               [12] 5349 	mov	r7,a
      00173D EF               [12] 5350 	mov	a,r7
      00173E 75 F0 0C         [24] 5351 	mov	b,#0x0c
      001741 A4               [48] 5352 	mul	ab
      001742 24r00            [12] 5353 	add	a,#_pxReadyTasksLists
      001744 FE               [12] 5354 	mov	r6,a
      001745 74s00            [12] 5355 	mov	a,#(_pxReadyTasksLists >> 8)
      001747 35 F0            [12] 5356 	addc	a,b
      001749 FF               [12] 5357 	mov	r7,a
      00174A 8E 82            [24] 5358 	mov	dpl,r6
      00174C 8F 83            [24] 5359 	mov	dph,r7
      00174E E0               [24] 5360 	movx	a,@dptr
      00174F FD               [12] 5361 	mov	r5,a
      001750 0D               [12] 5362 	inc	r5
      001751 8E 82            [24] 5363 	mov	dpl,r6
      001753 8F 83            [24] 5364 	mov	dph,r7
      001755 ED               [12] 5365 	mov	a,r5
      001756 F0               [24] 5366 	movx	@dptr,a
      001757 02r10rF4         [24] 5367 	ljmp	00122$
      00175A                       5368 00120$:
                           00175A  5369 	C$tasks.c$2894$2_0$292 ==.
                                   5370 ;	tasks.c:2894: ++xPendedTicks;
      00175A 90r00r09         [24] 5371 	mov	dptr,#_xPendedTicks
      00175D E0               [24] 5372 	movx	a,@dptr
      00175E 24 01            [12] 5373 	add	a,#0x01
      001760 F0               [24] 5374 	movx	@dptr,a
      001761 A3               [24] 5375 	inc	dptr
      001762 E0               [24] 5376 	movx	a,@dptr
      001763 34 00            [12] 5377 	addc	a,#0x00
      001765 F0               [24] 5378 	movx	@dptr,a
      001766                       5379 00121$:
                           001766  5380 	C$tasks.c$2905$1_0$271 ==.
                                   5381 ;	tasks.c:2905: return xSwitchRequired;
      001766 75 82 00         [24] 5382 	mov	dpl,#0x00
      001769                       5383 00124$:
                           001769  5384 	C$tasks.c$2906$1_0$271 ==.
                                   5385 ;	tasks.c:2906: }
      001769 85*00 81         [24] 5386 	mov	sp,_bp
      00176C D0*00            [24] 5387 	pop	_bp
                           00176E  5388 	C$tasks.c$2906$1_0$271 ==.
                           00176E  5389 	XG$xTaskIncrementTick$0$0 ==.
      00176E 22               [24] 5390 	ret
                                   5391 ;------------------------------------------------------------
                                   5392 ;Allocation info for local variables in function 'vTaskSwitchContext'
                                   5393 ;------------------------------------------------------------
                                   5394 ;uxTopPriority             Allocated to stack - _bp +7
                                   5395 ;pxConstList               Allocated to stack - _bp +8
                                   5396 ;sloc0                     Allocated to stack - _bp +1
                                   5397 ;sloc1                     Allocated to stack - _bp +4
                                   5398 ;------------------------------------------------------------
                           00176F  5399 	G$vTaskSwitchContext$0$0 ==.
                           00176F  5400 	C$tasks.c$3021$1_0$294 ==.
                                   5401 ;	tasks.c:3021: void vTaskSwitchContext( void )
                                   5402 ;	-----------------------------------------
                                   5403 ;	 function vTaskSwitchContext
                                   5404 ;	-----------------------------------------
      00176F                       5405 _vTaskSwitchContext:
      00176F C0*00            [24] 5406 	push	_bp
      001771 85 81*00         [24] 5407 	mov	_bp,sp
      001774 E5 81            [12] 5408 	mov	a,sp
      001776 24 0A            [12] 5409 	add	a,#0x0a
      001778 F5 81            [12] 5410 	mov	sp,a
                           00177A  5411 	C$tasks.c$3023$1_0$294 ==.
                                   5412 ;	tasks.c:3023: if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
      00177A 90r00r13         [24] 5413 	mov	dptr,#_uxSchedulerSuspended
      00177D E0               [24] 5414 	movx	a,@dptr
      00177E 70 03            [24] 5415 	jnz	00132$
      001780 02r17r8C         [24] 5416 	ljmp	00107$
      001783                       5417 00132$:
                           001783  5418 	C$tasks.c$3027$2_0$295 ==.
                                   5419 ;	tasks.c:3027: xYieldPending = pdTRUE;
      001783 90r00r0B         [24] 5420 	mov	dptr,#_xYieldPending
      001786 74 01            [12] 5421 	mov	a,#0x01
      001788 F0               [24] 5422 	movx	@dptr,a
      001789 02r18rFC         [24] 5423 	ljmp	00109$
      00178C                       5424 00107$:
                           00178C  5425 	C$tasks.c$3031$2_0$296 ==.
                                   5426 ;	tasks.c:3031: xYieldPending = pdFALSE;
      00178C 90r00r0B         [24] 5427 	mov	dptr,#_xYieldPending
      00178F 74 00            [12] 5428 	mov	a,#0x00
      001791 F0               [24] 5429 	movx	@dptr,a
                           001792  5430 	C$tasks.c$3074$4_0$297 ==.
                                   5431 ;	tasks.c:3074: taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      001792 90r00r07         [24] 5432 	mov	dptr,#_uxTopReadyPriority
      001795 E0               [24] 5433 	movx	a,@dptr
      001796 FF               [12] 5434 	mov	r7,a
      001797                       5435 00101$:
      001797 EF               [12] 5436 	mov	a,r7
      001798 75 F0 0C         [24] 5437 	mov	b,#0x0c
      00179B A4               [48] 5438 	mul	ab
      00179C FD               [12] 5439 	mov	r5,a
      00179D AE F0            [24] 5440 	mov	r6,b
      00179F ED               [12] 5441 	mov	a,r5
      0017A0 24r00            [12] 5442 	add	a,#_pxReadyTasksLists
      0017A2 FB               [12] 5443 	mov	r3,a
      0017A3 EE               [12] 5444 	mov	a,r6
      0017A4 34s00            [12] 5445 	addc	a,#(_pxReadyTasksLists >> 8)
      0017A6 FC               [12] 5446 	mov	r4,a
      0017A7 8B 82            [24] 5447 	mov	dpl,r3
      0017A9 8C 83            [24] 5448 	mov	dph,r4
      0017AB E0               [24] 5449 	movx	a,@dptr
      0017AC 60 03            [24] 5450 	jz	00133$
      0017AE 02r17rB5         [24] 5451 	ljmp	00115$
      0017B1                       5452 00133$:
      0017B1 1F               [12] 5453 	dec	r7
      0017B2 02r17r97         [24] 5454 	ljmp	00101$
      0017B5                       5455 00115$:
      0017B5 E5*00            [12] 5456 	mov	a,_bp
      0017B7 24 07            [12] 5457 	add	a,#0x07
      0017B9 F8               [12] 5458 	mov	r0,a
      0017BA A6 07            [24] 5459 	mov	@r0,ar7
      0017BC ED               [12] 5460 	mov	a,r5
      0017BD 24r00            [12] 5461 	add	a,#_pxReadyTasksLists
      0017BF FD               [12] 5462 	mov	r5,a
      0017C0 EE               [12] 5463 	mov	a,r6
      0017C1 34s00            [12] 5464 	addc	a,#(_pxReadyTasksLists >> 8)
      0017C3 FE               [12] 5465 	mov	r6,a
      0017C4 E5*00            [12] 5466 	mov	a,_bp
      0017C6 24 08            [12] 5467 	add	a,#0x08
      0017C8 F8               [12] 5468 	mov	r0,a
      0017C9 A6 05            [24] 5469 	mov	@r0,ar5
      0017CB 08               [12] 5470 	inc	r0
      0017CC A6 06            [24] 5471 	mov	@r0,ar6
      0017CE 08               [12] 5472 	inc	r0
      0017CF 76 00            [12] 5473 	mov	@r0,#0x00
      0017D1 E5*00            [12] 5474 	mov	a,_bp
      0017D3 24 08            [12] 5475 	add	a,#0x08
      0017D5 F8               [12] 5476 	mov	r0,a
      0017D6 74 01            [12] 5477 	mov	a,#0x01
      0017D8 26               [12] 5478 	add	a,@r0
      0017D9 FA               [12] 5479 	mov	r2,a
      0017DA 74 00            [12] 5480 	mov	a,#0x00
      0017DC 08               [12] 5481 	inc	r0
      0017DD 36               [12] 5482 	addc	a,@r0
      0017DE FB               [12] 5483 	mov	r3,a
      0017DF 08               [12] 5484 	inc	r0
      0017E0 86 07            [24] 5485 	mov	ar7,@r0
      0017E2 8A 82            [24] 5486 	mov	dpl,r2
      0017E4 8B 83            [24] 5487 	mov	dph,r3
      0017E6 8F F0            [24] 5488 	mov	b,r7
      0017E8 12r00r00         [24] 5489 	lcall	__gptrget
      0017EB FC               [12] 5490 	mov	r4,a
      0017EC A3               [24] 5491 	inc	dptr
      0017ED 12r00r00         [24] 5492 	lcall	__gptrget
      0017F0 FD               [12] 5493 	mov	r5,a
      0017F1 A3               [24] 5494 	inc	dptr
      0017F2 12r00r00         [24] 5495 	lcall	__gptrget
      0017F5 FE               [12] 5496 	mov	r6,a
      0017F6 74 02            [12] 5497 	mov	a,#0x02
      0017F8 2C               [12] 5498 	add	a,r4
      0017F9 FC               [12] 5499 	mov	r4,a
      0017FA 74 00            [12] 5500 	mov	a,#0x00
      0017FC 3D               [12] 5501 	addc	a,r5
      0017FD FD               [12] 5502 	mov	r5,a
      0017FE 8C 82            [24] 5503 	mov	dpl,r4
      001800 8D 83            [24] 5504 	mov	dph,r5
      001802 8E F0            [24] 5505 	mov	b,r6
      001804 12r00r00         [24] 5506 	lcall	__gptrget
      001807 FC               [12] 5507 	mov	r4,a
      001808 A3               [24] 5508 	inc	dptr
      001809 12r00r00         [24] 5509 	lcall	__gptrget
      00180C FD               [12] 5510 	mov	r5,a
      00180D A3               [24] 5511 	inc	dptr
      00180E 12r00r00         [24] 5512 	lcall	__gptrget
      001811 FE               [12] 5513 	mov	r6,a
      001812 8A 82            [24] 5514 	mov	dpl,r2
      001814 8B 83            [24] 5515 	mov	dph,r3
      001816 8F F0            [24] 5516 	mov	b,r7
      001818 EC               [12] 5517 	mov	a,r4
      001819 12r00r00         [24] 5518 	lcall	__gptrput
      00181C A3               [24] 5519 	inc	dptr
      00181D ED               [12] 5520 	mov	a,r5
      00181E 12r00r00         [24] 5521 	lcall	__gptrput
      001821 A3               [24] 5522 	inc	dptr
      001822 EE               [12] 5523 	mov	a,r6
      001823 12r00r00         [24] 5524 	lcall	__gptrput
      001826 8A 82            [24] 5525 	mov	dpl,r2
      001828 8B 83            [24] 5526 	mov	dph,r3
      00182A 8F F0            [24] 5527 	mov	b,r7
      00182C A8*00            [24] 5528 	mov	r0,_bp
      00182E 08               [12] 5529 	inc	r0
      00182F 12r00r00         [24] 5530 	lcall	__gptrget
      001832 F6               [12] 5531 	mov	@r0,a
      001833 A3               [24] 5532 	inc	dptr
      001834 12r00r00         [24] 5533 	lcall	__gptrget
      001837 08               [12] 5534 	inc	r0
      001838 F6               [12] 5535 	mov	@r0,a
      001839 A3               [24] 5536 	inc	dptr
      00183A 12r00r00         [24] 5537 	lcall	__gptrget
      00183D 08               [12] 5538 	inc	r0
      00183E F6               [12] 5539 	mov	@r0,a
      00183F E5*00            [12] 5540 	mov	a,_bp
      001841 24 04            [12] 5541 	add	a,#0x04
      001843 F8               [12] 5542 	mov	r0,a
      001844 A6 04            [24] 5543 	mov	@r0,ar4
      001846 08               [12] 5544 	inc	r0
      001847 A6 05            [24] 5545 	mov	@r0,ar5
      001849 08               [12] 5546 	inc	r0
      00184A A6 06            [24] 5547 	mov	@r0,ar6
      00184C E5*00            [12] 5548 	mov	a,_bp
      00184E 24 08            [12] 5549 	add	a,#0x08
      001850 F8               [12] 5550 	mov	r0,a
      001851 74 04            [12] 5551 	mov	a,#0x04
      001853 26               [12] 5552 	add	a,@r0
      001854 FC               [12] 5553 	mov	r4,a
      001855 74 00            [12] 5554 	mov	a,#0x00
      001857 08               [12] 5555 	inc	r0
      001858 36               [12] 5556 	addc	a,@r0
      001859 FD               [12] 5557 	mov	r5,a
      00185A 08               [12] 5558 	inc	r0
      00185B 86 06            [24] 5559 	mov	ar6,@r0
      00185D E5*00            [12] 5560 	mov	a,_bp
      00185F 24 04            [12] 5561 	add	a,#0x04
      001861 F8               [12] 5562 	mov	r0,a
      001862 C0 04            [24] 5563 	push	ar4
      001864 C0 05            [24] 5564 	push	ar5
      001866 C0 06            [24] 5565 	push	ar6
      001868 86 82            [24] 5566 	mov	dpl,@r0
      00186A 08               [12] 5567 	inc	r0
      00186B 86 83            [24] 5568 	mov	dph,@r0
      00186D 08               [12] 5569 	inc	r0
      00186E 86 F0            [24] 5570 	mov	b,@r0
      001870 12r00r00         [24] 5571 	lcall	___gptr_cmp
      001873 15 81            [12] 5572 	dec	sp
      001875 15 81            [12] 5573 	dec	sp
      001877 15 81            [12] 5574 	dec	sp
      001879 70 02            [24] 5575 	jnz	00134$
      00187B 80 03            [24] 5576 	sjmp	00135$
      00187D                       5577 00134$:
      00187D 02r18rB7         [24] 5578 	ljmp	00105$
      001880                       5579 00135$:
      001880 A8*00            [24] 5580 	mov	r0,_bp
      001882 08               [12] 5581 	inc	r0
      001883 74 02            [12] 5582 	mov	a,#0x02
      001885 26               [12] 5583 	add	a,@r0
      001886 FC               [12] 5584 	mov	r4,a
      001887 74 00            [12] 5585 	mov	a,#0x00
      001889 08               [12] 5586 	inc	r0
      00188A 36               [12] 5587 	addc	a,@r0
      00188B FD               [12] 5588 	mov	r5,a
      00188C 08               [12] 5589 	inc	r0
      00188D 86 06            [24] 5590 	mov	ar6,@r0
      00188F 8C 82            [24] 5591 	mov	dpl,r4
      001891 8D 83            [24] 5592 	mov	dph,r5
      001893 8E F0            [24] 5593 	mov	b,r6
      001895 12r00r00         [24] 5594 	lcall	__gptrget
      001898 FC               [12] 5595 	mov	r4,a
      001899 A3               [24] 5596 	inc	dptr
      00189A 12r00r00         [24] 5597 	lcall	__gptrget
      00189D FD               [12] 5598 	mov	r5,a
      00189E A3               [24] 5599 	inc	dptr
      00189F 12r00r00         [24] 5600 	lcall	__gptrget
      0018A2 FE               [12] 5601 	mov	r6,a
      0018A3 8A 82            [24] 5602 	mov	dpl,r2
      0018A5 8B 83            [24] 5603 	mov	dph,r3
      0018A7 8F F0            [24] 5604 	mov	b,r7
      0018A9 EC               [12] 5605 	mov	a,r4
      0018AA 12r00r00         [24] 5606 	lcall	__gptrput
      0018AD A3               [24] 5607 	inc	dptr
      0018AE ED               [12] 5608 	mov	a,r5
      0018AF 12r00r00         [24] 5609 	lcall	__gptrput
      0018B2 A3               [24] 5610 	inc	dptr
      0018B3 EE               [12] 5611 	mov	a,r6
      0018B4 12r00r00         [24] 5612 	lcall	__gptrput
      0018B7                       5613 00105$:
      0018B7 8A 82            [24] 5614 	mov	dpl,r2
      0018B9 8B 83            [24] 5615 	mov	dph,r3
      0018BB 8F F0            [24] 5616 	mov	b,r7
      0018BD 12r00r00         [24] 5617 	lcall	__gptrget
      0018C0 FA               [12] 5618 	mov	r2,a
      0018C1 A3               [24] 5619 	inc	dptr
      0018C2 12r00r00         [24] 5620 	lcall	__gptrget
      0018C5 FB               [12] 5621 	mov	r3,a
      0018C6 A3               [24] 5622 	inc	dptr
      0018C7 12r00r00         [24] 5623 	lcall	__gptrget
      0018CA FF               [12] 5624 	mov	r7,a
      0018CB 74 08            [12] 5625 	mov	a,#0x08
      0018CD 2A               [12] 5626 	add	a,r2
      0018CE FA               [12] 5627 	mov	r2,a
      0018CF 74 00            [12] 5628 	mov	a,#0x00
      0018D1 3B               [12] 5629 	addc	a,r3
      0018D2 FB               [12] 5630 	mov	r3,a
      0018D3 8A 82            [24] 5631 	mov	dpl,r2
      0018D5 8B 83            [24] 5632 	mov	dph,r3
      0018D7 8F F0            [24] 5633 	mov	b,r7
      0018D9 12r00r00         [24] 5634 	lcall	__gptrget
      0018DC FA               [12] 5635 	mov	r2,a
      0018DD A3               [24] 5636 	inc	dptr
      0018DE 12r00r00         [24] 5637 	lcall	__gptrget
      0018E1 FB               [12] 5638 	mov	r3,a
      0018E2 A3               [24] 5639 	inc	dptr
      0018E3 12r00r00         [24] 5640 	lcall	__gptrget
      0018E6 FF               [12] 5641 	mov	r7,a
      0018E7 90r00r00         [24] 5642 	mov	dptr,#_pxCurrentTCB
      0018EA EA               [12] 5643 	mov	a,r2
      0018EB F0               [24] 5644 	movx	@dptr,a
      0018EC EB               [12] 5645 	mov	a,r3
      0018ED A3               [24] 5646 	inc	dptr
      0018EE F0               [24] 5647 	movx	@dptr,a
      0018EF EF               [12] 5648 	mov	a,r7
      0018F0 A3               [24] 5649 	inc	dptr
      0018F1 F0               [24] 5650 	movx	@dptr,a
      0018F2 E5*00            [12] 5651 	mov	a,_bp
      0018F4 24 07            [12] 5652 	add	a,#0x07
      0018F6 F8               [12] 5653 	mov	r0,a
      0018F7 90r00r07         [24] 5654 	mov	dptr,#_uxTopReadyPriority
      0018FA E6               [12] 5655 	mov	a,@r0
      0018FB F0               [24] 5656 	movx	@dptr,a
      0018FC                       5657 00109$:
                           0018FC  5658 	C$tasks.c$3094$1_0$294 ==.
                                   5659 ;	tasks.c:3094: }
      0018FC 85*00 81         [24] 5660 	mov	sp,_bp
      0018FF D0*00            [24] 5661 	pop	_bp
                           001901  5662 	C$tasks.c$3094$1_0$294 ==.
                           001901  5663 	XG$vTaskSwitchContext$0$0 ==.
      001901 22               [24] 5664 	ret
                                   5665 ;------------------------------------------------------------
                                   5666 ;Allocation info for local variables in function 'vTaskPlaceOnEventList'
                                   5667 ;------------------------------------------------------------
                                   5668 ;xTicksToWait              Allocated to stack - _bp -4
                                   5669 ;pxEventList               Allocated to registers r5 r6 r7 
                                   5670 ;------------------------------------------------------------
                           001902  5671 	G$vTaskPlaceOnEventList$0$0 ==.
                           001902  5672 	C$tasks.c$3097$1_0$302 ==.
                                   5673 ;	tasks.c:3097: void vTaskPlaceOnEventList( List_t * const pxEventList,
                                   5674 ;	-----------------------------------------
                                   5675 ;	 function vTaskPlaceOnEventList
                                   5676 ;	-----------------------------------------
      001902                       5677 _vTaskPlaceOnEventList:
      001902 C0*00            [24] 5678 	push	_bp
      001904 85 81*00         [24] 5679 	mov	_bp,sp
      001907 AD 82            [24] 5680 	mov	r5,dpl
      001909 AE 83            [24] 5681 	mov	r6,dph
      00190B AF F0            [24] 5682 	mov	r7,b
                           00190D  5683 	C$tasks.c$3116$1_0$302 ==.
                                   5684 ;	tasks.c:3116: vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
      00190D 90r00r00         [24] 5685 	mov	dptr,#_pxCurrentTCB
      001910 E0               [24] 5686 	movx	a,@dptr
      001911 FA               [12] 5687 	mov	r2,a
      001912 A3               [24] 5688 	inc	dptr
      001913 E0               [24] 5689 	movx	a,@dptr
      001914 FB               [12] 5690 	mov	r3,a
      001915 A3               [24] 5691 	inc	dptr
      001916 E0               [24] 5692 	movx	a,@dptr
      001917 FC               [12] 5693 	mov	r4,a
      001918 74 11            [12] 5694 	mov	a,#0x11
      00191A 2A               [12] 5695 	add	a,r2
      00191B FA               [12] 5696 	mov	r2,a
      00191C 74 00            [12] 5697 	mov	a,#0x00
      00191E 3B               [12] 5698 	addc	a,r3
      00191F FB               [12] 5699 	mov	r3,a
      001920 C0 02            [24] 5700 	push	ar2
      001922 C0 03            [24] 5701 	push	ar3
      001924 C0 04            [24] 5702 	push	ar4
      001926 8D 82            [24] 5703 	mov	dpl,r5
      001928 8E 83            [24] 5704 	mov	dph,r6
      00192A 8F F0            [24] 5705 	mov	b,r7
      00192C 12r00r00         [24] 5706 	lcall	_vListInsert
      00192F 15 81            [12] 5707 	dec	sp
      001931 15 81            [12] 5708 	dec	sp
      001933 15 81            [12] 5709 	dec	sp
                           001935  5710 	C$tasks.c$3118$1_0$302 ==.
                                   5711 ;	tasks.c:3118: prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
      001935 74 01            [12] 5712 	mov	a,#0x01
      001937 C0 E0            [24] 5713 	push	acc
      001939 E5*00            [12] 5714 	mov	a,_bp
      00193B 24 FC            [12] 5715 	add	a,#0xfc
      00193D F8               [12] 5716 	mov	r0,a
      00193E 86 82            [24] 5717 	mov	dpl,@r0
      001940 08               [12] 5718 	inc	r0
      001941 86 83            [24] 5719 	mov	dph,@r0
      001943 12r46rF6         [24] 5720 	lcall	_prvAddCurrentTaskToDelayedList
      001946 15 81            [12] 5721 	dec	sp
      001948                       5722 00101$:
                           001948  5723 	C$tasks.c$3119$1_0$302 ==.
                                   5724 ;	tasks.c:3119: }
      001948 D0*00            [24] 5725 	pop	_bp
                           00194A  5726 	C$tasks.c$3119$1_0$302 ==.
                           00194A  5727 	XG$vTaskPlaceOnEventList$0$0 ==.
      00194A 22               [24] 5728 	ret
                                   5729 ;------------------------------------------------------------
                                   5730 ;Allocation info for local variables in function 'vTaskPlaceOnUnorderedEventList'
                                   5731 ;------------------------------------------------------------
                                   5732 ;xItemValue                Allocated to stack - _bp -4
                                   5733 ;xTicksToWait              Allocated to stack - _bp -6
                                   5734 ;pxEventList               Allocated to stack - _bp +1
                                   5735 ;pxIndex                   Allocated to registers r5 r6 r7 
                                   5736 ;sloc0                     Allocated to stack - _bp +4
                                   5737 ;------------------------------------------------------------
                           00194B  5738 	G$vTaskPlaceOnUnorderedEventList$0$0 ==.
                           00194B  5739 	C$tasks.c$3122$1_0$304 ==.
                                   5740 ;	tasks.c:3122: void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
                                   5741 ;	-----------------------------------------
                                   5742 ;	 function vTaskPlaceOnUnorderedEventList
                                   5743 ;	-----------------------------------------
      00194B                       5744 _vTaskPlaceOnUnorderedEventList:
      00194B C0*00            [24] 5745 	push	_bp
      00194D 85 81*00         [24] 5746 	mov	_bp,sp
      001950 C0 82            [24] 5747 	push	dpl
      001952 C0 83            [24] 5748 	push	dph
      001954 C0 F0            [24] 5749 	push	b
      001956 05 81            [12] 5750 	inc	sp
      001958 05 81            [12] 5751 	inc	sp
      00195A 05 81            [12] 5752 	inc	sp
                           00195C  5753 	C$tasks.c$3135$1_0$304 ==.
                                   5754 ;	tasks.c:3135: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
      00195C 90r00r00         [24] 5755 	mov	dptr,#_pxCurrentTCB
      00195F E0               [24] 5756 	movx	a,@dptr
      001960 FA               [12] 5757 	mov	r2,a
      001961 A3               [24] 5758 	inc	dptr
      001962 E0               [24] 5759 	movx	a,@dptr
      001963 FB               [12] 5760 	mov	r3,a
      001964 A3               [24] 5761 	inc	dptr
      001965 E0               [24] 5762 	movx	a,@dptr
      001966 FC               [12] 5763 	mov	r4,a
      001967 74 11            [12] 5764 	mov	a,#0x11
      001969 2A               [12] 5765 	add	a,r2
      00196A FA               [12] 5766 	mov	r2,a
      00196B 74 00            [12] 5767 	mov	a,#0x00
      00196D 3B               [12] 5768 	addc	a,r3
      00196E FB               [12] 5769 	mov	r3,a
      00196F E5*00            [12] 5770 	mov	a,_bp
      001971 24 FC            [12] 5771 	add	a,#0xfc
      001973 F8               [12] 5772 	mov	r0,a
      001974 86 06            [24] 5773 	mov	ar6,@r0
      001976 08               [12] 5774 	inc	r0
      001977 86 07            [24] 5775 	mov	ar7,@r0
      001979 43 07 80         [24] 5776 	orl	ar7,#0x80
      00197C 8A 82            [24] 5777 	mov	dpl,r2
      00197E 8B 83            [24] 5778 	mov	dph,r3
      001980 8C F0            [24] 5779 	mov	b,r4
      001982 EE               [12] 5780 	mov	a,r6
      001983 12r00r00         [24] 5781 	lcall	__gptrput
      001986 A3               [24] 5782 	inc	dptr
      001987 EF               [12] 5783 	mov	a,r7
      001988 12r00r00         [24] 5784 	lcall	__gptrput
                           00198B  5785 	C$tasks.c$3142$2_0$305 ==.
                                   5786 ;	tasks.c:3142: listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
      00198B A8*00            [24] 5787 	mov	r0,_bp
      00198D 08               [12] 5788 	inc	r0
      00198E 74 01            [12] 5789 	mov	a,#0x01
      001990 26               [12] 5790 	add	a,@r0
      001991 FD               [12] 5791 	mov	r5,a
      001992 74 00            [12] 5792 	mov	a,#0x00
      001994 08               [12] 5793 	inc	r0
      001995 36               [12] 5794 	addc	a,@r0
      001996 FE               [12] 5795 	mov	r6,a
      001997 08               [12] 5796 	inc	r0
      001998 86 07            [24] 5797 	mov	ar7,@r0
      00199A 8D 82            [24] 5798 	mov	dpl,r5
      00199C 8E 83            [24] 5799 	mov	dph,r6
      00199E 8F F0            [24] 5800 	mov	b,r7
      0019A0 12r00r00         [24] 5801 	lcall	__gptrget
      0019A3 FD               [12] 5802 	mov	r5,a
      0019A4 A3               [24] 5803 	inc	dptr
      0019A5 12r00r00         [24] 5804 	lcall	__gptrget
      0019A8 FE               [12] 5805 	mov	r6,a
      0019A9 A3               [24] 5806 	inc	dptr
      0019AA 12r00r00         [24] 5807 	lcall	__gptrget
      0019AD FF               [12] 5808 	mov	r7,a
      0019AE 90r00r00         [24] 5809 	mov	dptr,#_pxCurrentTCB
      0019B1 E0               [24] 5810 	movx	a,@dptr
      0019B2 FA               [12] 5811 	mov	r2,a
      0019B3 A3               [24] 5812 	inc	dptr
      0019B4 E0               [24] 5813 	movx	a,@dptr
      0019B5 FB               [12] 5814 	mov	r3,a
      0019B6 A3               [24] 5815 	inc	dptr
      0019B7 E0               [24] 5816 	movx	a,@dptr
      0019B8 FC               [12] 5817 	mov	r4,a
      0019B9 74 11            [12] 5818 	mov	a,#0x11
      0019BB 2A               [12] 5819 	add	a,r2
      0019BC FA               [12] 5820 	mov	r2,a
      0019BD 74 00            [12] 5821 	mov	a,#0x00
      0019BF 3B               [12] 5822 	addc	a,r3
      0019C0 FB               [12] 5823 	mov	r3,a
      0019C1 74 02            [12] 5824 	mov	a,#0x02
      0019C3 2A               [12] 5825 	add	a,r2
      0019C4 FA               [12] 5826 	mov	r2,a
      0019C5 74 00            [12] 5827 	mov	a,#0x00
      0019C7 3B               [12] 5828 	addc	a,r3
      0019C8 FB               [12] 5829 	mov	r3,a
      0019C9 8A 82            [24] 5830 	mov	dpl,r2
      0019CB 8B 83            [24] 5831 	mov	dph,r3
      0019CD 8C F0            [24] 5832 	mov	b,r4
      0019CF ED               [12] 5833 	mov	a,r5
      0019D0 12r00r00         [24] 5834 	lcall	__gptrput
      0019D3 A3               [24] 5835 	inc	dptr
      0019D4 EE               [12] 5836 	mov	a,r6
      0019D5 12r00r00         [24] 5837 	lcall	__gptrput
      0019D8 A3               [24] 5838 	inc	dptr
      0019D9 EF               [12] 5839 	mov	a,r7
      0019DA 12r00r00         [24] 5840 	lcall	__gptrput
      0019DD 90r00r00         [24] 5841 	mov	dptr,#_pxCurrentTCB
      0019E0 E0               [24] 5842 	movx	a,@dptr
      0019E1 FA               [12] 5843 	mov	r2,a
      0019E2 A3               [24] 5844 	inc	dptr
      0019E3 E0               [24] 5845 	movx	a,@dptr
      0019E4 FB               [12] 5846 	mov	r3,a
      0019E5 A3               [24] 5847 	inc	dptr
      0019E6 E0               [24] 5848 	movx	a,@dptr
      0019E7 FC               [12] 5849 	mov	r4,a
      0019E8 74 11            [12] 5850 	mov	a,#0x11
      0019EA 2A               [12] 5851 	add	a,r2
      0019EB FA               [12] 5852 	mov	r2,a
      0019EC 74 00            [12] 5853 	mov	a,#0x00
      0019EE 3B               [12] 5854 	addc	a,r3
      0019EF FB               [12] 5855 	mov	r3,a
      0019F0 E5*00            [12] 5856 	mov	a,_bp
      0019F2 24 04            [12] 5857 	add	a,#0x04
      0019F4 F8               [12] 5858 	mov	r0,a
      0019F5 74 05            [12] 5859 	mov	a,#0x05
      0019F7 2A               [12] 5860 	add	a,r2
      0019F8 F6               [12] 5861 	mov	@r0,a
      0019F9 74 00            [12] 5862 	mov	a,#0x00
      0019FB 3B               [12] 5863 	addc	a,r3
      0019FC 08               [12] 5864 	inc	r0
      0019FD F6               [12] 5865 	mov	@r0,a
      0019FE 08               [12] 5866 	inc	r0
      0019FF A6 04            [24] 5867 	mov	@r0,ar4
      001A01 74 05            [12] 5868 	mov	a,#0x05
      001A03 2D               [12] 5869 	add	a,r5
      001A04 FD               [12] 5870 	mov	r5,a
      001A05 74 00            [12] 5871 	mov	a,#0x00
      001A07 3E               [12] 5872 	addc	a,r6
      001A08 FE               [12] 5873 	mov	r6,a
      001A09 8D 82            [24] 5874 	mov	dpl,r5
      001A0B 8E 83            [24] 5875 	mov	dph,r6
      001A0D 8F F0            [24] 5876 	mov	b,r7
      001A0F 12r00r00         [24] 5877 	lcall	__gptrget
      001A12 FA               [12] 5878 	mov	r2,a
      001A13 A3               [24] 5879 	inc	dptr
      001A14 12r00r00         [24] 5880 	lcall	__gptrget
      001A17 FB               [12] 5881 	mov	r3,a
      001A18 A3               [24] 5882 	inc	dptr
      001A19 12r00r00         [24] 5883 	lcall	__gptrget
      001A1C FC               [12] 5884 	mov	r4,a
      001A1D E5*00            [12] 5885 	mov	a,_bp
      001A1F 24 04            [12] 5886 	add	a,#0x04
      001A21 F8               [12] 5887 	mov	r0,a
      001A22 86 82            [24] 5888 	mov	dpl,@r0
      001A24 08               [12] 5889 	inc	r0
      001A25 86 83            [24] 5890 	mov	dph,@r0
      001A27 08               [12] 5891 	inc	r0
      001A28 86 F0            [24] 5892 	mov	b,@r0
      001A2A EA               [12] 5893 	mov	a,r2
      001A2B 12r00r00         [24] 5894 	lcall	__gptrput
      001A2E A3               [24] 5895 	inc	dptr
      001A2F EB               [12] 5896 	mov	a,r3
      001A30 12r00r00         [24] 5897 	lcall	__gptrput
      001A33 A3               [24] 5898 	inc	dptr
      001A34 EC               [12] 5899 	mov	a,r4
      001A35 12r00r00         [24] 5900 	lcall	__gptrput
      001A38 8D 82            [24] 5901 	mov	dpl,r5
      001A3A 8E 83            [24] 5902 	mov	dph,r6
      001A3C 8F F0            [24] 5903 	mov	b,r7
      001A3E 12r00r00         [24] 5904 	lcall	__gptrget
      001A41 FA               [12] 5905 	mov	r2,a
      001A42 A3               [24] 5906 	inc	dptr
      001A43 12r00r00         [24] 5907 	lcall	__gptrget
      001A46 FB               [12] 5908 	mov	r3,a
      001A47 A3               [24] 5909 	inc	dptr
      001A48 12r00r00         [24] 5910 	lcall	__gptrget
      001A4B FC               [12] 5911 	mov	r4,a
      001A4C E5*00            [12] 5912 	mov	a,_bp
      001A4E 24 04            [12] 5913 	add	a,#0x04
      001A50 F8               [12] 5914 	mov	r0,a
      001A51 74 02            [12] 5915 	mov	a,#0x02
      001A53 2A               [12] 5916 	add	a,r2
      001A54 F6               [12] 5917 	mov	@r0,a
      001A55 74 00            [12] 5918 	mov	a,#0x00
      001A57 3B               [12] 5919 	addc	a,r3
      001A58 08               [12] 5920 	inc	r0
      001A59 F6               [12] 5921 	mov	@r0,a
      001A5A 08               [12] 5922 	inc	r0
      001A5B A6 04            [24] 5923 	mov	@r0,ar4
      001A5D 90r00r00         [24] 5924 	mov	dptr,#_pxCurrentTCB
      001A60 E0               [24] 5925 	movx	a,@dptr
      001A61 FA               [12] 5926 	mov	r2,a
      001A62 A3               [24] 5927 	inc	dptr
      001A63 E0               [24] 5928 	movx	a,@dptr
      001A64 FB               [12] 5929 	mov	r3,a
      001A65 A3               [24] 5930 	inc	dptr
      001A66 E0               [24] 5931 	movx	a,@dptr
      001A67 FC               [12] 5932 	mov	r4,a
      001A68 74 11            [12] 5933 	mov	a,#0x11
      001A6A 2A               [12] 5934 	add	a,r2
      001A6B FA               [12] 5935 	mov	r2,a
      001A6C 74 00            [12] 5936 	mov	a,#0x00
      001A6E 3B               [12] 5937 	addc	a,r3
      001A6F FB               [12] 5938 	mov	r3,a
      001A70 E5*00            [12] 5939 	mov	a,_bp
      001A72 24 04            [12] 5940 	add	a,#0x04
      001A74 F8               [12] 5941 	mov	r0,a
      001A75 86 82            [24] 5942 	mov	dpl,@r0
      001A77 08               [12] 5943 	inc	r0
      001A78 86 83            [24] 5944 	mov	dph,@r0
      001A7A 08               [12] 5945 	inc	r0
      001A7B 86 F0            [24] 5946 	mov	b,@r0
      001A7D EA               [12] 5947 	mov	a,r2
      001A7E 12r00r00         [24] 5948 	lcall	__gptrput
      001A81 A3               [24] 5949 	inc	dptr
      001A82 EB               [12] 5950 	mov	a,r3
      001A83 12r00r00         [24] 5951 	lcall	__gptrput
      001A86 A3               [24] 5952 	inc	dptr
      001A87 EC               [12] 5953 	mov	a,r4
      001A88 12r00r00         [24] 5954 	lcall	__gptrput
      001A8B 90r00r00         [24] 5955 	mov	dptr,#_pxCurrentTCB
      001A8E E0               [24] 5956 	movx	a,@dptr
      001A8F FA               [12] 5957 	mov	r2,a
      001A90 A3               [24] 5958 	inc	dptr
      001A91 E0               [24] 5959 	movx	a,@dptr
      001A92 FB               [12] 5960 	mov	r3,a
      001A93 A3               [24] 5961 	inc	dptr
      001A94 E0               [24] 5962 	movx	a,@dptr
      001A95 FC               [12] 5963 	mov	r4,a
      001A96 74 11            [12] 5964 	mov	a,#0x11
      001A98 2A               [12] 5965 	add	a,r2
      001A99 FA               [12] 5966 	mov	r2,a
      001A9A 74 00            [12] 5967 	mov	a,#0x00
      001A9C 3B               [12] 5968 	addc	a,r3
      001A9D FB               [12] 5969 	mov	r3,a
      001A9E 8D 82            [24] 5970 	mov	dpl,r5
      001AA0 8E 83            [24] 5971 	mov	dph,r6
      001AA2 8F F0            [24] 5972 	mov	b,r7
      001AA4 EA               [12] 5973 	mov	a,r2
      001AA5 12r00r00         [24] 5974 	lcall	__gptrput
      001AA8 A3               [24] 5975 	inc	dptr
      001AA9 EB               [12] 5976 	mov	a,r3
      001AAA 12r00r00         [24] 5977 	lcall	__gptrput
      001AAD A3               [24] 5978 	inc	dptr
      001AAE EC               [12] 5979 	mov	a,r4
      001AAF 12r00r00         [24] 5980 	lcall	__gptrput
      001AB2 90r00r00         [24] 5981 	mov	dptr,#_pxCurrentTCB
      001AB5 E0               [24] 5982 	movx	a,@dptr
      001AB6 FD               [12] 5983 	mov	r5,a
      001AB7 A3               [24] 5984 	inc	dptr
      001AB8 E0               [24] 5985 	movx	a,@dptr
      001AB9 FE               [12] 5986 	mov	r6,a
      001ABA A3               [24] 5987 	inc	dptr
      001ABB E0               [24] 5988 	movx	a,@dptr
      001ABC FF               [12] 5989 	mov	r7,a
      001ABD 74 11            [12] 5990 	mov	a,#0x11
      001ABF 2D               [12] 5991 	add	a,r5
      001AC0 FD               [12] 5992 	mov	r5,a
      001AC1 74 00            [12] 5993 	mov	a,#0x00
      001AC3 3E               [12] 5994 	addc	a,r6
      001AC4 FE               [12] 5995 	mov	r6,a
      001AC5 74 0B            [12] 5996 	mov	a,#0x0b
      001AC7 2D               [12] 5997 	add	a,r5
      001AC8 FD               [12] 5998 	mov	r5,a
      001AC9 74 00            [12] 5999 	mov	a,#0x00
      001ACB 3E               [12] 6000 	addc	a,r6
      001ACC FE               [12] 6001 	mov	r6,a
      001ACD 8D 82            [24] 6002 	mov	dpl,r5
      001ACF 8E 83            [24] 6003 	mov	dph,r6
      001AD1 8F F0            [24] 6004 	mov	b,r7
      001AD3 A8*00            [24] 6005 	mov	r0,_bp
      001AD5 08               [12] 6006 	inc	r0
      001AD6 E6               [12] 6007 	mov	a,@r0
      001AD7 12r00r00         [24] 6008 	lcall	__gptrput
      001ADA A3               [24] 6009 	inc	dptr
      001ADB 08               [12] 6010 	inc	r0
      001ADC E6               [12] 6011 	mov	a,@r0
      001ADD 12r00r00         [24] 6012 	lcall	__gptrput
      001AE0 A3               [24] 6013 	inc	dptr
      001AE1 08               [12] 6014 	inc	r0
      001AE2 E6               [12] 6015 	mov	a,@r0
      001AE3 12r00r00         [24] 6016 	lcall	__gptrput
      001AE6 A8*00            [24] 6017 	mov	r0,_bp
      001AE8 08               [12] 6018 	inc	r0
      001AE9 86 82            [24] 6019 	mov	dpl,@r0
      001AEB 08               [12] 6020 	inc	r0
      001AEC 86 83            [24] 6021 	mov	dph,@r0
      001AEE 08               [12] 6022 	inc	r0
      001AEF 86 F0            [24] 6023 	mov	b,@r0
      001AF1 12r00r00         [24] 6024 	lcall	__gptrget
      001AF4 FF               [12] 6025 	mov	r7,a
      001AF5 0F               [12] 6026 	inc	r7
      001AF6 A8*00            [24] 6027 	mov	r0,_bp
      001AF8 08               [12] 6028 	inc	r0
      001AF9 86 82            [24] 6029 	mov	dpl,@r0
      001AFB 08               [12] 6030 	inc	r0
      001AFC 86 83            [24] 6031 	mov	dph,@r0
      001AFE 08               [12] 6032 	inc	r0
      001AFF 86 F0            [24] 6033 	mov	b,@r0
      001B01 EF               [12] 6034 	mov	a,r7
      001B02 12r00r00         [24] 6035 	lcall	__gptrput
                           001B05  6036 	C$tasks.c$3144$1_0$304 ==.
                                   6037 ;	tasks.c:3144: prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
      001B05 74 01            [12] 6038 	mov	a,#0x01
      001B07 C0 E0            [24] 6039 	push	acc
      001B09 E5*00            [12] 6040 	mov	a,_bp
      001B0B 24 FA            [12] 6041 	add	a,#0xfa
      001B0D F8               [12] 6042 	mov	r0,a
      001B0E 86 82            [24] 6043 	mov	dpl,@r0
      001B10 08               [12] 6044 	inc	r0
      001B11 86 83            [24] 6045 	mov	dph,@r0
      001B13 12r46rF6         [24] 6046 	lcall	_prvAddCurrentTaskToDelayedList
      001B16 15 81            [12] 6047 	dec	sp
      001B18                       6048 00101$:
                           001B18  6049 	C$tasks.c$3145$1_0$304 ==.
                                   6050 ;	tasks.c:3145: }
      001B18 85*00 81         [24] 6051 	mov	sp,_bp
      001B1B D0*00            [24] 6052 	pop	_bp
                           001B1D  6053 	C$tasks.c$3145$1_0$304 ==.
                           001B1D  6054 	XG$vTaskPlaceOnUnorderedEventList$0$0 ==.
      001B1D 22               [24] 6055 	ret
                                   6056 ;------------------------------------------------------------
                                   6057 ;Allocation info for local variables in function 'xTaskRemoveFromEventList'
                                   6058 ;------------------------------------------------------------
                                   6059 ;pxEventList               Allocated to registers r5 r6 r7 
                                   6060 ;pxUnblockedTCB            Allocated to stack - _bp +20
                                   6061 ;xReturn                   Allocated to registers r7 
                                   6062 ;pxList                    Allocated to stack - _bp +23
                                   6063 ;pxList                    Allocated to registers r7 r6 r5 
                                   6064 ;pxIndex                   Allocated to stack - _bp +23
                                   6065 ;pxIndex                   Allocated to stack - _bp +23
                                   6066 ;sloc0                     Allocated to stack - _bp +4
                                   6067 ;sloc1                     Allocated to stack - _bp +16
                                   6068 ;sloc2                     Allocated to stack - _bp +1
                                   6069 ;sloc3                     Allocated to stack - _bp +10
                                   6070 ;sloc4                     Allocated to stack - _bp +13
                                   6071 ;sloc5                     Allocated to stack - _bp +7
                                   6072 ;sloc6                     Allocated to stack - _bp +19
                                   6073 ;------------------------------------------------------------
                           001B1E  6074 	G$xTaskRemoveFromEventList$0$0 ==.
                           001B1E  6075 	C$tasks.c$3183$1_0$307 ==.
                                   6076 ;	tasks.c:3183: BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
                                   6077 ;	-----------------------------------------
                                   6078 ;	 function xTaskRemoveFromEventList
                                   6079 ;	-----------------------------------------
      001B1E                       6080 _xTaskRemoveFromEventList:
      001B1E C0*00            [24] 6081 	push	_bp
      001B20 85 81*00         [24] 6082 	mov	_bp,sp
      001B23 E5 81            [12] 6083 	mov	a,sp
      001B25 24 19            [12] 6084 	add	a,#0x19
      001B27 F5 81            [12] 6085 	mov	sp,a
      001B29 AD 82            [24] 6086 	mov	r5,dpl
      001B2B AE 83            [24] 6087 	mov	r6,dph
      001B2D AF F0            [24] 6088 	mov	r7,b
                           001B2F  6089 	C$tasks.c$3201$1_0$307 ==.
                                   6090 ;	tasks.c:3201: pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      001B2F 74 04            [12] 6091 	mov	a,#0x04
      001B31 2D               [12] 6092 	add	a,r5
      001B32 FD               [12] 6093 	mov	r5,a
      001B33 74 00            [12] 6094 	mov	a,#0x00
      001B35 3E               [12] 6095 	addc	a,r6
      001B36 FE               [12] 6096 	mov	r6,a
      001B37 74 02            [12] 6097 	mov	a,#0x02
      001B39 2D               [12] 6098 	add	a,r5
      001B3A FD               [12] 6099 	mov	r5,a
      001B3B 74 00            [12] 6100 	mov	a,#0x00
      001B3D 3E               [12] 6101 	addc	a,r6
      001B3E FE               [12] 6102 	mov	r6,a
      001B3F 8D 82            [24] 6103 	mov	dpl,r5
      001B41 8E 83            [24] 6104 	mov	dph,r6
      001B43 8F F0            [24] 6105 	mov	b,r7
      001B45 12r00r00         [24] 6106 	lcall	__gptrget
      001B48 FD               [12] 6107 	mov	r5,a
      001B49 A3               [24] 6108 	inc	dptr
      001B4A 12r00r00         [24] 6109 	lcall	__gptrget
      001B4D FE               [12] 6110 	mov	r6,a
      001B4E A3               [24] 6111 	inc	dptr
      001B4F 12r00r00         [24] 6112 	lcall	__gptrget
      001B52 FF               [12] 6113 	mov	r7,a
      001B53 74 08            [12] 6114 	mov	a,#0x08
      001B55 2D               [12] 6115 	add	a,r5
      001B56 FD               [12] 6116 	mov	r5,a
      001B57 74 00            [12] 6117 	mov	a,#0x00
      001B59 3E               [12] 6118 	addc	a,r6
      001B5A FE               [12] 6119 	mov	r6,a
      001B5B 8D 82            [24] 6120 	mov	dpl,r5
      001B5D 8E 83            [24] 6121 	mov	dph,r6
      001B5F 8F F0            [24] 6122 	mov	b,r7
      001B61 12r00r00         [24] 6123 	lcall	__gptrget
      001B64 FD               [12] 6124 	mov	r5,a
      001B65 A3               [24] 6125 	inc	dptr
      001B66 12r00r00         [24] 6126 	lcall	__gptrget
      001B69 FE               [12] 6127 	mov	r6,a
      001B6A A3               [24] 6128 	inc	dptr
      001B6B 12r00r00         [24] 6129 	lcall	__gptrget
      001B6E FF               [12] 6130 	mov	r7,a
      001B6F E5*00            [12] 6131 	mov	a,_bp
      001B71 24 14            [12] 6132 	add	a,#0x14
      001B73 F8               [12] 6133 	mov	r0,a
      001B74 A6 05            [24] 6134 	mov	@r0,ar5
      001B76 08               [12] 6135 	inc	r0
      001B77 A6 06            [24] 6136 	mov	@r0,ar6
      001B79 08               [12] 6137 	inc	r0
      001B7A A6 07            [24] 6138 	mov	@r0,ar7
                           001B7C  6139 	C$tasks.c$3203$2_0$308 ==.
                                   6140 ;	tasks.c:3203: listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
      001B7C E5*00            [12] 6141 	mov	a,_bp
      001B7E 24 14            [12] 6142 	add	a,#0x14
      001B80 F8               [12] 6143 	mov	r0,a
      001B81 74 11            [12] 6144 	mov	a,#0x11
      001B83 26               [12] 6145 	add	a,@r0
      001B84 FA               [12] 6146 	mov	r2,a
      001B85 74 00            [12] 6147 	mov	a,#0x00
      001B87 08               [12] 6148 	inc	r0
      001B88 36               [12] 6149 	addc	a,@r0
      001B89 FB               [12] 6150 	mov	r3,a
      001B8A 08               [12] 6151 	inc	r0
      001B8B 86 04            [24] 6152 	mov	ar4,@r0
      001B8D E5*00            [12] 6153 	mov	a,_bp
      001B8F 24 14            [12] 6154 	add	a,#0x14
      001B91 F8               [12] 6155 	mov	r0,a
      001B92 74 1C            [12] 6156 	mov	a,#0x1c
      001B94 26               [12] 6157 	add	a,@r0
      001B95 FD               [12] 6158 	mov	r5,a
      001B96 74 00            [12] 6159 	mov	a,#0x00
      001B98 08               [12] 6160 	inc	r0
      001B99 36               [12] 6161 	addc	a,@r0
      001B9A FE               [12] 6162 	mov	r6,a
      001B9B 08               [12] 6163 	inc	r0
      001B9C 86 07            [24] 6164 	mov	ar7,@r0
      001B9E 8D 82            [24] 6165 	mov	dpl,r5
      001BA0 8E 83            [24] 6166 	mov	dph,r6
      001BA2 8F F0            [24] 6167 	mov	b,r7
      001BA4 E5*00            [12] 6168 	mov	a,_bp
      001BA6 24 17            [12] 6169 	add	a,#0x17
      001BA8 F8               [12] 6170 	mov	r0,a
      001BA9 12r00r00         [24] 6171 	lcall	__gptrget
      001BAC F6               [12] 6172 	mov	@r0,a
      001BAD A3               [24] 6173 	inc	dptr
      001BAE 12r00r00         [24] 6174 	lcall	__gptrget
      001BB1 08               [12] 6175 	inc	r0
      001BB2 F6               [12] 6176 	mov	@r0,a
      001BB3 A3               [24] 6177 	inc	dptr
      001BB4 12r00r00         [24] 6178 	lcall	__gptrget
      001BB7 08               [12] 6179 	inc	r0
      001BB8 F6               [12] 6180 	mov	@r0,a
      001BB9 E5*00            [12] 6181 	mov	a,_bp
      001BBB 24 14            [12] 6182 	add	a,#0x14
      001BBD F8               [12] 6183 	mov	r0,a
      001BBE E5*00            [12] 6184 	mov	a,_bp
      001BC0 24 04            [12] 6185 	add	a,#0x04
      001BC2 F9               [12] 6186 	mov	r1,a
      001BC3 74 13            [12] 6187 	mov	a,#0x13
      001BC5 26               [12] 6188 	add	a,@r0
      001BC6 F7               [12] 6189 	mov	@r1,a
      001BC7 74 00            [12] 6190 	mov	a,#0x00
      001BC9 08               [12] 6191 	inc	r0
      001BCA 36               [12] 6192 	addc	a,@r0
      001BCB 09               [12] 6193 	inc	r1
      001BCC F7               [12] 6194 	mov	@r1,a
      001BCD 08               [12] 6195 	inc	r0
      001BCE E6               [12] 6196 	mov	a,@r0
      001BCF 09               [12] 6197 	inc	r1
      001BD0 F7               [12] 6198 	mov	@r1,a
      001BD1 E5*00            [12] 6199 	mov	a,_bp
      001BD3 24 04            [12] 6200 	add	a,#0x04
      001BD5 F8               [12] 6201 	mov	r0,a
      001BD6 86 82            [24] 6202 	mov	dpl,@r0
      001BD8 08               [12] 6203 	inc	r0
      001BD9 86 83            [24] 6204 	mov	dph,@r0
      001BDB 08               [12] 6205 	inc	r0
      001BDC 86 F0            [24] 6206 	mov	b,@r0
      001BDE 12r00r00         [24] 6207 	lcall	__gptrget
      001BE1 FD               [12] 6208 	mov	r5,a
      001BE2 A3               [24] 6209 	inc	dptr
      001BE3 12r00r00         [24] 6210 	lcall	__gptrget
      001BE6 FE               [12] 6211 	mov	r6,a
      001BE7 A3               [24] 6212 	inc	dptr
      001BE8 12r00r00         [24] 6213 	lcall	__gptrget
      001BEB FF               [12] 6214 	mov	r7,a
      001BEC A8*00            [24] 6215 	mov	r0,_bp
      001BEE 08               [12] 6216 	inc	r0
      001BEF 74 05            [12] 6217 	mov	a,#0x05
      001BF1 2D               [12] 6218 	add	a,r5
      001BF2 F6               [12] 6219 	mov	@r0,a
      001BF3 74 00            [12] 6220 	mov	a,#0x00
      001BF5 3E               [12] 6221 	addc	a,r6
      001BF6 08               [12] 6222 	inc	r0
      001BF7 F6               [12] 6223 	mov	@r0,a
      001BF8 08               [12] 6224 	inc	r0
      001BF9 A6 07            [24] 6225 	mov	@r0,ar7
      001BFB E5*00            [12] 6226 	mov	a,_bp
      001BFD 24 14            [12] 6227 	add	a,#0x14
      001BFF F8               [12] 6228 	mov	r0,a
      001C00 E5*00            [12] 6229 	mov	a,_bp
      001C02 24 10            [12] 6230 	add	a,#0x10
      001C04 F9               [12] 6231 	mov	r1,a
      001C05 74 16            [12] 6232 	mov	a,#0x16
      001C07 26               [12] 6233 	add	a,@r0
      001C08 F7               [12] 6234 	mov	@r1,a
      001C09 74 00            [12] 6235 	mov	a,#0x00
      001C0B 08               [12] 6236 	inc	r0
      001C0C 36               [12] 6237 	addc	a,@r0
      001C0D 09               [12] 6238 	inc	r1
      001C0E F7               [12] 6239 	mov	@r1,a
      001C0F 08               [12] 6240 	inc	r0
      001C10 E6               [12] 6241 	mov	a,@r0
      001C11 09               [12] 6242 	inc	r1
      001C12 F7               [12] 6243 	mov	@r1,a
      001C13 E5*00            [12] 6244 	mov	a,_bp
      001C15 24 10            [12] 6245 	add	a,#0x10
      001C17 F8               [12] 6246 	mov	r0,a
      001C18 86 82            [24] 6247 	mov	dpl,@r0
      001C1A 08               [12] 6248 	inc	r0
      001C1B 86 83            [24] 6249 	mov	dph,@r0
      001C1D 08               [12] 6250 	inc	r0
      001C1E 86 F0            [24] 6251 	mov	b,@r0
      001C20 12r00r00         [24] 6252 	lcall	__gptrget
      001C23 FD               [12] 6253 	mov	r5,a
      001C24 A3               [24] 6254 	inc	dptr
      001C25 12r00r00         [24] 6255 	lcall	__gptrget
      001C28 FE               [12] 6256 	mov	r6,a
      001C29 A3               [24] 6257 	inc	dptr
      001C2A 12r00r00         [24] 6258 	lcall	__gptrget
      001C2D FF               [12] 6259 	mov	r7,a
      001C2E A8*00            [24] 6260 	mov	r0,_bp
      001C30 08               [12] 6261 	inc	r0
      001C31 86 82            [24] 6262 	mov	dpl,@r0
      001C33 08               [12] 6263 	inc	r0
      001C34 86 83            [24] 6264 	mov	dph,@r0
      001C36 08               [12] 6265 	inc	r0
      001C37 86 F0            [24] 6266 	mov	b,@r0
      001C39 ED               [12] 6267 	mov	a,r5
      001C3A 12r00r00         [24] 6268 	lcall	__gptrput
      001C3D A3               [24] 6269 	inc	dptr
      001C3E EE               [12] 6270 	mov	a,r6
      001C3F 12r00r00         [24] 6271 	lcall	__gptrput
      001C42 A3               [24] 6272 	inc	dptr
      001C43 EF               [12] 6273 	mov	a,r7
      001C44 12r00r00         [24] 6274 	lcall	__gptrput
      001C47 E5*00            [12] 6275 	mov	a,_bp
      001C49 24 10            [12] 6276 	add	a,#0x10
      001C4B F8               [12] 6277 	mov	r0,a
      001C4C 86 82            [24] 6278 	mov	dpl,@r0
      001C4E 08               [12] 6279 	inc	r0
      001C4F 86 83            [24] 6280 	mov	dph,@r0
      001C51 08               [12] 6281 	inc	r0
      001C52 86 F0            [24] 6282 	mov	b,@r0
      001C54 12r00r00         [24] 6283 	lcall	__gptrget
      001C57 FD               [12] 6284 	mov	r5,a
      001C58 A3               [24] 6285 	inc	dptr
      001C59 12r00r00         [24] 6286 	lcall	__gptrget
      001C5C FE               [12] 6287 	mov	r6,a
      001C5D A3               [24] 6288 	inc	dptr
      001C5E 12r00r00         [24] 6289 	lcall	__gptrget
      001C61 FF               [12] 6290 	mov	r7,a
      001C62 A8*00            [24] 6291 	mov	r0,_bp
      001C64 08               [12] 6292 	inc	r0
      001C65 74 02            [12] 6293 	mov	a,#0x02
      001C67 2D               [12] 6294 	add	a,r5
      001C68 F6               [12] 6295 	mov	@r0,a
      001C69 74 00            [12] 6296 	mov	a,#0x00
      001C6B 3E               [12] 6297 	addc	a,r6
      001C6C 08               [12] 6298 	inc	r0
      001C6D F6               [12] 6299 	mov	@r0,a
      001C6E 08               [12] 6300 	inc	r0
      001C6F A6 07            [24] 6301 	mov	@r0,ar7
      001C71 E5*00            [12] 6302 	mov	a,_bp
      001C73 24 04            [12] 6303 	add	a,#0x04
      001C75 F8               [12] 6304 	mov	r0,a
      001C76 86 82            [24] 6305 	mov	dpl,@r0
      001C78 08               [12] 6306 	inc	r0
      001C79 86 83            [24] 6307 	mov	dph,@r0
      001C7B 08               [12] 6308 	inc	r0
      001C7C 86 F0            [24] 6309 	mov	b,@r0
      001C7E 12r00r00         [24] 6310 	lcall	__gptrget
      001C81 FD               [12] 6311 	mov	r5,a
      001C82 A3               [24] 6312 	inc	dptr
      001C83 12r00r00         [24] 6313 	lcall	__gptrget
      001C86 FE               [12] 6314 	mov	r6,a
      001C87 A3               [24] 6315 	inc	dptr
      001C88 12r00r00         [24] 6316 	lcall	__gptrget
      001C8B FF               [12] 6317 	mov	r7,a
      001C8C A8*00            [24] 6318 	mov	r0,_bp
      001C8E 08               [12] 6319 	inc	r0
      001C8F 86 82            [24] 6320 	mov	dpl,@r0
      001C91 08               [12] 6321 	inc	r0
      001C92 86 83            [24] 6322 	mov	dph,@r0
      001C94 08               [12] 6323 	inc	r0
      001C95 86 F0            [24] 6324 	mov	b,@r0
      001C97 ED               [12] 6325 	mov	a,r5
      001C98 12r00r00         [24] 6326 	lcall	__gptrput
      001C9B A3               [24] 6327 	inc	dptr
      001C9C EE               [12] 6328 	mov	a,r6
      001C9D 12r00r00         [24] 6329 	lcall	__gptrput
      001CA0 A3               [24] 6330 	inc	dptr
      001CA1 EF               [12] 6331 	mov	a,r7
      001CA2 12r00r00         [24] 6332 	lcall	__gptrput
      001CA5 E5*00            [12] 6333 	mov	a,_bp
      001CA7 24 17            [12] 6334 	add	a,#0x17
      001CA9 F8               [12] 6335 	mov	r0,a
      001CAA A9*00            [24] 6336 	mov	r1,_bp
      001CAC 09               [12] 6337 	inc	r1
      001CAD 74 01            [12] 6338 	mov	a,#0x01
      001CAF 26               [12] 6339 	add	a,@r0
      001CB0 F7               [12] 6340 	mov	@r1,a
      001CB1 74 00            [12] 6341 	mov	a,#0x00
      001CB3 08               [12] 6342 	inc	r0
      001CB4 36               [12] 6343 	addc	a,@r0
      001CB5 09               [12] 6344 	inc	r1
      001CB6 F7               [12] 6345 	mov	@r1,a
      001CB7 08               [12] 6346 	inc	r0
      001CB8 E6               [12] 6347 	mov	a,@r0
      001CB9 09               [12] 6348 	inc	r1
      001CBA F7               [12] 6349 	mov	@r1,a
      001CBB A8*00            [24] 6350 	mov	r0,_bp
      001CBD 08               [12] 6351 	inc	r0
      001CBE 86 82            [24] 6352 	mov	dpl,@r0
      001CC0 08               [12] 6353 	inc	r0
      001CC1 86 83            [24] 6354 	mov	dph,@r0
      001CC3 08               [12] 6355 	inc	r0
      001CC4 86 F0            [24] 6356 	mov	b,@r0
      001CC6 12r00r00         [24] 6357 	lcall	__gptrget
      001CC9 FD               [12] 6358 	mov	r5,a
      001CCA A3               [24] 6359 	inc	dptr
      001CCB 12r00r00         [24] 6360 	lcall	__gptrget
      001CCE FE               [12] 6361 	mov	r6,a
      001CCF A3               [24] 6362 	inc	dptr
      001CD0 12r00r00         [24] 6363 	lcall	__gptrget
      001CD3 FF               [12] 6364 	mov	r7,a
      001CD4 C0 02            [24] 6365 	push	ar2
      001CD6 C0 03            [24] 6366 	push	ar3
      001CD8 C0 04            [24] 6367 	push	ar4
      001CDA 8D 82            [24] 6368 	mov	dpl,r5
      001CDC 8E 83            [24] 6369 	mov	dph,r6
      001CDE 8F F0            [24] 6370 	mov	b,r7
      001CE0 12r00r00         [24] 6371 	lcall	___gptr_cmp
      001CE3 15 81            [12] 6372 	dec	sp
      001CE5 15 81            [12] 6373 	dec	sp
      001CE7 15 81            [12] 6374 	dec	sp
      001CE9 70 02            [24] 6375 	jnz	00135$
      001CEB 80 03            [24] 6376 	sjmp	00136$
      001CED                       6377 00135$:
      001CED 02r1Dr24         [24] 6378 	ljmp	00102$
      001CF0                       6379 00136$:
      001CF0 E5*00            [12] 6380 	mov	a,_bp
      001CF2 24 10            [12] 6381 	add	a,#0x10
      001CF4 F8               [12] 6382 	mov	r0,a
      001CF5 86 82            [24] 6383 	mov	dpl,@r0
      001CF7 08               [12] 6384 	inc	r0
      001CF8 86 83            [24] 6385 	mov	dph,@r0
      001CFA 08               [12] 6386 	inc	r0
      001CFB 86 F0            [24] 6387 	mov	b,@r0
      001CFD 12r00r00         [24] 6388 	lcall	__gptrget
      001D00 FD               [12] 6389 	mov	r5,a
      001D01 A3               [24] 6390 	inc	dptr
      001D02 12r00r00         [24] 6391 	lcall	__gptrget
      001D05 FE               [12] 6392 	mov	r6,a
      001D06 A3               [24] 6393 	inc	dptr
      001D07 12r00r00         [24] 6394 	lcall	__gptrget
      001D0A FF               [12] 6395 	mov	r7,a
      001D0B A8*00            [24] 6396 	mov	r0,_bp
      001D0D 08               [12] 6397 	inc	r0
      001D0E 86 82            [24] 6398 	mov	dpl,@r0
      001D10 08               [12] 6399 	inc	r0
      001D11 86 83            [24] 6400 	mov	dph,@r0
      001D13 08               [12] 6401 	inc	r0
      001D14 86 F0            [24] 6402 	mov	b,@r0
      001D16 ED               [12] 6403 	mov	a,r5
      001D17 12r00r00         [24] 6404 	lcall	__gptrput
      001D1A A3               [24] 6405 	inc	dptr
      001D1B EE               [12] 6406 	mov	a,r6
      001D1C 12r00r00         [24] 6407 	lcall	__gptrput
      001D1F A3               [24] 6408 	inc	dptr
      001D20 EF               [12] 6409 	mov	a,r7
      001D21 12r00r00         [24] 6410 	lcall	__gptrput
      001D24                       6411 00102$:
      001D24 E5*00            [12] 6412 	mov	a,_bp
      001D26 24 07            [12] 6413 	add	a,#0x07
      001D28 F8               [12] 6414 	mov	r0,a
      001D29 74 0B            [12] 6415 	mov	a,#0x0b
      001D2B 2A               [12] 6416 	add	a,r2
      001D2C F6               [12] 6417 	mov	@r0,a
      001D2D 74 00            [12] 6418 	mov	a,#0x00
      001D2F 3B               [12] 6419 	addc	a,r3
      001D30 08               [12] 6420 	inc	r0
      001D31 F6               [12] 6421 	mov	@r0,a
      001D32 08               [12] 6422 	inc	r0
      001D33 A6 04            [24] 6423 	mov	@r0,ar4
      001D35 E5*00            [12] 6424 	mov	a,_bp
      001D37 24 07            [12] 6425 	add	a,#0x07
      001D39 F8               [12] 6426 	mov	r0,a
      001D3A 86 82            [24] 6427 	mov	dpl,@r0
      001D3C 08               [12] 6428 	inc	r0
      001D3D 86 83            [24] 6429 	mov	dph,@r0
      001D3F 08               [12] 6430 	inc	r0
      001D40 86 F0            [24] 6431 	mov	b,@r0
      001D42 74 00            [12] 6432 	mov	a,#0x00
      001D44 12r00r00         [24] 6433 	lcall	__gptrput
      001D47 A3               [24] 6434 	inc	dptr
      001D48 12r00r00         [24] 6435 	lcall	__gptrput
      001D4B A3               [24] 6436 	inc	dptr
      001D4C 12r00r00         [24] 6437 	lcall	__gptrput
      001D4F C0 02            [24] 6438 	push	ar2
      001D51 C0 03            [24] 6439 	push	ar3
      001D53 C0 04            [24] 6440 	push	ar4
      001D55 E5*00            [12] 6441 	mov	a,_bp
      001D57 24 17            [12] 6442 	add	a,#0x17
      001D59 F8               [12] 6443 	mov	r0,a
      001D5A 86 82            [24] 6444 	mov	dpl,@r0
      001D5C 08               [12] 6445 	inc	r0
      001D5D 86 83            [24] 6446 	mov	dph,@r0
      001D5F 08               [12] 6447 	inc	r0
      001D60 86 F0            [24] 6448 	mov	b,@r0
      001D62 12r00r00         [24] 6449 	lcall	__gptrget
      001D65 FC               [12] 6450 	mov	r4,a
      001D66 1C               [12] 6451 	dec	r4
      001D67 E5*00            [12] 6452 	mov	a,_bp
      001D69 24 17            [12] 6453 	add	a,#0x17
      001D6B F8               [12] 6454 	mov	r0,a
      001D6C 86 82            [24] 6455 	mov	dpl,@r0
      001D6E 08               [12] 6456 	inc	r0
      001D6F 86 83            [24] 6457 	mov	dph,@r0
      001D71 08               [12] 6458 	inc	r0
      001D72 86 F0            [24] 6459 	mov	b,@r0
      001D74 EC               [12] 6460 	mov	a,r4
      001D75 12r00r00         [24] 6461 	lcall	__gptrput
                           001D78  6462 	C$tasks.c$3205$1_0$307 ==.
                                   6463 ;	tasks.c:3205: if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
      001D78 90r00r13         [24] 6464 	mov	dptr,#_uxSchedulerSuspended
      001D7B E0               [24] 6465 	movx	a,@dptr
      001D7C D0 04            [24] 6466 	pop	ar4
      001D7E D0 03            [24] 6467 	pop	ar3
      001D80 D0 02            [24] 6468 	pop	ar2
      001D82 60 03            [24] 6469 	jz	00137$
      001D84 02r21r74         [24] 6470 	ljmp	00108$
      001D87                       6471 00137$:
                           001D87  6472 	C$tasks.c$3207$3_0$311 ==.
                                   6473 ;	tasks.c:3207: listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
      001D87 E5*00            [12] 6474 	mov	a,_bp
      001D89 24 14            [12] 6475 	add	a,#0x14
      001D8B F8               [12] 6476 	mov	r0,a
      001D8C 74 03            [12] 6477 	mov	a,#0x03
      001D8E 26               [12] 6478 	add	a,@r0
      001D8F FC               [12] 6479 	mov	r4,a
      001D90 74 00            [12] 6480 	mov	a,#0x00
      001D92 08               [12] 6481 	inc	r0
      001D93 36               [12] 6482 	addc	a,@r0
      001D94 FB               [12] 6483 	mov	r3,a
      001D95 08               [12] 6484 	inc	r0
      001D96 86 02            [24] 6485 	mov	ar2,@r0
      001D98 E5*00            [12] 6486 	mov	a,_bp
      001D9A 24 10            [12] 6487 	add	a,#0x10
      001D9C F8               [12] 6488 	mov	r0,a
      001D9D 74 0B            [12] 6489 	mov	a,#0x0b
      001D9F 2C               [12] 6490 	add	a,r4
      001DA0 F6               [12] 6491 	mov	@r0,a
      001DA1 74 00            [12] 6492 	mov	a,#0x00
      001DA3 3B               [12] 6493 	addc	a,r3
      001DA4 08               [12] 6494 	inc	r0
      001DA5 F6               [12] 6495 	mov	@r0,a
      001DA6 08               [12] 6496 	inc	r0
      001DA7 A6 02            [24] 6497 	mov	@r0,ar2
      001DA9 E5*00            [12] 6498 	mov	a,_bp
      001DAB 24 10            [12] 6499 	add	a,#0x10
      001DAD F8               [12] 6500 	mov	r0,a
      001DAE 86 82            [24] 6501 	mov	dpl,@r0
      001DB0 08               [12] 6502 	inc	r0
      001DB1 86 83            [24] 6503 	mov	dph,@r0
      001DB3 08               [12] 6504 	inc	r0
      001DB4 86 F0            [24] 6505 	mov	b,@r0
      001DB6 12r00r00         [24] 6506 	lcall	__gptrget
      001DB9 FF               [12] 6507 	mov	r7,a
      001DBA A3               [24] 6508 	inc	dptr
      001DBB 12r00r00         [24] 6509 	lcall	__gptrget
      001DBE FE               [12] 6510 	mov	r6,a
      001DBF A3               [24] 6511 	inc	dptr
      001DC0 12r00r00         [24] 6512 	lcall	__gptrget
      001DC3 FD               [12] 6513 	mov	r5,a
      001DC4 E5*00            [12] 6514 	mov	a,_bp
      001DC6 24 04            [12] 6515 	add	a,#0x04
      001DC8 F8               [12] 6516 	mov	r0,a
      001DC9 74 02            [12] 6517 	mov	a,#0x02
      001DCB 2C               [12] 6518 	add	a,r4
      001DCC F6               [12] 6519 	mov	@r0,a
      001DCD 74 00            [12] 6520 	mov	a,#0x00
      001DCF 3B               [12] 6521 	addc	a,r3
      001DD0 08               [12] 6522 	inc	r0
      001DD1 F6               [12] 6523 	mov	@r0,a
      001DD2 08               [12] 6524 	inc	r0
      001DD3 A6 02            [24] 6525 	mov	@r0,ar2
      001DD5 E5*00            [12] 6526 	mov	a,_bp
      001DD7 24 04            [12] 6527 	add	a,#0x04
      001DD9 F8               [12] 6528 	mov	r0,a
      001DDA 86 82            [24] 6529 	mov	dpl,@r0
      001DDC 08               [12] 6530 	inc	r0
      001DDD 86 83            [24] 6531 	mov	dph,@r0
      001DDF 08               [12] 6532 	inc	r0
      001DE0 86 F0            [24] 6533 	mov	b,@r0
      001DE2 E5*00            [12] 6534 	mov	a,_bp
      001DE4 24 0A            [12] 6535 	add	a,#0x0a
      001DE6 F9               [12] 6536 	mov	r1,a
      001DE7 12r00r00         [24] 6537 	lcall	__gptrget
      001DEA F7               [12] 6538 	mov	@r1,a
      001DEB A3               [24] 6539 	inc	dptr
      001DEC 12r00r00         [24] 6540 	lcall	__gptrget
      001DEF 09               [12] 6541 	inc	r1
      001DF0 F7               [12] 6542 	mov	@r1,a
      001DF1 A3               [24] 6543 	inc	dptr
      001DF2 12r00r00         [24] 6544 	lcall	__gptrget
      001DF5 09               [12] 6545 	inc	r1
      001DF6 F7               [12] 6546 	mov	@r1,a
      001DF7 E5*00            [12] 6547 	mov	a,_bp
      001DF9 24 0A            [12] 6548 	add	a,#0x0a
      001DFB F8               [12] 6549 	mov	r0,a
      001DFC 74 05            [12] 6550 	mov	a,#0x05
      001DFE 26               [12] 6551 	add	a,@r0
      001DFF F6               [12] 6552 	mov	@r0,a
      001E00 74 00            [12] 6553 	mov	a,#0x00
      001E02 08               [12] 6554 	inc	r0
      001E03 36               [12] 6555 	addc	a,@r0
      001E04 F6               [12] 6556 	mov	@r0,a
      001E05 E5*00            [12] 6557 	mov	a,_bp
      001E07 24 0D            [12] 6558 	add	a,#0x0d
      001E09 F8               [12] 6559 	mov	r0,a
      001E0A 74 05            [12] 6560 	mov	a,#0x05
      001E0C 2C               [12] 6561 	add	a,r4
      001E0D F6               [12] 6562 	mov	@r0,a
      001E0E 74 00            [12] 6563 	mov	a,#0x00
      001E10 3B               [12] 6564 	addc	a,r3
      001E11 08               [12] 6565 	inc	r0
      001E12 F6               [12] 6566 	mov	@r0,a
      001E13 08               [12] 6567 	inc	r0
      001E14 A6 02            [24] 6568 	mov	@r0,ar2
      001E16 E5*00            [12] 6569 	mov	a,_bp
      001E18 24 0D            [12] 6570 	add	a,#0x0d
      001E1A F8               [12] 6571 	mov	r0,a
      001E1B 86 82            [24] 6572 	mov	dpl,@r0
      001E1D 08               [12] 6573 	inc	r0
      001E1E 86 83            [24] 6574 	mov	dph,@r0
      001E20 08               [12] 6575 	inc	r0
      001E21 86 F0            [24] 6576 	mov	b,@r0
      001E23 E5*00            [12] 6577 	mov	a,_bp
      001E25 24 07            [12] 6578 	add	a,#0x07
      001E27 F9               [12] 6579 	mov	r1,a
      001E28 12r00r00         [24] 6580 	lcall	__gptrget
      001E2B F7               [12] 6581 	mov	@r1,a
      001E2C A3               [24] 6582 	inc	dptr
      001E2D 12r00r00         [24] 6583 	lcall	__gptrget
      001E30 09               [12] 6584 	inc	r1
      001E31 F7               [12] 6585 	mov	@r1,a
      001E32 A3               [24] 6586 	inc	dptr
      001E33 12r00r00         [24] 6587 	lcall	__gptrget
      001E36 09               [12] 6588 	inc	r1
      001E37 F7               [12] 6589 	mov	@r1,a
      001E38 E5*00            [12] 6590 	mov	a,_bp
      001E3A 24 0A            [12] 6591 	add	a,#0x0a
      001E3C F8               [12] 6592 	mov	r0,a
      001E3D 86 82            [24] 6593 	mov	dpl,@r0
      001E3F 08               [12] 6594 	inc	r0
      001E40 86 83            [24] 6595 	mov	dph,@r0
      001E42 08               [12] 6596 	inc	r0
      001E43 86 F0            [24] 6597 	mov	b,@r0
      001E45 E5*00            [12] 6598 	mov	a,_bp
      001E47 24 07            [12] 6599 	add	a,#0x07
      001E49 F9               [12] 6600 	mov	r1,a
      001E4A E7               [12] 6601 	mov	a,@r1
      001E4B 12r00r00         [24] 6602 	lcall	__gptrput
      001E4E A3               [24] 6603 	inc	dptr
      001E4F 09               [12] 6604 	inc	r1
      001E50 E7               [12] 6605 	mov	a,@r1
      001E51 12r00r00         [24] 6606 	lcall	__gptrput
      001E54 A3               [24] 6607 	inc	dptr
      001E55 09               [12] 6608 	inc	r1
      001E56 E7               [12] 6609 	mov	a,@r1
      001E57 12r00r00         [24] 6610 	lcall	__gptrput
      001E5A E5*00            [12] 6611 	mov	a,_bp
      001E5C 24 0D            [12] 6612 	add	a,#0x0d
      001E5E F8               [12] 6613 	mov	r0,a
      001E5F 86 82            [24] 6614 	mov	dpl,@r0
      001E61 08               [12] 6615 	inc	r0
      001E62 86 83            [24] 6616 	mov	dph,@r0
      001E64 08               [12] 6617 	inc	r0
      001E65 86 F0            [24] 6618 	mov	b,@r0
      001E67 E5*00            [12] 6619 	mov	a,_bp
      001E69 24 07            [12] 6620 	add	a,#0x07
      001E6B F9               [12] 6621 	mov	r1,a
      001E6C 12r00r00         [24] 6622 	lcall	__gptrget
      001E6F F7               [12] 6623 	mov	@r1,a
      001E70 A3               [24] 6624 	inc	dptr
      001E71 12r00r00         [24] 6625 	lcall	__gptrget
      001E74 09               [12] 6626 	inc	r1
      001E75 F7               [12] 6627 	mov	@r1,a
      001E76 A3               [24] 6628 	inc	dptr
      001E77 12r00r00         [24] 6629 	lcall	__gptrget
      001E7A 09               [12] 6630 	inc	r1
      001E7B F7               [12] 6631 	mov	@r1,a
      001E7C E5*00            [12] 6632 	mov	a,_bp
      001E7E 24 07            [12] 6633 	add	a,#0x07
      001E80 F8               [12] 6634 	mov	r0,a
      001E81 74 02            [12] 6635 	mov	a,#0x02
      001E83 26               [12] 6636 	add	a,@r0
      001E84 F6               [12] 6637 	mov	@r0,a
      001E85 74 00            [12] 6638 	mov	a,#0x00
      001E87 08               [12] 6639 	inc	r0
      001E88 36               [12] 6640 	addc	a,@r0
      001E89 F6               [12] 6641 	mov	@r0,a
      001E8A E5*00            [12] 6642 	mov	a,_bp
      001E8C 24 04            [12] 6643 	add	a,#0x04
      001E8E F8               [12] 6644 	mov	r0,a
      001E8F 86 82            [24] 6645 	mov	dpl,@r0
      001E91 08               [12] 6646 	inc	r0
      001E92 86 83            [24] 6647 	mov	dph,@r0
      001E94 08               [12] 6648 	inc	r0
      001E95 86 F0            [24] 6649 	mov	b,@r0
      001E97 E5*00            [12] 6650 	mov	a,_bp
      001E99 24 0A            [12] 6651 	add	a,#0x0a
      001E9B F9               [12] 6652 	mov	r1,a
      001E9C 12r00r00         [24] 6653 	lcall	__gptrget
      001E9F F7               [12] 6654 	mov	@r1,a
      001EA0 A3               [24] 6655 	inc	dptr
      001EA1 12r00r00         [24] 6656 	lcall	__gptrget
      001EA4 09               [12] 6657 	inc	r1
      001EA5 F7               [12] 6658 	mov	@r1,a
      001EA6 A3               [24] 6659 	inc	dptr
      001EA7 12r00r00         [24] 6660 	lcall	__gptrget
      001EAA 09               [12] 6661 	inc	r1
      001EAB F7               [12] 6662 	mov	@r1,a
      001EAC E5*00            [12] 6663 	mov	a,_bp
      001EAE 24 07            [12] 6664 	add	a,#0x07
      001EB0 F8               [12] 6665 	mov	r0,a
      001EB1 86 82            [24] 6666 	mov	dpl,@r0
      001EB3 08               [12] 6667 	inc	r0
      001EB4 86 83            [24] 6668 	mov	dph,@r0
      001EB6 08               [12] 6669 	inc	r0
      001EB7 86 F0            [24] 6670 	mov	b,@r0
      001EB9 E5*00            [12] 6671 	mov	a,_bp
      001EBB 24 0A            [12] 6672 	add	a,#0x0a
      001EBD F9               [12] 6673 	mov	r1,a
      001EBE E7               [12] 6674 	mov	a,@r1
      001EBF 12r00r00         [24] 6675 	lcall	__gptrput
      001EC2 A3               [24] 6676 	inc	dptr
      001EC3 09               [12] 6677 	inc	r1
      001EC4 E7               [12] 6678 	mov	a,@r1
      001EC5 12r00r00         [24] 6679 	lcall	__gptrput
      001EC8 A3               [24] 6680 	inc	dptr
      001EC9 09               [12] 6681 	inc	r1
      001ECA E7               [12] 6682 	mov	a,@r1
      001ECB 12r00r00         [24] 6683 	lcall	__gptrput
      001ECE E5*00            [12] 6684 	mov	a,_bp
      001ED0 24 07            [12] 6685 	add	a,#0x07
      001ED2 F8               [12] 6686 	mov	r0,a
      001ED3 74 01            [12] 6687 	mov	a,#0x01
      001ED5 2F               [12] 6688 	add	a,r7
      001ED6 F6               [12] 6689 	mov	@r0,a
      001ED7 74 00            [12] 6690 	mov	a,#0x00
      001ED9 3E               [12] 6691 	addc	a,r6
      001EDA 08               [12] 6692 	inc	r0
      001EDB F6               [12] 6693 	mov	@r0,a
      001EDC 08               [12] 6694 	inc	r0
      001EDD A6 05            [24] 6695 	mov	@r0,ar5
      001EDF E5*00            [12] 6696 	mov	a,_bp
      001EE1 24 07            [12] 6697 	add	a,#0x07
      001EE3 F8               [12] 6698 	mov	r0,a
      001EE4 86 82            [24] 6699 	mov	dpl,@r0
      001EE6 08               [12] 6700 	inc	r0
      001EE7 86 83            [24] 6701 	mov	dph,@r0
      001EE9 08               [12] 6702 	inc	r0
      001EEA 86 F0            [24] 6703 	mov	b,@r0
      001EEC E5*00            [12] 6704 	mov	a,_bp
      001EEE 24 0A            [12] 6705 	add	a,#0x0a
      001EF0 F9               [12] 6706 	mov	r1,a
      001EF1 12r00r00         [24] 6707 	lcall	__gptrget
      001EF4 F7               [12] 6708 	mov	@r1,a
      001EF5 A3               [24] 6709 	inc	dptr
      001EF6 12r00r00         [24] 6710 	lcall	__gptrget
      001EF9 09               [12] 6711 	inc	r1
      001EFA F7               [12] 6712 	mov	@r1,a
      001EFB A3               [24] 6713 	inc	dptr
      001EFC 12r00r00         [24] 6714 	lcall	__gptrget
      001EFF 09               [12] 6715 	inc	r1
      001F00 F7               [12] 6716 	mov	@r1,a
      001F01 E5*00            [12] 6717 	mov	a,_bp
      001F03 24 0A            [12] 6718 	add	a,#0x0a
      001F05 F8               [12] 6719 	mov	r0,a
      001F06 C0 04            [24] 6720 	push	ar4
      001F08 C0 03            [24] 6721 	push	ar3
      001F0A C0 02            [24] 6722 	push	ar2
      001F0C 86 82            [24] 6723 	mov	dpl,@r0
      001F0E 08               [12] 6724 	inc	r0
      001F0F 86 83            [24] 6725 	mov	dph,@r0
      001F11 08               [12] 6726 	inc	r0
      001F12 86 F0            [24] 6727 	mov	b,@r0
      001F14 12r00r00         [24] 6728 	lcall	___gptr_cmp
      001F17 15 81            [12] 6729 	dec	sp
      001F19 15 81            [12] 6730 	dec	sp
      001F1B 15 81            [12] 6731 	dec	sp
      001F1D 70 02            [24] 6732 	jnz	00138$
      001F1F 80 03            [24] 6733 	sjmp	00139$
      001F21                       6734 00138$:
      001F21 02r1Fr68         [24] 6735 	ljmp	00104$
      001F24                       6736 00139$:
      001F24 E5*00            [12] 6737 	mov	a,_bp
      001F26 24 0D            [12] 6738 	add	a,#0x0d
      001F28 F8               [12] 6739 	mov	r0,a
      001F29 86 82            [24] 6740 	mov	dpl,@r0
      001F2B 08               [12] 6741 	inc	r0
      001F2C 86 83            [24] 6742 	mov	dph,@r0
      001F2E 08               [12] 6743 	inc	r0
      001F2F 86 F0            [24] 6744 	mov	b,@r0
      001F31 E5*00            [12] 6745 	mov	a,_bp
      001F33 24 0A            [12] 6746 	add	a,#0x0a
      001F35 F9               [12] 6747 	mov	r1,a
      001F36 12r00r00         [24] 6748 	lcall	__gptrget
      001F39 F7               [12] 6749 	mov	@r1,a
      001F3A A3               [24] 6750 	inc	dptr
      001F3B 12r00r00         [24] 6751 	lcall	__gptrget
      001F3E 09               [12] 6752 	inc	r1
      001F3F F7               [12] 6753 	mov	@r1,a
      001F40 A3               [24] 6754 	inc	dptr
      001F41 12r00r00         [24] 6755 	lcall	__gptrget
      001F44 09               [12] 6756 	inc	r1
      001F45 F7               [12] 6757 	mov	@r1,a
      001F46 E5*00            [12] 6758 	mov	a,_bp
      001F48 24 07            [12] 6759 	add	a,#0x07
      001F4A F8               [12] 6760 	mov	r0,a
      001F4B 86 82            [24] 6761 	mov	dpl,@r0
      001F4D 08               [12] 6762 	inc	r0
      001F4E 86 83            [24] 6763 	mov	dph,@r0
      001F50 08               [12] 6764 	inc	r0
      001F51 86 F0            [24] 6765 	mov	b,@r0
      001F53 E5*00            [12] 6766 	mov	a,_bp
      001F55 24 0A            [12] 6767 	add	a,#0x0a
      001F57 F9               [12] 6768 	mov	r1,a
      001F58 E7               [12] 6769 	mov	a,@r1
      001F59 12r00r00         [24] 6770 	lcall	__gptrput
      001F5C A3               [24] 6771 	inc	dptr
      001F5D 09               [12] 6772 	inc	r1
      001F5E E7               [12] 6773 	mov	a,@r1
      001F5F 12r00r00         [24] 6774 	lcall	__gptrput
      001F62 A3               [24] 6775 	inc	dptr
      001F63 09               [12] 6776 	inc	r1
      001F64 E7               [12] 6777 	mov	a,@r1
      001F65 12r00r00         [24] 6778 	lcall	__gptrput
      001F68                       6779 00104$:
      001F68 E5*00            [12] 6780 	mov	a,_bp
      001F6A 24 10            [12] 6781 	add	a,#0x10
      001F6C F8               [12] 6782 	mov	r0,a
      001F6D 86 82            [24] 6783 	mov	dpl,@r0
      001F6F 08               [12] 6784 	inc	r0
      001F70 86 83            [24] 6785 	mov	dph,@r0
      001F72 08               [12] 6786 	inc	r0
      001F73 86 F0            [24] 6787 	mov	b,@r0
      001F75 74 00            [12] 6788 	mov	a,#0x00
      001F77 12r00r00         [24] 6789 	lcall	__gptrput
      001F7A A3               [24] 6790 	inc	dptr
      001F7B 12r00r00         [24] 6791 	lcall	__gptrput
      001F7E A3               [24] 6792 	inc	dptr
      001F7F 12r00r00         [24] 6793 	lcall	__gptrput
      001F82 8F 82            [24] 6794 	mov	dpl,r7
      001F84 8E 83            [24] 6795 	mov	dph,r6
      001F86 8D F0            [24] 6796 	mov	b,r5
      001F88 E5*00            [12] 6797 	mov	a,_bp
      001F8A 24 07            [12] 6798 	add	a,#0x07
      001F8C F8               [12] 6799 	mov	r0,a
      001F8D 12r00r00         [24] 6800 	lcall	__gptrget
      001F90 F6               [12] 6801 	mov	@r0,a
      001F91 E5*00            [12] 6802 	mov	a,_bp
      001F93 24 07            [12] 6803 	add	a,#0x07
      001F95 F8               [12] 6804 	mov	r0,a
      001F96 E5*00            [12] 6805 	mov	a,_bp
      001F98 24 07            [12] 6806 	add	a,#0x07
      001F9A F9               [12] 6807 	mov	r1,a
      001F9B E6               [12] 6808 	mov	a,@r0
      001F9C 14               [12] 6809 	dec	a
      001F9D F7               [12] 6810 	mov	@r1,a
      001F9E 8F 82            [24] 6811 	mov	dpl,r7
      001FA0 8E 83            [24] 6812 	mov	dph,r6
      001FA2 8D F0            [24] 6813 	mov	b,r5
      001FA4 E5*00            [12] 6814 	mov	a,_bp
      001FA6 24 07            [12] 6815 	add	a,#0x07
      001FA8 F8               [12] 6816 	mov	r0,a
      001FA9 E6               [12] 6817 	mov	a,@r0
      001FAA 12r00r00         [24] 6818 	lcall	__gptrput
                           001FAD  6819 	C$tasks.c$3208$3_0$313 ==.
                                   6820 ;	tasks.c:3208: prvAddTaskToReadyList( pxUnblockedTCB );
      001FAD E5*00            [12] 6821 	mov	a,_bp
      001FAF 24 14            [12] 6822 	add	a,#0x14
      001FB1 F8               [12] 6823 	mov	r0,a
      001FB2 74 1F            [12] 6824 	mov	a,#0x1f
      001FB4 26               [12] 6825 	add	a,@r0
      001FB5 FF               [12] 6826 	mov	r7,a
      001FB6 74 00            [12] 6827 	mov	a,#0x00
      001FB8 08               [12] 6828 	inc	r0
      001FB9 36               [12] 6829 	addc	a,@r0
      001FBA FE               [12] 6830 	mov	r6,a
      001FBB 08               [12] 6831 	inc	r0
      001FBC 86 05            [24] 6832 	mov	ar5,@r0
      001FBE 8F 82            [24] 6833 	mov	dpl,r7
      001FC0 8E 83            [24] 6834 	mov	dph,r6
      001FC2 8D F0            [24] 6835 	mov	b,r5
      001FC4 E5*00            [12] 6836 	mov	a,_bp
      001FC6 24 0A            [12] 6837 	add	a,#0x0a
      001FC8 F8               [12] 6838 	mov	r0,a
      001FC9 12r00r00         [24] 6839 	lcall	__gptrget
      001FCC F6               [12] 6840 	mov	@r0,a
      001FCD 90r00r07         [24] 6841 	mov	dptr,#_uxTopReadyPriority
      001FD0 E5*00            [12] 6842 	mov	a,_bp
      001FD2 24 13            [12] 6843 	add	a,#0x13
      001FD4 F8               [12] 6844 	mov	r0,a
      001FD5 E0               [24] 6845 	movx	a,@dptr
      001FD6 F6               [12] 6846 	mov	@r0,a
      001FD7 E5*00            [12] 6847 	mov	a,_bp
      001FD9 24 0A            [12] 6848 	add	a,#0x0a
      001FDB F8               [12] 6849 	mov	r0,a
      001FDC E5*00            [12] 6850 	mov	a,_bp
      001FDE 24 13            [12] 6851 	add	a,#0x13
      001FE0 F9               [12] 6852 	mov	r1,a
      001FE1 C3               [12] 6853 	clr	c
      001FE2 E7               [12] 6854 	mov	a,@r1
      001FE3 96               [12] 6855 	subb	a,@r0
      001FE4 40 03            [24] 6856 	jc	00140$
      001FE6 02r1FrF3         [24] 6857 	ljmp	00106$
      001FE9                       6858 00140$:
      001FE9 E5*00            [12] 6859 	mov	a,_bp
      001FEB 24 0A            [12] 6860 	add	a,#0x0a
      001FED F8               [12] 6861 	mov	r0,a
      001FEE 90r00r07         [24] 6862 	mov	dptr,#_uxTopReadyPriority
      001FF1 E6               [12] 6863 	mov	a,@r0
      001FF2 F0               [24] 6864 	movx	@dptr,a
      001FF3                       6865 00106$:
      001FF3 8F 82            [24] 6866 	mov	dpl,r7
      001FF5 8E 83            [24] 6867 	mov	dph,r6
      001FF7 8D F0            [24] 6868 	mov	b,r5
      001FF9 E5*00            [12] 6869 	mov	a,_bp
      001FFB 24 13            [12] 6870 	add	a,#0x13
      001FFD F8               [12] 6871 	mov	r0,a
      001FFE 12r00r00         [24] 6872 	lcall	__gptrget
      002001 F6               [12] 6873 	mov	@r0,a
      002002 E5*00            [12] 6874 	mov	a,_bp
      002004 24 13            [12] 6875 	add	a,#0x13
      002006 F8               [12] 6876 	mov	r0,a
      002007 E6               [12] 6877 	mov	a,@r0
      002008 75 F0 0C         [24] 6878 	mov	b,#0x0c
      00200B A4               [48] 6879 	mul	ab
      00200C C8               [12] 6880 	xch	a,r0
      00200D E5*00            [12] 6881 	mov	a,_bp
      00200F 24 0A            [12] 6882 	add	a,#0x0a
      002011 C8               [12] 6883 	xch	a,r0
      002012 24r00            [12] 6884 	add	a,#_pxReadyTasksLists
      002014 F6               [12] 6885 	mov	@r0,a
      002015 74s00            [12] 6886 	mov	a,#(_pxReadyTasksLists >> 8)
      002017 35 F0            [12] 6887 	addc	a,b
      002019 08               [12] 6888 	inc	r0
      00201A F6               [12] 6889 	mov	@r0,a
      00201B E5*00            [12] 6890 	mov	a,_bp
      00201D 24 0A            [12] 6891 	add	a,#0x0a
      00201F F8               [12] 6892 	mov	r0,a
      002020 86 82            [24] 6893 	mov	dpl,@r0
      002022 08               [12] 6894 	inc	r0
      002023 86 83            [24] 6895 	mov	dph,@r0
      002025 A3               [24] 6896 	inc	dptr
      002026 E5*00            [12] 6897 	mov	a,_bp
      002028 24 17            [12] 6898 	add	a,#0x17
      00202A F8               [12] 6899 	mov	r0,a
      00202B E0               [24] 6900 	movx	a,@dptr
      00202C F6               [12] 6901 	mov	@r0,a
      00202D A3               [24] 6902 	inc	dptr
      00202E E0               [24] 6903 	movx	a,@dptr
      00202F 08               [12] 6904 	inc	r0
      002030 F6               [12] 6905 	mov	@r0,a
      002031 A3               [24] 6906 	inc	dptr
      002032 E0               [24] 6907 	movx	a,@dptr
      002033 08               [12] 6908 	inc	r0
      002034 F6               [12] 6909 	mov	@r0,a
      002035 E5*00            [12] 6910 	mov	a,_bp
      002037 24 04            [12] 6911 	add	a,#0x04
      002039 F8               [12] 6912 	mov	r0,a
      00203A 86 82            [24] 6913 	mov	dpl,@r0
      00203C 08               [12] 6914 	inc	r0
      00203D 86 83            [24] 6915 	mov	dph,@r0
      00203F 08               [12] 6916 	inc	r0
      002040 86 F0            [24] 6917 	mov	b,@r0
      002042 E5*00            [12] 6918 	mov	a,_bp
      002044 24 17            [12] 6919 	add	a,#0x17
      002046 F9               [12] 6920 	mov	r1,a
      002047 E7               [12] 6921 	mov	a,@r1
      002048 12r00r00         [24] 6922 	lcall	__gptrput
      00204B A3               [24] 6923 	inc	dptr
      00204C 09               [12] 6924 	inc	r1
      00204D E7               [12] 6925 	mov	a,@r1
      00204E 12r00r00         [24] 6926 	lcall	__gptrput
      002051 A3               [24] 6927 	inc	dptr
      002052 09               [12] 6928 	inc	r1
      002053 E7               [12] 6929 	mov	a,@r1
      002054 12r00r00         [24] 6930 	lcall	__gptrput
      002057 E5*00            [12] 6931 	mov	a,_bp
      002059 24 17            [12] 6932 	add	a,#0x17
      00205B F8               [12] 6933 	mov	r0,a
      00205C E5*00            [12] 6934 	mov	a,_bp
      00205E 24 0A            [12] 6935 	add	a,#0x0a
      002060 F9               [12] 6936 	mov	r1,a
      002061 74 05            [12] 6937 	mov	a,#0x05
      002063 26               [12] 6938 	add	a,@r0
      002064 F7               [12] 6939 	mov	@r1,a
      002065 74 00            [12] 6940 	mov	a,#0x00
      002067 08               [12] 6941 	inc	r0
      002068 36               [12] 6942 	addc	a,@r0
      002069 09               [12] 6943 	inc	r1
      00206A F7               [12] 6944 	mov	@r1,a
      00206B 08               [12] 6945 	inc	r0
      00206C E6               [12] 6946 	mov	a,@r0
      00206D 09               [12] 6947 	inc	r1
      00206E F7               [12] 6948 	mov	@r1,a
      00206F E5*00            [12] 6949 	mov	a,_bp
      002071 24 0A            [12] 6950 	add	a,#0x0a
      002073 F8               [12] 6951 	mov	r0,a
      002074 86 82            [24] 6952 	mov	dpl,@r0
      002076 08               [12] 6953 	inc	r0
      002077 86 83            [24] 6954 	mov	dph,@r0
      002079 08               [12] 6955 	inc	r0
      00207A 86 F0            [24] 6956 	mov	b,@r0
      00207C E5*00            [12] 6957 	mov	a,_bp
      00207E 24 04            [12] 6958 	add	a,#0x04
      002080 F9               [12] 6959 	mov	r1,a
      002081 12r00r00         [24] 6960 	lcall	__gptrget
      002084 F7               [12] 6961 	mov	@r1,a
      002085 A3               [24] 6962 	inc	dptr
      002086 12r00r00         [24] 6963 	lcall	__gptrget
      002089 09               [12] 6964 	inc	r1
      00208A F7               [12] 6965 	mov	@r1,a
      00208B A3               [24] 6966 	inc	dptr
      00208C 12r00r00         [24] 6967 	lcall	__gptrget
      00208F 09               [12] 6968 	inc	r1
      002090 F7               [12] 6969 	mov	@r1,a
      002091 E5*00            [12] 6970 	mov	a,_bp
      002093 24 0D            [12] 6971 	add	a,#0x0d
      002095 F8               [12] 6972 	mov	r0,a
      002096 86 82            [24] 6973 	mov	dpl,@r0
      002098 08               [12] 6974 	inc	r0
      002099 86 83            [24] 6975 	mov	dph,@r0
      00209B 08               [12] 6976 	inc	r0
      00209C 86 F0            [24] 6977 	mov	b,@r0
      00209E E5*00            [12] 6978 	mov	a,_bp
      0020A0 24 04            [12] 6979 	add	a,#0x04
      0020A2 F9               [12] 6980 	mov	r1,a
      0020A3 E7               [12] 6981 	mov	a,@r1
      0020A4 12r00r00         [24] 6982 	lcall	__gptrput
      0020A7 A3               [24] 6983 	inc	dptr
      0020A8 09               [12] 6984 	inc	r1
      0020A9 E7               [12] 6985 	mov	a,@r1
      0020AA 12r00r00         [24] 6986 	lcall	__gptrput
      0020AD A3               [24] 6987 	inc	dptr
      0020AE 09               [12] 6988 	inc	r1
      0020AF E7               [12] 6989 	mov	a,@r1
      0020B0 12r00r00         [24] 6990 	lcall	__gptrput
      0020B3 E5*00            [12] 6991 	mov	a,_bp
      0020B5 24 0A            [12] 6992 	add	a,#0x0a
      0020B7 F8               [12] 6993 	mov	r0,a
      0020B8 86 82            [24] 6994 	mov	dpl,@r0
      0020BA 08               [12] 6995 	inc	r0
      0020BB 86 83            [24] 6996 	mov	dph,@r0
      0020BD 08               [12] 6997 	inc	r0
      0020BE 86 F0            [24] 6998 	mov	b,@r0
      0020C0 E5*00            [12] 6999 	mov	a,_bp
      0020C2 24 0D            [12] 7000 	add	a,#0x0d
      0020C4 F9               [12] 7001 	mov	r1,a
      0020C5 12r00r00         [24] 7002 	lcall	__gptrget
      0020C8 F7               [12] 7003 	mov	@r1,a
      0020C9 A3               [24] 7004 	inc	dptr
      0020CA 12r00r00         [24] 7005 	lcall	__gptrget
      0020CD 09               [12] 7006 	inc	r1
      0020CE F7               [12] 7007 	mov	@r1,a
      0020CF A3               [24] 7008 	inc	dptr
      0020D0 12r00r00         [24] 7009 	lcall	__gptrget
      0020D3 09               [12] 7010 	inc	r1
      0020D4 F7               [12] 7011 	mov	@r1,a
      0020D5 E5*00            [12] 7012 	mov	a,_bp
      0020D7 24 0D            [12] 7013 	add	a,#0x0d
      0020D9 F8               [12] 7014 	mov	r0,a
      0020DA 74 02            [12] 7015 	mov	a,#0x02
      0020DC 26               [12] 7016 	add	a,@r0
      0020DD F6               [12] 7017 	mov	@r0,a
      0020DE 74 00            [12] 7018 	mov	a,#0x00
      0020E0 08               [12] 7019 	inc	r0
      0020E1 36               [12] 7020 	addc	a,@r0
      0020E2 F6               [12] 7021 	mov	@r0,a
      0020E3 E5*00            [12] 7022 	mov	a,_bp
      0020E5 24 0D            [12] 7023 	add	a,#0x0d
      0020E7 F8               [12] 7024 	mov	r0,a
      0020E8 86 82            [24] 7025 	mov	dpl,@r0
      0020EA 08               [12] 7026 	inc	r0
      0020EB 86 83            [24] 7027 	mov	dph,@r0
      0020ED 08               [12] 7028 	inc	r0
      0020EE 86 F0            [24] 7029 	mov	b,@r0
      0020F0 EC               [12] 7030 	mov	a,r4
      0020F1 12r00r00         [24] 7031 	lcall	__gptrput
      0020F4 A3               [24] 7032 	inc	dptr
      0020F5 EB               [12] 7033 	mov	a,r3
      0020F6 12r00r00         [24] 7034 	lcall	__gptrput
      0020F9 A3               [24] 7035 	inc	dptr
      0020FA EA               [12] 7036 	mov	a,r2
      0020FB 12r00r00         [24] 7037 	lcall	__gptrput
      0020FE E5*00            [12] 7038 	mov	a,_bp
      002100 24 0A            [12] 7039 	add	a,#0x0a
      002102 F8               [12] 7040 	mov	r0,a
      002103 86 82            [24] 7041 	mov	dpl,@r0
      002105 08               [12] 7042 	inc	r0
      002106 86 83            [24] 7043 	mov	dph,@r0
      002108 08               [12] 7044 	inc	r0
      002109 86 F0            [24] 7045 	mov	b,@r0
      00210B EC               [12] 7046 	mov	a,r4
      00210C 12r00r00         [24] 7047 	lcall	__gptrput
      00210F A3               [24] 7048 	inc	dptr
      002110 EB               [12] 7049 	mov	a,r3
      002111 12r00r00         [24] 7050 	lcall	__gptrput
      002114 A3               [24] 7051 	inc	dptr
      002115 EA               [12] 7052 	mov	a,r2
      002116 12r00r00         [24] 7053 	lcall	__gptrput
      002119 8F 82            [24] 7054 	mov	dpl,r7
      00211B 8E 83            [24] 7055 	mov	dph,r6
      00211D 8D F0            [24] 7056 	mov	b,r5
      00211F 12r00r00         [24] 7057 	lcall	__gptrget
      002122 FC               [12] 7058 	mov	r4,a
      002123 EC               [12] 7059 	mov	a,r4
      002124 75 F0 0C         [24] 7060 	mov	b,#0x0c
      002127 A4               [48] 7061 	mul	ab
      002128 24r00            [12] 7062 	add	a,#_pxReadyTasksLists
      00212A FC               [12] 7063 	mov	r4,a
      00212B 74s00            [12] 7064 	mov	a,#(_pxReadyTasksLists >> 8)
      00212D 35 F0            [12] 7065 	addc	a,b
      00212F FB               [12] 7066 	mov	r3,a
      002130 7A 00            [12] 7067 	mov	r2,#0x00
      002132 E5*00            [12] 7068 	mov	a,_bp
      002134 24 10            [12] 7069 	add	a,#0x10
      002136 F8               [12] 7070 	mov	r0,a
      002137 86 82            [24] 7071 	mov	dpl,@r0
      002139 08               [12] 7072 	inc	r0
      00213A 86 83            [24] 7073 	mov	dph,@r0
      00213C 08               [12] 7074 	inc	r0
      00213D 86 F0            [24] 7075 	mov	b,@r0
      00213F EC               [12] 7076 	mov	a,r4
      002140 12r00r00         [24] 7077 	lcall	__gptrput
      002143 A3               [24] 7078 	inc	dptr
      002144 EB               [12] 7079 	mov	a,r3
      002145 12r00r00         [24] 7080 	lcall	__gptrput
      002148 A3               [24] 7081 	inc	dptr
      002149 EA               [12] 7082 	mov	a,r2
      00214A 12r00r00         [24] 7083 	lcall	__gptrput
      00214D 8F 82            [24] 7084 	mov	dpl,r7
      00214F 8E 83            [24] 7085 	mov	dph,r6
      002151 8D F0            [24] 7086 	mov	b,r5
      002153 12r00r00         [24] 7087 	lcall	__gptrget
      002156 FF               [12] 7088 	mov	r7,a
      002157 EF               [12] 7089 	mov	a,r7
      002158 75 F0 0C         [24] 7090 	mov	b,#0x0c
      00215B A4               [48] 7091 	mul	ab
      00215C 24r00            [12] 7092 	add	a,#_pxReadyTasksLists
      00215E FF               [12] 7093 	mov	r7,a
      00215F 74s00            [12] 7094 	mov	a,#(_pxReadyTasksLists >> 8)
      002161 35 F0            [12] 7095 	addc	a,b
      002163 FE               [12] 7096 	mov	r6,a
      002164 8F 82            [24] 7097 	mov	dpl,r7
      002166 8E 83            [24] 7098 	mov	dph,r6
      002168 E0               [24] 7099 	movx	a,@dptr
      002169 FD               [12] 7100 	mov	r5,a
      00216A 0D               [12] 7101 	inc	r5
      00216B 8F 82            [24] 7102 	mov	dpl,r7
      00216D 8E 83            [24] 7103 	mov	dph,r6
      00216F ED               [12] 7104 	mov	a,r5
      002170 F0               [24] 7105 	movx	@dptr,a
      002171 02r22r85         [24] 7106 	ljmp	00109$
      002174                       7107 00108$:
                           002174  7108 	C$tasks.c$3228$3_0$317 ==.
                                   7109 ;	tasks.c:3228: listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
      002174 90r00r4F         [24] 7110 	mov	dptr,#(_xPendingReadyList + 0x0001)
      002177 E5*00            [12] 7111 	mov	a,_bp
      002179 24 17            [12] 7112 	add	a,#0x17
      00217B F8               [12] 7113 	mov	r0,a
      00217C E0               [24] 7114 	movx	a,@dptr
      00217D F6               [12] 7115 	mov	@r0,a
      00217E A3               [24] 7116 	inc	dptr
      00217F E0               [24] 7117 	movx	a,@dptr
      002180 08               [12] 7118 	inc	r0
      002181 F6               [12] 7119 	mov	@r0,a
      002182 A3               [24] 7120 	inc	dptr
      002183 E0               [24] 7121 	movx	a,@dptr
      002184 08               [12] 7122 	inc	r0
      002185 F6               [12] 7123 	mov	@r0,a
      002186 74 02            [12] 7124 	mov	a,#0x02
      002188 2A               [12] 7125 	add	a,r2
      002189 FD               [12] 7126 	mov	r5,a
      00218A 74 00            [12] 7127 	mov	a,#0x00
      00218C 3B               [12] 7128 	addc	a,r3
      00218D FE               [12] 7129 	mov	r6,a
      00218E 8C 07            [24] 7130 	mov	ar7,r4
      002190 8D 82            [24] 7131 	mov	dpl,r5
      002192 8E 83            [24] 7132 	mov	dph,r6
      002194 8F F0            [24] 7133 	mov	b,r7
      002196 E5*00            [12] 7134 	mov	a,_bp
      002198 24 17            [12] 7135 	add	a,#0x17
      00219A F8               [12] 7136 	mov	r0,a
      00219B E6               [12] 7137 	mov	a,@r0
      00219C 12r00r00         [24] 7138 	lcall	__gptrput
      00219F A3               [24] 7139 	inc	dptr
      0021A0 08               [12] 7140 	inc	r0
      0021A1 E6               [12] 7141 	mov	a,@r0
      0021A2 12r00r00         [24] 7142 	lcall	__gptrput
      0021A5 A3               [24] 7143 	inc	dptr
      0021A6 08               [12] 7144 	inc	r0
      0021A7 E6               [12] 7145 	mov	a,@r0
      0021A8 12r00r00         [24] 7146 	lcall	__gptrput
      0021AB E5*00            [12] 7147 	mov	a,_bp
      0021AD 24 0D            [12] 7148 	add	a,#0x0d
      0021AF F8               [12] 7149 	mov	r0,a
      0021B0 74 05            [12] 7150 	mov	a,#0x05
      0021B2 2A               [12] 7151 	add	a,r2
      0021B3 F6               [12] 7152 	mov	@r0,a
      0021B4 74 00            [12] 7153 	mov	a,#0x00
      0021B6 3B               [12] 7154 	addc	a,r3
      0021B7 08               [12] 7155 	inc	r0
      0021B8 F6               [12] 7156 	mov	@r0,a
      0021B9 08               [12] 7157 	inc	r0
      0021BA A6 04            [24] 7158 	mov	@r0,ar4
      0021BC E5*00            [12] 7159 	mov	a,_bp
      0021BE 24 17            [12] 7160 	add	a,#0x17
      0021C0 F8               [12] 7161 	mov	r0,a
      0021C1 E5*00            [12] 7162 	mov	a,_bp
      0021C3 24 0A            [12] 7163 	add	a,#0x0a
      0021C5 F9               [12] 7164 	mov	r1,a
      0021C6 74 05            [12] 7165 	mov	a,#0x05
      0021C8 26               [12] 7166 	add	a,@r0
      0021C9 F7               [12] 7167 	mov	@r1,a
      0021CA 74 00            [12] 7168 	mov	a,#0x00
      0021CC 08               [12] 7169 	inc	r0
      0021CD 36               [12] 7170 	addc	a,@r0
      0021CE 09               [12] 7171 	inc	r1
      0021CF F7               [12] 7172 	mov	@r1,a
      0021D0 08               [12] 7173 	inc	r0
      0021D1 E6               [12] 7174 	mov	a,@r0
      0021D2 09               [12] 7175 	inc	r1
      0021D3 F7               [12] 7176 	mov	@r1,a
      0021D4 E5*00            [12] 7177 	mov	a,_bp
      0021D6 24 0A            [12] 7178 	add	a,#0x0a
      0021D8 F8               [12] 7179 	mov	r0,a
      0021D9 86 82            [24] 7180 	mov	dpl,@r0
      0021DB 08               [12] 7181 	inc	r0
      0021DC 86 83            [24] 7182 	mov	dph,@r0
      0021DE 08               [12] 7183 	inc	r0
      0021DF 86 F0            [24] 7184 	mov	b,@r0
      0021E1 12r00r00         [24] 7185 	lcall	__gptrget
      0021E4 FD               [12] 7186 	mov	r5,a
      0021E5 A3               [24] 7187 	inc	dptr
      0021E6 12r00r00         [24] 7188 	lcall	__gptrget
      0021E9 FE               [12] 7189 	mov	r6,a
      0021EA A3               [24] 7190 	inc	dptr
      0021EB 12r00r00         [24] 7191 	lcall	__gptrget
      0021EE FF               [12] 7192 	mov	r7,a
      0021EF E5*00            [12] 7193 	mov	a,_bp
      0021F1 24 0D            [12] 7194 	add	a,#0x0d
      0021F3 F8               [12] 7195 	mov	r0,a
      0021F4 86 82            [24] 7196 	mov	dpl,@r0
      0021F6 08               [12] 7197 	inc	r0
      0021F7 86 83            [24] 7198 	mov	dph,@r0
      0021F9 08               [12] 7199 	inc	r0
      0021FA 86 F0            [24] 7200 	mov	b,@r0
      0021FC ED               [12] 7201 	mov	a,r5
      0021FD 12r00r00         [24] 7202 	lcall	__gptrput
      002200 A3               [24] 7203 	inc	dptr
      002201 EE               [12] 7204 	mov	a,r6
      002202 12r00r00         [24] 7205 	lcall	__gptrput
      002205 A3               [24] 7206 	inc	dptr
      002206 EF               [12] 7207 	mov	a,r7
      002207 12r00r00         [24] 7208 	lcall	__gptrput
      00220A E5*00            [12] 7209 	mov	a,_bp
      00220C 24 0A            [12] 7210 	add	a,#0x0a
      00220E F8               [12] 7211 	mov	r0,a
      00220F 86 82            [24] 7212 	mov	dpl,@r0
      002211 08               [12] 7213 	inc	r0
      002212 86 83            [24] 7214 	mov	dph,@r0
      002214 08               [12] 7215 	inc	r0
      002215 86 F0            [24] 7216 	mov	b,@r0
      002217 12r00r00         [24] 7217 	lcall	__gptrget
      00221A FD               [12] 7218 	mov	r5,a
      00221B A3               [24] 7219 	inc	dptr
      00221C 12r00r00         [24] 7220 	lcall	__gptrget
      00221F FE               [12] 7221 	mov	r6,a
      002220 A3               [24] 7222 	inc	dptr
      002221 12r00r00         [24] 7223 	lcall	__gptrget
      002224 FF               [12] 7224 	mov	r7,a
      002225 74 02            [12] 7225 	mov	a,#0x02
      002227 2D               [12] 7226 	add	a,r5
      002228 FD               [12] 7227 	mov	r5,a
      002229 74 00            [12] 7228 	mov	a,#0x00
      00222B 3E               [12] 7229 	addc	a,r6
      00222C FE               [12] 7230 	mov	r6,a
      00222D 8D 82            [24] 7231 	mov	dpl,r5
      00222F 8E 83            [24] 7232 	mov	dph,r6
      002231 8F F0            [24] 7233 	mov	b,r7
      002233 EA               [12] 7234 	mov	a,r2
      002234 12r00r00         [24] 7235 	lcall	__gptrput
      002237 A3               [24] 7236 	inc	dptr
      002238 EB               [12] 7237 	mov	a,r3
      002239 12r00r00         [24] 7238 	lcall	__gptrput
      00223C A3               [24] 7239 	inc	dptr
      00223D EC               [12] 7240 	mov	a,r4
      00223E 12r00r00         [24] 7241 	lcall	__gptrput
      002241 E5*00            [12] 7242 	mov	a,_bp
      002243 24 0A            [12] 7243 	add	a,#0x0a
      002245 F8               [12] 7244 	mov	r0,a
      002246 86 82            [24] 7245 	mov	dpl,@r0
      002248 08               [12] 7246 	inc	r0
      002249 86 83            [24] 7247 	mov	dph,@r0
      00224B 08               [12] 7248 	inc	r0
      00224C 86 F0            [24] 7249 	mov	b,@r0
      00224E EA               [12] 7250 	mov	a,r2
      00224F 12r00r00         [24] 7251 	lcall	__gptrput
      002252 A3               [24] 7252 	inc	dptr
      002253 EB               [12] 7253 	mov	a,r3
      002254 12r00r00         [24] 7254 	lcall	__gptrput
      002257 A3               [24] 7255 	inc	dptr
      002258 EC               [12] 7256 	mov	a,r4
      002259 12r00r00         [24] 7257 	lcall	__gptrput
      00225C E5*00            [12] 7258 	mov	a,_bp
      00225E 24 07            [12] 7259 	add	a,#0x07
      002260 F8               [12] 7260 	mov	r0,a
      002261 86 82            [24] 7261 	mov	dpl,@r0
      002263 08               [12] 7262 	inc	r0
      002264 86 83            [24] 7263 	mov	dph,@r0
      002266 08               [12] 7264 	inc	r0
      002267 86 F0            [24] 7265 	mov	b,@r0
      002269 74r4E            [12] 7266 	mov	a,#_xPendingReadyList
      00226B 12r00r00         [24] 7267 	lcall	__gptrput
      00226E A3               [24] 7268 	inc	dptr
      00226F 74s00            [12] 7269 	mov	a,#(_xPendingReadyList >> 8)
      002271 12r00r00         [24] 7270 	lcall	__gptrput
      002274 A3               [24] 7271 	inc	dptr
      002275 74 00            [12] 7272 	mov	a,#0x00
      002277 12r00r00         [24] 7273 	lcall	__gptrput
      00227A 90r00r4E         [24] 7274 	mov	dptr,#_xPendingReadyList
      00227D E0               [24] 7275 	movx	a,@dptr
      00227E FF               [12] 7276 	mov	r7,a
      00227F 0F               [12] 7277 	inc	r7
      002280 90r00r4E         [24] 7278 	mov	dptr,#_xPendingReadyList
      002283 EF               [12] 7279 	mov	a,r7
      002284 F0               [24] 7280 	movx	@dptr,a
      002285                       7281 00109$:
                           002285  7282 	C$tasks.c$3231$1_0$307 ==.
                                   7283 ;	tasks.c:3231: if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
      002285 E5*00            [12] 7284 	mov	a,_bp
      002287 24 14            [12] 7285 	add	a,#0x14
      002289 F8               [12] 7286 	mov	r0,a
      00228A 74 1F            [12] 7287 	mov	a,#0x1f
      00228C 26               [12] 7288 	add	a,@r0
      00228D FD               [12] 7289 	mov	r5,a
      00228E 74 00            [12] 7290 	mov	a,#0x00
      002290 08               [12] 7291 	inc	r0
      002291 36               [12] 7292 	addc	a,@r0
      002292 FE               [12] 7293 	mov	r6,a
      002293 08               [12] 7294 	inc	r0
      002294 86 07            [24] 7295 	mov	ar7,@r0
      002296 8D 82            [24] 7296 	mov	dpl,r5
      002298 8E 83            [24] 7297 	mov	dph,r6
      00229A 8F F0            [24] 7298 	mov	b,r7
      00229C 12r00r00         [24] 7299 	lcall	__gptrget
      00229F FD               [12] 7300 	mov	r5,a
      0022A0 90r00r00         [24] 7301 	mov	dptr,#_pxCurrentTCB
      0022A3 E0               [24] 7302 	movx	a,@dptr
      0022A4 FC               [12] 7303 	mov	r4,a
      0022A5 A3               [24] 7304 	inc	dptr
      0022A6 E0               [24] 7305 	movx	a,@dptr
      0022A7 FE               [12] 7306 	mov	r6,a
      0022A8 A3               [24] 7307 	inc	dptr
      0022A9 E0               [24] 7308 	movx	a,@dptr
      0022AA FF               [12] 7309 	mov	r7,a
      0022AB 74 1F            [12] 7310 	mov	a,#0x1f
      0022AD 2C               [12] 7311 	add	a,r4
      0022AE FC               [12] 7312 	mov	r4,a
      0022AF 74 00            [12] 7313 	mov	a,#0x00
      0022B1 3E               [12] 7314 	addc	a,r6
      0022B2 FE               [12] 7315 	mov	r6,a
      0022B3 8C 82            [24] 7316 	mov	dpl,r4
      0022B5 8E 83            [24] 7317 	mov	dph,r6
      0022B7 8F F0            [24] 7318 	mov	b,r7
      0022B9 12r00r00         [24] 7319 	lcall	__gptrget
      0022BC FC               [12] 7320 	mov	r4,a
      0022BD C3               [12] 7321 	clr	c
      0022BE EC               [12] 7322 	mov	a,r4
      0022BF 9D               [12] 7323 	subb	a,r5
      0022C0 40 03            [24] 7324 	jc	00141$
      0022C2 02r22rCF         [24] 7325 	ljmp	00111$
      0022C5                       7326 00141$:
                           0022C5  7327 	C$tasks.c$3236$2_0$318 ==.
                                   7328 ;	tasks.c:3236: xReturn = pdTRUE;
      0022C5 7F 01            [12] 7329 	mov	r7,#0x01
                           0022C7  7330 	C$tasks.c$3240$2_0$318 ==.
                                   7331 ;	tasks.c:3240: xYieldPending = pdTRUE;
      0022C7 90r00r0B         [24] 7332 	mov	dptr,#_xYieldPending
      0022CA EF               [12] 7333 	mov	a,r7
      0022CB F0               [24] 7334 	movx	@dptr,a
      0022CC 02r22rD1         [24] 7335 	ljmp	00112$
      0022CF                       7336 00111$:
                           0022CF  7337 	C$tasks.c$3244$2_0$319 ==.
                                   7338 ;	tasks.c:3244: xReturn = pdFALSE;
      0022CF 7F 00            [12] 7339 	mov	r7,#0x00
      0022D1                       7340 00112$:
                           0022D1  7341 	C$tasks.c$3247$1_0$307 ==.
                                   7342 ;	tasks.c:3247: return xReturn;
      0022D1 8F 82            [24] 7343 	mov	dpl,r7
      0022D3                       7344 00113$:
                           0022D3  7345 	C$tasks.c$3248$1_0$307 ==.
                                   7346 ;	tasks.c:3248: }
      0022D3 85*00 81         [24] 7347 	mov	sp,_bp
      0022D6 D0*00            [24] 7348 	pop	_bp
                           0022D8  7349 	C$tasks.c$3248$1_0$307 ==.
                           0022D8  7350 	XG$xTaskRemoveFromEventList$0$0 ==.
      0022D8 22               [24] 7351 	ret
                                   7352 ;------------------------------------------------------------
                                   7353 ;Allocation info for local variables in function 'vTaskRemoveFromUnorderedEventList'
                                   7354 ;------------------------------------------------------------
                                   7355 ;xItemValue                Allocated to stack - _bp -4
                                   7356 ;pxEventListItem           Allocated to stack - _bp +1
                                   7357 ;pxUnblockedTCB            Allocated to stack - _bp +19
                                   7358 ;pxList                    Allocated to stack - _bp +22
                                   7359 ;pxList                    Allocated to stack - _bp +22
                                   7360 ;pxIndex                   Allocated to registers r2 r3 r4 
                                   7361 ;sloc0                     Allocated to stack - _bp +4
                                   7362 ;sloc1                     Allocated to stack - _bp +10
                                   7363 ;sloc2                     Allocated to stack - _bp +7
                                   7364 ;sloc3                     Allocated to stack - _bp +16
                                   7365 ;sloc4                     Allocated to stack - _bp +13
                                   7366 ;------------------------------------------------------------
                           0022D9  7367 	G$vTaskRemoveFromUnorderedEventList$0$0 ==.
                           0022D9  7368 	C$tasks.c$3251$1_0$321 ==.
                                   7369 ;	tasks.c:3251: void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
                                   7370 ;	-----------------------------------------
                                   7371 ;	 function vTaskRemoveFromUnorderedEventList
                                   7372 ;	-----------------------------------------
      0022D9                       7373 _vTaskRemoveFromUnorderedEventList:
      0022D9 C0*00            [24] 7374 	push	_bp
      0022DB 85 81*00         [24] 7375 	mov	_bp,sp
      0022DE C0 82            [24] 7376 	push	dpl
      0022E0 C0 83            [24] 7377 	push	dph
      0022E2 C0 F0            [24] 7378 	push	b
      0022E4 E5 81            [12] 7379 	mov	a,sp
      0022E6 24 15            [12] 7380 	add	a,#0x15
      0022E8 F5 81            [12] 7381 	mov	sp,a
                           0022EA  7382 	C$tasks.c$3261$1_0$321 ==.
                                   7383 ;	tasks.c:3261: listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
      0022EA E5*00            [12] 7384 	mov	a,_bp
      0022EC 24 FC            [12] 7385 	add	a,#0xfc
      0022EE F8               [12] 7386 	mov	r0,a
      0022EF 86 03            [24] 7387 	mov	ar3,@r0
      0022F1 08               [12] 7388 	inc	r0
      0022F2 86 04            [24] 7389 	mov	ar4,@r0
      0022F4 43 04 80         [24] 7390 	orl	ar4,#0x80
      0022F7 A8*00            [24] 7391 	mov	r0,_bp
      0022F9 08               [12] 7392 	inc	r0
      0022FA 86 82            [24] 7393 	mov	dpl,@r0
      0022FC 08               [12] 7394 	inc	r0
      0022FD 86 83            [24] 7395 	mov	dph,@r0
      0022FF 08               [12] 7396 	inc	r0
      002300 86 F0            [24] 7397 	mov	b,@r0
      002302 EB               [12] 7398 	mov	a,r3
      002303 12r00r00         [24] 7399 	lcall	__gptrput
      002306 A3               [24] 7400 	inc	dptr
      002307 EC               [12] 7401 	mov	a,r4
      002308 12r00r00         [24] 7402 	lcall	__gptrput
                           00230B  7403 	C$tasks.c$3265$1_0$321 ==.
                                   7404 ;	tasks.c:3265: pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      00230B A8*00            [24] 7405 	mov	r0,_bp
      00230D 08               [12] 7406 	inc	r0
      00230E 74 08            [12] 7407 	mov	a,#0x08
      002310 26               [12] 7408 	add	a,@r0
      002311 FA               [12] 7409 	mov	r2,a
      002312 74 00            [12] 7410 	mov	a,#0x00
      002314 08               [12] 7411 	inc	r0
      002315 36               [12] 7412 	addc	a,@r0
      002316 FB               [12] 7413 	mov	r3,a
      002317 08               [12] 7414 	inc	r0
      002318 86 04            [24] 7415 	mov	ar4,@r0
      00231A 8A 82            [24] 7416 	mov	dpl,r2
      00231C 8B 83            [24] 7417 	mov	dph,r3
      00231E 8C F0            [24] 7418 	mov	b,r4
      002320 12r00r00         [24] 7419 	lcall	__gptrget
      002323 FA               [12] 7420 	mov	r2,a
      002324 A3               [24] 7421 	inc	dptr
      002325 12r00r00         [24] 7422 	lcall	__gptrget
      002328 FB               [12] 7423 	mov	r3,a
      002329 A3               [24] 7424 	inc	dptr
      00232A 12r00r00         [24] 7425 	lcall	__gptrget
      00232D FC               [12] 7426 	mov	r4,a
      00232E E5*00            [12] 7427 	mov	a,_bp
      002330 24 13            [12] 7428 	add	a,#0x13
      002332 F8               [12] 7429 	mov	r0,a
      002333 A6 02            [24] 7430 	mov	@r0,ar2
      002335 08               [12] 7431 	inc	r0
      002336 A6 03            [24] 7432 	mov	@r0,ar3
      002338 08               [12] 7433 	inc	r0
      002339 A6 04            [24] 7434 	mov	@r0,ar4
                           00233B  7435 	C$tasks.c$3267$2_0$322 ==.
                                   7436 ;	tasks.c:3267: listREMOVE_ITEM( pxEventListItem );
      00233B A8*00            [24] 7437 	mov	r0,_bp
      00233D 08               [12] 7438 	inc	r0
      00233E 74 0B            [12] 7439 	mov	a,#0x0b
      002340 26               [12] 7440 	add	a,@r0
      002341 FA               [12] 7441 	mov	r2,a
      002342 74 00            [12] 7442 	mov	a,#0x00
      002344 08               [12] 7443 	inc	r0
      002345 36               [12] 7444 	addc	a,@r0
      002346 FB               [12] 7445 	mov	r3,a
      002347 08               [12] 7446 	inc	r0
      002348 86 04            [24] 7447 	mov	ar4,@r0
      00234A 8A 82            [24] 7448 	mov	dpl,r2
      00234C 8B 83            [24] 7449 	mov	dph,r3
      00234E 8C F0            [24] 7450 	mov	b,r4
      002350 E5*00            [12] 7451 	mov	a,_bp
      002352 24 16            [12] 7452 	add	a,#0x16
      002354 F8               [12] 7453 	mov	r0,a
      002355 12r00r00         [24] 7454 	lcall	__gptrget
      002358 F6               [12] 7455 	mov	@r0,a
      002359 A3               [24] 7456 	inc	dptr
      00235A 12r00r00         [24] 7457 	lcall	__gptrget
      00235D 08               [12] 7458 	inc	r0
      00235E F6               [12] 7459 	mov	@r0,a
      00235F A3               [24] 7460 	inc	dptr
      002360 12r00r00         [24] 7461 	lcall	__gptrget
      002363 08               [12] 7462 	inc	r0
      002364 F6               [12] 7463 	mov	@r0,a
      002365 A8*00            [24] 7464 	mov	r0,_bp
      002367 08               [12] 7465 	inc	r0
      002368 E5*00            [12] 7466 	mov	a,_bp
      00236A 24 04            [12] 7467 	add	a,#0x04
      00236C F9               [12] 7468 	mov	r1,a
      00236D 74 02            [12] 7469 	mov	a,#0x02
      00236F 26               [12] 7470 	add	a,@r0
      002370 F7               [12] 7471 	mov	@r1,a
      002371 74 00            [12] 7472 	mov	a,#0x00
      002373 08               [12] 7473 	inc	r0
      002374 36               [12] 7474 	addc	a,@r0
      002375 09               [12] 7475 	inc	r1
      002376 F7               [12] 7476 	mov	@r1,a
      002377 08               [12] 7477 	inc	r0
      002378 E6               [12] 7478 	mov	a,@r0
      002379 09               [12] 7479 	inc	r1
      00237A F7               [12] 7480 	mov	@r1,a
      00237B E5*00            [12] 7481 	mov	a,_bp
      00237D 24 04            [12] 7482 	add	a,#0x04
      00237F F8               [12] 7483 	mov	r0,a
      002380 86 82            [24] 7484 	mov	dpl,@r0
      002382 08               [12] 7485 	inc	r0
      002383 86 83            [24] 7486 	mov	dph,@r0
      002385 08               [12] 7487 	inc	r0
      002386 86 F0            [24] 7488 	mov	b,@r0
      002388 12r00r00         [24] 7489 	lcall	__gptrget
      00238B FD               [12] 7490 	mov	r5,a
      00238C A3               [24] 7491 	inc	dptr
      00238D 12r00r00         [24] 7492 	lcall	__gptrget
      002390 FE               [12] 7493 	mov	r6,a
      002391 A3               [24] 7494 	inc	dptr
      002392 12r00r00         [24] 7495 	lcall	__gptrget
      002395 FF               [12] 7496 	mov	r7,a
      002396 E5*00            [12] 7497 	mov	a,_bp
      002398 24 07            [12] 7498 	add	a,#0x07
      00239A F8               [12] 7499 	mov	r0,a
      00239B 74 05            [12] 7500 	mov	a,#0x05
      00239D 2D               [12] 7501 	add	a,r5
      00239E F6               [12] 7502 	mov	@r0,a
      00239F 74 00            [12] 7503 	mov	a,#0x00
      0023A1 3E               [12] 7504 	addc	a,r6
      0023A2 08               [12] 7505 	inc	r0
      0023A3 F6               [12] 7506 	mov	@r0,a
      0023A4 08               [12] 7507 	inc	r0
      0023A5 A6 07            [24] 7508 	mov	@r0,ar7
      0023A7 A8*00            [24] 7509 	mov	r0,_bp
      0023A9 08               [12] 7510 	inc	r0
      0023AA E5*00            [12] 7511 	mov	a,_bp
      0023AC 24 0A            [12] 7512 	add	a,#0x0a
      0023AE F9               [12] 7513 	mov	r1,a
      0023AF 74 05            [12] 7514 	mov	a,#0x05
      0023B1 26               [12] 7515 	add	a,@r0
      0023B2 F7               [12] 7516 	mov	@r1,a
      0023B3 74 00            [12] 7517 	mov	a,#0x00
      0023B5 08               [12] 7518 	inc	r0
      0023B6 36               [12] 7519 	addc	a,@r0
      0023B7 09               [12] 7520 	inc	r1
      0023B8 F7               [12] 7521 	mov	@r1,a
      0023B9 08               [12] 7522 	inc	r0
      0023BA E6               [12] 7523 	mov	a,@r0
      0023BB 09               [12] 7524 	inc	r1
      0023BC F7               [12] 7525 	mov	@r1,a
      0023BD E5*00            [12] 7526 	mov	a,_bp
      0023BF 24 0A            [12] 7527 	add	a,#0x0a
      0023C1 F8               [12] 7528 	mov	r0,a
      0023C2 86 82            [24] 7529 	mov	dpl,@r0
      0023C4 08               [12] 7530 	inc	r0
      0023C5 86 83            [24] 7531 	mov	dph,@r0
      0023C7 08               [12] 7532 	inc	r0
      0023C8 86 F0            [24] 7533 	mov	b,@r0
      0023CA 12r00r00         [24] 7534 	lcall	__gptrget
      0023CD FD               [12] 7535 	mov	r5,a
      0023CE A3               [24] 7536 	inc	dptr
      0023CF 12r00r00         [24] 7537 	lcall	__gptrget
      0023D2 FE               [12] 7538 	mov	r6,a
      0023D3 A3               [24] 7539 	inc	dptr
      0023D4 12r00r00         [24] 7540 	lcall	__gptrget
      0023D7 FF               [12] 7541 	mov	r7,a
      0023D8 E5*00            [12] 7542 	mov	a,_bp
      0023DA 24 07            [12] 7543 	add	a,#0x07
      0023DC F8               [12] 7544 	mov	r0,a
      0023DD 86 82            [24] 7545 	mov	dpl,@r0
      0023DF 08               [12] 7546 	inc	r0
      0023E0 86 83            [24] 7547 	mov	dph,@r0
      0023E2 08               [12] 7548 	inc	r0
      0023E3 86 F0            [24] 7549 	mov	b,@r0
      0023E5 ED               [12] 7550 	mov	a,r5
      0023E6 12r00r00         [24] 7551 	lcall	__gptrput
      0023E9 A3               [24] 7552 	inc	dptr
      0023EA EE               [12] 7553 	mov	a,r6
      0023EB 12r00r00         [24] 7554 	lcall	__gptrput
      0023EE A3               [24] 7555 	inc	dptr
      0023EF EF               [12] 7556 	mov	a,r7
      0023F0 12r00r00         [24] 7557 	lcall	__gptrput
      0023F3 E5*00            [12] 7558 	mov	a,_bp
      0023F5 24 0A            [12] 7559 	add	a,#0x0a
      0023F7 F8               [12] 7560 	mov	r0,a
      0023F8 86 82            [24] 7561 	mov	dpl,@r0
      0023FA 08               [12] 7562 	inc	r0
      0023FB 86 83            [24] 7563 	mov	dph,@r0
      0023FD 08               [12] 7564 	inc	r0
      0023FE 86 F0            [24] 7565 	mov	b,@r0
      002400 12r00r00         [24] 7566 	lcall	__gptrget
      002403 FD               [12] 7567 	mov	r5,a
      002404 A3               [24] 7568 	inc	dptr
      002405 12r00r00         [24] 7569 	lcall	__gptrget
      002408 FE               [12] 7570 	mov	r6,a
      002409 A3               [24] 7571 	inc	dptr
      00240A 12r00r00         [24] 7572 	lcall	__gptrget
      00240D FF               [12] 7573 	mov	r7,a
      00240E E5*00            [12] 7574 	mov	a,_bp
      002410 24 07            [12] 7575 	add	a,#0x07
      002412 F8               [12] 7576 	mov	r0,a
      002413 74 02            [12] 7577 	mov	a,#0x02
      002415 2D               [12] 7578 	add	a,r5
      002416 F6               [12] 7579 	mov	@r0,a
      002417 74 00            [12] 7580 	mov	a,#0x00
      002419 3E               [12] 7581 	addc	a,r6
      00241A 08               [12] 7582 	inc	r0
      00241B F6               [12] 7583 	mov	@r0,a
      00241C 08               [12] 7584 	inc	r0
      00241D A6 07            [24] 7585 	mov	@r0,ar7
      00241F E5*00            [12] 7586 	mov	a,_bp
      002421 24 04            [12] 7587 	add	a,#0x04
      002423 F8               [12] 7588 	mov	r0,a
      002424 86 82            [24] 7589 	mov	dpl,@r0
      002426 08               [12] 7590 	inc	r0
      002427 86 83            [24] 7591 	mov	dph,@r0
      002429 08               [12] 7592 	inc	r0
      00242A 86 F0            [24] 7593 	mov	b,@r0
      00242C 12r00r00         [24] 7594 	lcall	__gptrget
      00242F FD               [12] 7595 	mov	r5,a
      002430 A3               [24] 7596 	inc	dptr
      002431 12r00r00         [24] 7597 	lcall	__gptrget
      002434 FE               [12] 7598 	mov	r6,a
      002435 A3               [24] 7599 	inc	dptr
      002436 12r00r00         [24] 7600 	lcall	__gptrget
      002439 FF               [12] 7601 	mov	r7,a
      00243A E5*00            [12] 7602 	mov	a,_bp
      00243C 24 07            [12] 7603 	add	a,#0x07
      00243E F8               [12] 7604 	mov	r0,a
      00243F 86 82            [24] 7605 	mov	dpl,@r0
      002441 08               [12] 7606 	inc	r0
      002442 86 83            [24] 7607 	mov	dph,@r0
      002444 08               [12] 7608 	inc	r0
      002445 86 F0            [24] 7609 	mov	b,@r0
      002447 ED               [12] 7610 	mov	a,r5
      002448 12r00r00         [24] 7611 	lcall	__gptrput
      00244B A3               [24] 7612 	inc	dptr
      00244C EE               [12] 7613 	mov	a,r6
      00244D 12r00r00         [24] 7614 	lcall	__gptrput
      002450 A3               [24] 7615 	inc	dptr
      002451 EF               [12] 7616 	mov	a,r7
      002452 12r00r00         [24] 7617 	lcall	__gptrput
      002455 E5*00            [12] 7618 	mov	a,_bp
      002457 24 16            [12] 7619 	add	a,#0x16
      002459 F8               [12] 7620 	mov	r0,a
      00245A E5*00            [12] 7621 	mov	a,_bp
      00245C 24 07            [12] 7622 	add	a,#0x07
      00245E F9               [12] 7623 	mov	r1,a
      00245F 74 01            [12] 7624 	mov	a,#0x01
      002461 26               [12] 7625 	add	a,@r0
      002462 F7               [12] 7626 	mov	@r1,a
      002463 74 00            [12] 7627 	mov	a,#0x00
      002465 08               [12] 7628 	inc	r0
      002466 36               [12] 7629 	addc	a,@r0
      002467 09               [12] 7630 	inc	r1
      002468 F7               [12] 7631 	mov	@r1,a
      002469 08               [12] 7632 	inc	r0
      00246A E6               [12] 7633 	mov	a,@r0
      00246B 09               [12] 7634 	inc	r1
      00246C F7               [12] 7635 	mov	@r1,a
      00246D E5*00            [12] 7636 	mov	a,_bp
      00246F 24 07            [12] 7637 	add	a,#0x07
      002471 F8               [12] 7638 	mov	r0,a
      002472 86 82            [24] 7639 	mov	dpl,@r0
      002474 08               [12] 7640 	inc	r0
      002475 86 83            [24] 7641 	mov	dph,@r0
      002477 08               [12] 7642 	inc	r0
      002478 86 F0            [24] 7643 	mov	b,@r0
      00247A 12r00r00         [24] 7644 	lcall	__gptrget
      00247D FD               [12] 7645 	mov	r5,a
      00247E A3               [24] 7646 	inc	dptr
      00247F 12r00r00         [24] 7647 	lcall	__gptrget
      002482 FE               [12] 7648 	mov	r6,a
      002483 A3               [24] 7649 	inc	dptr
      002484 12r00r00         [24] 7650 	lcall	__gptrget
      002487 FF               [12] 7651 	mov	r7,a
      002488 A8*00            [24] 7652 	mov	r0,_bp
      00248A 08               [12] 7653 	inc	r0
      00248B C0 05            [24] 7654 	push	ar5
      00248D C0 06            [24] 7655 	push	ar6
      00248F C0 07            [24] 7656 	push	ar7
      002491 86 82            [24] 7657 	mov	dpl,@r0
      002493 08               [12] 7658 	inc	r0
      002494 86 83            [24] 7659 	mov	dph,@r0
      002496 08               [12] 7660 	inc	r0
      002497 86 F0            [24] 7661 	mov	b,@r0
      002499 12r00r00         [24] 7662 	lcall	___gptr_cmp
      00249C 15 81            [12] 7663 	dec	sp
      00249E 15 81            [12] 7664 	dec	sp
      0024A0 15 81            [12] 7665 	dec	sp
      0024A2 70 02            [24] 7666 	jnz	00127$
      0024A4 80 03            [24] 7667 	sjmp	00128$
      0024A6                       7668 00127$:
      0024A6 02r24rDF         [24] 7669 	ljmp	00102$
      0024A9                       7670 00128$:
      0024A9 E5*00            [12] 7671 	mov	a,_bp
      0024AB 24 0A            [12] 7672 	add	a,#0x0a
      0024AD F8               [12] 7673 	mov	r0,a
      0024AE 86 82            [24] 7674 	mov	dpl,@r0
      0024B0 08               [12] 7675 	inc	r0
      0024B1 86 83            [24] 7676 	mov	dph,@r0
      0024B3 08               [12] 7677 	inc	r0
      0024B4 86 F0            [24] 7678 	mov	b,@r0
      0024B6 12r00r00         [24] 7679 	lcall	__gptrget
      0024B9 FD               [12] 7680 	mov	r5,a
      0024BA A3               [24] 7681 	inc	dptr
      0024BB 12r00r00         [24] 7682 	lcall	__gptrget
      0024BE FE               [12] 7683 	mov	r6,a
      0024BF A3               [24] 7684 	inc	dptr
      0024C0 12r00r00         [24] 7685 	lcall	__gptrget
      0024C3 FF               [12] 7686 	mov	r7,a
      0024C4 E5*00            [12] 7687 	mov	a,_bp
      0024C6 24 07            [12] 7688 	add	a,#0x07
      0024C8 F8               [12] 7689 	mov	r0,a
      0024C9 86 82            [24] 7690 	mov	dpl,@r0
      0024CB 08               [12] 7691 	inc	r0
      0024CC 86 83            [24] 7692 	mov	dph,@r0
      0024CE 08               [12] 7693 	inc	r0
      0024CF 86 F0            [24] 7694 	mov	b,@r0
      0024D1 ED               [12] 7695 	mov	a,r5
      0024D2 12r00r00         [24] 7696 	lcall	__gptrput
      0024D5 A3               [24] 7697 	inc	dptr
      0024D6 EE               [12] 7698 	mov	a,r6
      0024D7 12r00r00         [24] 7699 	lcall	__gptrput
      0024DA A3               [24] 7700 	inc	dptr
      0024DB EF               [12] 7701 	mov	a,r7
      0024DC 12r00r00         [24] 7702 	lcall	__gptrput
      0024DF                       7703 00102$:
      0024DF 8A 82            [24] 7704 	mov	dpl,r2
      0024E1 8B 83            [24] 7705 	mov	dph,r3
      0024E3 8C F0            [24] 7706 	mov	b,r4
      0024E5 74 00            [12] 7707 	mov	a,#0x00
      0024E7 12r00r00         [24] 7708 	lcall	__gptrput
      0024EA A3               [24] 7709 	inc	dptr
      0024EB 12r00r00         [24] 7710 	lcall	__gptrput
      0024EE A3               [24] 7711 	inc	dptr
      0024EF 12r00r00         [24] 7712 	lcall	__gptrput
      0024F2 E5*00            [12] 7713 	mov	a,_bp
      0024F4 24 16            [12] 7714 	add	a,#0x16
      0024F6 F8               [12] 7715 	mov	r0,a
      0024F7 86 82            [24] 7716 	mov	dpl,@r0
      0024F9 08               [12] 7717 	inc	r0
      0024FA 86 83            [24] 7718 	mov	dph,@r0
      0024FC 08               [12] 7719 	inc	r0
      0024FD 86 F0            [24] 7720 	mov	b,@r0
      0024FF 12r00r00         [24] 7721 	lcall	__gptrget
      002502 FF               [12] 7722 	mov	r7,a
      002503 1F               [12] 7723 	dec	r7
      002504 E5*00            [12] 7724 	mov	a,_bp
      002506 24 16            [12] 7725 	add	a,#0x16
      002508 F8               [12] 7726 	mov	r0,a
      002509 86 82            [24] 7727 	mov	dpl,@r0
      00250B 08               [12] 7728 	inc	r0
      00250C 86 83            [24] 7729 	mov	dph,@r0
      00250E 08               [12] 7730 	inc	r0
      00250F 86 F0            [24] 7731 	mov	b,@r0
      002511 EF               [12] 7732 	mov	a,r7
      002512 12r00r00         [24] 7733 	lcall	__gptrput
                           002515  7734 	C$tasks.c$3286$2_0$324 ==.
                                   7735 ;	tasks.c:3286: listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
      002515 E5*00            [12] 7736 	mov	a,_bp
      002517 24 13            [12] 7737 	add	a,#0x13
      002519 F8               [12] 7738 	mov	r0,a
      00251A 74 03            [12] 7739 	mov	a,#0x03
      00251C 26               [12] 7740 	add	a,@r0
      00251D FD               [12] 7741 	mov	r5,a
      00251E 74 00            [12] 7742 	mov	a,#0x00
      002520 08               [12] 7743 	inc	r0
      002521 36               [12] 7744 	addc	a,@r0
      002522 FE               [12] 7745 	mov	r6,a
      002523 08               [12] 7746 	inc	r0
      002524 86 07            [24] 7747 	mov	ar7,@r0
      002526 E5*00            [12] 7748 	mov	a,_bp
      002528 24 07            [12] 7749 	add	a,#0x07
      00252A F8               [12] 7750 	mov	r0,a
      00252B 74 0B            [12] 7751 	mov	a,#0x0b
      00252D 2D               [12] 7752 	add	a,r5
      00252E F6               [12] 7753 	mov	@r0,a
      00252F 74 00            [12] 7754 	mov	a,#0x00
      002531 3E               [12] 7755 	addc	a,r6
      002532 08               [12] 7756 	inc	r0
      002533 F6               [12] 7757 	mov	@r0,a
      002534 08               [12] 7758 	inc	r0
      002535 A6 07            [24] 7759 	mov	@r0,ar7
      002537 E5*00            [12] 7760 	mov	a,_bp
      002539 24 07            [12] 7761 	add	a,#0x07
      00253B F8               [12] 7762 	mov	r0,a
      00253C 86 82            [24] 7763 	mov	dpl,@r0
      00253E 08               [12] 7764 	inc	r0
      00253F 86 83            [24] 7765 	mov	dph,@r0
      002541 08               [12] 7766 	inc	r0
      002542 86 F0            [24] 7767 	mov	b,@r0
      002544 E5*00            [12] 7768 	mov	a,_bp
      002546 24 16            [12] 7769 	add	a,#0x16
      002548 F9               [12] 7770 	mov	r1,a
      002549 12r00r00         [24] 7771 	lcall	__gptrget
      00254C F7               [12] 7772 	mov	@r1,a
      00254D A3               [24] 7773 	inc	dptr
      00254E 12r00r00         [24] 7774 	lcall	__gptrget
      002551 09               [12] 7775 	inc	r1
      002552 F7               [12] 7776 	mov	@r1,a
      002553 A3               [24] 7777 	inc	dptr
      002554 12r00r00         [24] 7778 	lcall	__gptrget
      002557 09               [12] 7779 	inc	r1
      002558 F7               [12] 7780 	mov	@r1,a
      002559 E5*00            [12] 7781 	mov	a,_bp
      00255B 24 0A            [12] 7782 	add	a,#0x0a
      00255D F8               [12] 7783 	mov	r0,a
      00255E 74 02            [12] 7784 	mov	a,#0x02
      002560 2D               [12] 7785 	add	a,r5
      002561 F6               [12] 7786 	mov	@r0,a
      002562 74 00            [12] 7787 	mov	a,#0x00
      002564 3E               [12] 7788 	addc	a,r6
      002565 08               [12] 7789 	inc	r0
      002566 F6               [12] 7790 	mov	@r0,a
      002567 08               [12] 7791 	inc	r0
      002568 A6 07            [24] 7792 	mov	@r0,ar7
      00256A E5*00            [12] 7793 	mov	a,_bp
      00256C 24 0A            [12] 7794 	add	a,#0x0a
      00256E F8               [12] 7795 	mov	r0,a
      00256F 86 82            [24] 7796 	mov	dpl,@r0
      002571 08               [12] 7797 	inc	r0
      002572 86 83            [24] 7798 	mov	dph,@r0
      002574 08               [12] 7799 	inc	r0
      002575 86 F0            [24] 7800 	mov	b,@r0
      002577 12r00r00         [24] 7801 	lcall	__gptrget
      00257A FA               [12] 7802 	mov	r2,a
      00257B A3               [24] 7803 	inc	dptr
      00257C 12r00r00         [24] 7804 	lcall	__gptrget
      00257F FB               [12] 7805 	mov	r3,a
      002580 A3               [24] 7806 	inc	dptr
      002581 12r00r00         [24] 7807 	lcall	__gptrget
      002584 FC               [12] 7808 	mov	r4,a
      002585 E5*00            [12] 7809 	mov	a,_bp
      002587 24 10            [12] 7810 	add	a,#0x10
      002589 F8               [12] 7811 	mov	r0,a
      00258A 74 05            [12] 7812 	mov	a,#0x05
      00258C 2A               [12] 7813 	add	a,r2
      00258D F6               [12] 7814 	mov	@r0,a
      00258E 74 00            [12] 7815 	mov	a,#0x00
      002590 3B               [12] 7816 	addc	a,r3
      002591 08               [12] 7817 	inc	r0
      002592 F6               [12] 7818 	mov	@r0,a
      002593 08               [12] 7819 	inc	r0
      002594 A6 04            [24] 7820 	mov	@r0,ar4
      002596 E5*00            [12] 7821 	mov	a,_bp
      002598 24 04            [12] 7822 	add	a,#0x04
      00259A F8               [12] 7823 	mov	r0,a
      00259B 74 05            [12] 7824 	mov	a,#0x05
      00259D 2D               [12] 7825 	add	a,r5
      00259E F6               [12] 7826 	mov	@r0,a
      00259F 74 00            [12] 7827 	mov	a,#0x00
      0025A1 3E               [12] 7828 	addc	a,r6
      0025A2 08               [12] 7829 	inc	r0
      0025A3 F6               [12] 7830 	mov	@r0,a
      0025A4 08               [12] 7831 	inc	r0
      0025A5 A6 07            [24] 7832 	mov	@r0,ar7
      0025A7 E5*00            [12] 7833 	mov	a,_bp
      0025A9 24 04            [12] 7834 	add	a,#0x04
      0025AB F8               [12] 7835 	mov	r0,a
      0025AC 86 82            [24] 7836 	mov	dpl,@r0
      0025AE 08               [12] 7837 	inc	r0
      0025AF 86 83            [24] 7838 	mov	dph,@r0
      0025B1 08               [12] 7839 	inc	r0
      0025B2 86 F0            [24] 7840 	mov	b,@r0
      0025B4 12r00r00         [24] 7841 	lcall	__gptrget
      0025B7 FA               [12] 7842 	mov	r2,a
      0025B8 A3               [24] 7843 	inc	dptr
      0025B9 12r00r00         [24] 7844 	lcall	__gptrget
      0025BC FB               [12] 7845 	mov	r3,a
      0025BD A3               [24] 7846 	inc	dptr
      0025BE 12r00r00         [24] 7847 	lcall	__gptrget
      0025C1 FC               [12] 7848 	mov	r4,a
      0025C2 E5*00            [12] 7849 	mov	a,_bp
      0025C4 24 10            [12] 7850 	add	a,#0x10
      0025C6 F8               [12] 7851 	mov	r0,a
      0025C7 86 82            [24] 7852 	mov	dpl,@r0
      0025C9 08               [12] 7853 	inc	r0
      0025CA 86 83            [24] 7854 	mov	dph,@r0
      0025CC 08               [12] 7855 	inc	r0
      0025CD 86 F0            [24] 7856 	mov	b,@r0
      0025CF EA               [12] 7857 	mov	a,r2
      0025D0 12r00r00         [24] 7858 	lcall	__gptrput
      0025D3 A3               [24] 7859 	inc	dptr
      0025D4 EB               [12] 7860 	mov	a,r3
      0025D5 12r00r00         [24] 7861 	lcall	__gptrput
      0025D8 A3               [24] 7862 	inc	dptr
      0025D9 EC               [12] 7863 	mov	a,r4
      0025DA 12r00r00         [24] 7864 	lcall	__gptrput
      0025DD E5*00            [12] 7865 	mov	a,_bp
      0025DF 24 04            [12] 7866 	add	a,#0x04
      0025E1 F8               [12] 7867 	mov	r0,a
      0025E2 86 82            [24] 7868 	mov	dpl,@r0
      0025E4 08               [12] 7869 	inc	r0
      0025E5 86 83            [24] 7870 	mov	dph,@r0
      0025E7 08               [12] 7871 	inc	r0
      0025E8 86 F0            [24] 7872 	mov	b,@r0
      0025EA 12r00r00         [24] 7873 	lcall	__gptrget
      0025ED FA               [12] 7874 	mov	r2,a
      0025EE A3               [24] 7875 	inc	dptr
      0025EF 12r00r00         [24] 7876 	lcall	__gptrget
      0025F2 FB               [12] 7877 	mov	r3,a
      0025F3 A3               [24] 7878 	inc	dptr
      0025F4 12r00r00         [24] 7879 	lcall	__gptrget
      0025F7 FC               [12] 7880 	mov	r4,a
      0025F8 E5*00            [12] 7881 	mov	a,_bp
      0025FA 24 10            [12] 7882 	add	a,#0x10
      0025FC F8               [12] 7883 	mov	r0,a
      0025FD 74 02            [12] 7884 	mov	a,#0x02
      0025FF 2A               [12] 7885 	add	a,r2
      002600 F6               [12] 7886 	mov	@r0,a
      002601 74 00            [12] 7887 	mov	a,#0x00
      002603 3B               [12] 7888 	addc	a,r3
      002604 08               [12] 7889 	inc	r0
      002605 F6               [12] 7890 	mov	@r0,a
      002606 08               [12] 7891 	inc	r0
      002607 A6 04            [24] 7892 	mov	@r0,ar4
      002609 E5*00            [12] 7893 	mov	a,_bp
      00260B 24 0A            [12] 7894 	add	a,#0x0a
      00260D F8               [12] 7895 	mov	r0,a
      00260E 86 82            [24] 7896 	mov	dpl,@r0
      002610 08               [12] 7897 	inc	r0
      002611 86 83            [24] 7898 	mov	dph,@r0
      002613 08               [12] 7899 	inc	r0
      002614 86 F0            [24] 7900 	mov	b,@r0
      002616 12r00r00         [24] 7901 	lcall	__gptrget
      002619 FA               [12] 7902 	mov	r2,a
      00261A A3               [24] 7903 	inc	dptr
      00261B 12r00r00         [24] 7904 	lcall	__gptrget
      00261E FB               [12] 7905 	mov	r3,a
      00261F A3               [24] 7906 	inc	dptr
      002620 12r00r00         [24] 7907 	lcall	__gptrget
      002623 FC               [12] 7908 	mov	r4,a
      002624 E5*00            [12] 7909 	mov	a,_bp
      002626 24 10            [12] 7910 	add	a,#0x10
      002628 F8               [12] 7911 	mov	r0,a
      002629 86 82            [24] 7912 	mov	dpl,@r0
      00262B 08               [12] 7913 	inc	r0
      00262C 86 83            [24] 7914 	mov	dph,@r0
      00262E 08               [12] 7915 	inc	r0
      00262F 86 F0            [24] 7916 	mov	b,@r0
      002631 EA               [12] 7917 	mov	a,r2
      002632 12r00r00         [24] 7918 	lcall	__gptrput
      002635 A3               [24] 7919 	inc	dptr
      002636 EB               [12] 7920 	mov	a,r3
      002637 12r00r00         [24] 7921 	lcall	__gptrput
      00263A A3               [24] 7922 	inc	dptr
      00263B EC               [12] 7923 	mov	a,r4
      00263C 12r00r00         [24] 7924 	lcall	__gptrput
      00263F E5*00            [12] 7925 	mov	a,_bp
      002641 24 16            [12] 7926 	add	a,#0x16
      002643 F8               [12] 7927 	mov	r0,a
      002644 E5*00            [12] 7928 	mov	a,_bp
      002646 24 10            [12] 7929 	add	a,#0x10
      002648 F9               [12] 7930 	mov	r1,a
      002649 74 01            [12] 7931 	mov	a,#0x01
      00264B 26               [12] 7932 	add	a,@r0
      00264C F7               [12] 7933 	mov	@r1,a
      00264D 74 00            [12] 7934 	mov	a,#0x00
      00264F 08               [12] 7935 	inc	r0
      002650 36               [12] 7936 	addc	a,@r0
      002651 09               [12] 7937 	inc	r1
      002652 F7               [12] 7938 	mov	@r1,a
      002653 08               [12] 7939 	inc	r0
      002654 E6               [12] 7940 	mov	a,@r0
      002655 09               [12] 7941 	inc	r1
      002656 F7               [12] 7942 	mov	@r1,a
      002657 E5*00            [12] 7943 	mov	a,_bp
      002659 24 10            [12] 7944 	add	a,#0x10
      00265B F8               [12] 7945 	mov	r0,a
      00265C 86 82            [24] 7946 	mov	dpl,@r0
      00265E 08               [12] 7947 	inc	r0
      00265F 86 83            [24] 7948 	mov	dph,@r0
      002661 08               [12] 7949 	inc	r0
      002662 86 F0            [24] 7950 	mov	b,@r0
      002664 12r00r00         [24] 7951 	lcall	__gptrget
      002667 FA               [12] 7952 	mov	r2,a
      002668 A3               [24] 7953 	inc	dptr
      002669 12r00r00         [24] 7954 	lcall	__gptrget
      00266C FB               [12] 7955 	mov	r3,a
      00266D A3               [24] 7956 	inc	dptr
      00266E 12r00r00         [24] 7957 	lcall	__gptrget
      002671 FC               [12] 7958 	mov	r4,a
      002672 C0 05            [24] 7959 	push	ar5
      002674 C0 06            [24] 7960 	push	ar6
      002676 C0 07            [24] 7961 	push	ar7
      002678 8A 82            [24] 7962 	mov	dpl,r2
      00267A 8B 83            [24] 7963 	mov	dph,r3
      00267C 8C F0            [24] 7964 	mov	b,r4
      00267E 12r00r00         [24] 7965 	lcall	___gptr_cmp
      002681 15 81            [12] 7966 	dec	sp
      002683 15 81            [12] 7967 	dec	sp
      002685 15 81            [12] 7968 	dec	sp
      002687 70 02            [24] 7969 	jnz	00129$
      002689 80 03            [24] 7970 	sjmp	00130$
      00268B                       7971 00129$:
      00268B 02r26rC4         [24] 7972 	ljmp	00104$
      00268E                       7973 00130$:
      00268E E5*00            [12] 7974 	mov	a,_bp
      002690 24 04            [12] 7975 	add	a,#0x04
      002692 F8               [12] 7976 	mov	r0,a
      002693 86 82            [24] 7977 	mov	dpl,@r0
      002695 08               [12] 7978 	inc	r0
      002696 86 83            [24] 7979 	mov	dph,@r0
      002698 08               [12] 7980 	inc	r0
      002699 86 F0            [24] 7981 	mov	b,@r0
      00269B 12r00r00         [24] 7982 	lcall	__gptrget
      00269E FA               [12] 7983 	mov	r2,a
      00269F A3               [24] 7984 	inc	dptr
      0026A0 12r00r00         [24] 7985 	lcall	__gptrget
      0026A3 FB               [12] 7986 	mov	r3,a
      0026A4 A3               [24] 7987 	inc	dptr
      0026A5 12r00r00         [24] 7988 	lcall	__gptrget
      0026A8 FC               [12] 7989 	mov	r4,a
      0026A9 E5*00            [12] 7990 	mov	a,_bp
      0026AB 24 10            [12] 7991 	add	a,#0x10
      0026AD F8               [12] 7992 	mov	r0,a
      0026AE 86 82            [24] 7993 	mov	dpl,@r0
      0026B0 08               [12] 7994 	inc	r0
      0026B1 86 83            [24] 7995 	mov	dph,@r0
      0026B3 08               [12] 7996 	inc	r0
      0026B4 86 F0            [24] 7997 	mov	b,@r0
      0026B6 EA               [12] 7998 	mov	a,r2
      0026B7 12r00r00         [24] 7999 	lcall	__gptrput
      0026BA A3               [24] 8000 	inc	dptr
      0026BB EB               [12] 8001 	mov	a,r3
      0026BC 12r00r00         [24] 8002 	lcall	__gptrput
      0026BF A3               [24] 8003 	inc	dptr
      0026C0 EC               [12] 8004 	mov	a,r4
      0026C1 12r00r00         [24] 8005 	lcall	__gptrput
      0026C4                       8006 00104$:
      0026C4 C0 05            [24] 8007 	push	ar5
      0026C6 C0 06            [24] 8008 	push	ar6
      0026C8 C0 07            [24] 8009 	push	ar7
      0026CA E5*00            [12] 8010 	mov	a,_bp
      0026CC 24 07            [12] 8011 	add	a,#0x07
      0026CE F8               [12] 8012 	mov	r0,a
      0026CF 86 82            [24] 8013 	mov	dpl,@r0
      0026D1 08               [12] 8014 	inc	r0
      0026D2 86 83            [24] 8015 	mov	dph,@r0
      0026D4 08               [12] 8016 	inc	r0
      0026D5 86 F0            [24] 8017 	mov	b,@r0
      0026D7 74 00            [12] 8018 	mov	a,#0x00
      0026D9 12r00r00         [24] 8019 	lcall	__gptrput
      0026DC A3               [24] 8020 	inc	dptr
      0026DD 12r00r00         [24] 8021 	lcall	__gptrput
      0026E0 A3               [24] 8022 	inc	dptr
      0026E1 12r00r00         [24] 8023 	lcall	__gptrput
      0026E4 E5*00            [12] 8024 	mov	a,_bp
      0026E6 24 16            [12] 8025 	add	a,#0x16
      0026E8 F8               [12] 8026 	mov	r0,a
      0026E9 86 82            [24] 8027 	mov	dpl,@r0
      0026EB 08               [12] 8028 	inc	r0
      0026EC 86 83            [24] 8029 	mov	dph,@r0
      0026EE 08               [12] 8030 	inc	r0
      0026EF 86 F0            [24] 8031 	mov	b,@r0
      0026F1 12r00r00         [24] 8032 	lcall	__gptrget
      0026F4 FC               [12] 8033 	mov	r4,a
      0026F5 1C               [12] 8034 	dec	r4
      0026F6 E5*00            [12] 8035 	mov	a,_bp
      0026F8 24 16            [12] 8036 	add	a,#0x16
      0026FA F8               [12] 8037 	mov	r0,a
      0026FB 86 82            [24] 8038 	mov	dpl,@r0
      0026FD 08               [12] 8039 	inc	r0
      0026FE 86 83            [24] 8040 	mov	dph,@r0
      002700 08               [12] 8041 	inc	r0
      002701 86 F0            [24] 8042 	mov	b,@r0
      002703 EC               [12] 8043 	mov	a,r4
      002704 12r00r00         [24] 8044 	lcall	__gptrput
                           002707  8045 	C$tasks.c$3287$2_0$326 ==.
                                   8046 ;	tasks.c:3287: prvAddTaskToReadyList( pxUnblockedTCB );
      002707 E5*00            [12] 8047 	mov	a,_bp
      002709 24 13            [12] 8048 	add	a,#0x13
      00270B F8               [12] 8049 	mov	r0,a
      00270C E5*00            [12] 8050 	mov	a,_bp
      00270E 24 0D            [12] 8051 	add	a,#0x0d
      002710 F9               [12] 8052 	mov	r1,a
      002711 74 1F            [12] 8053 	mov	a,#0x1f
      002713 26               [12] 8054 	add	a,@r0
      002714 F7               [12] 8055 	mov	@r1,a
      002715 74 00            [12] 8056 	mov	a,#0x00
      002717 08               [12] 8057 	inc	r0
      002718 36               [12] 8058 	addc	a,@r0
      002719 09               [12] 8059 	inc	r1
      00271A F7               [12] 8060 	mov	@r1,a
      00271B 08               [12] 8061 	inc	r0
      00271C E6               [12] 8062 	mov	a,@r0
      00271D 09               [12] 8063 	inc	r1
      00271E F7               [12] 8064 	mov	@r1,a
      00271F E5*00            [12] 8065 	mov	a,_bp
      002721 24 0D            [12] 8066 	add	a,#0x0d
      002723 F8               [12] 8067 	mov	r0,a
      002724 86 82            [24] 8068 	mov	dpl,@r0
      002726 08               [12] 8069 	inc	r0
      002727 86 83            [24] 8070 	mov	dph,@r0
      002729 08               [12] 8071 	inc	r0
      00272A 86 F0            [24] 8072 	mov	b,@r0
      00272C 12r00r00         [24] 8073 	lcall	__gptrget
      00272F FC               [12] 8074 	mov	r4,a
      002730 90r00r07         [24] 8075 	mov	dptr,#_uxTopReadyPriority
      002733 E0               [24] 8076 	movx	a,@dptr
      002734 FF               [12] 8077 	mov	r7,a
      002735 C3               [12] 8078 	clr	c
      002736 EF               [12] 8079 	mov	a,r7
      002737 9C               [12] 8080 	subb	a,r4
      002738 D0 07            [24] 8081 	pop	ar7
      00273A D0 06            [24] 8082 	pop	ar6
      00273C D0 05            [24] 8083 	pop	ar5
      00273E 40 03            [24] 8084 	jc	00131$
      002740 02r27r48         [24] 8085 	ljmp	00106$
      002743                       8086 00131$:
      002743 90r00r07         [24] 8087 	mov	dptr,#_uxTopReadyPriority
      002746 EC               [12] 8088 	mov	a,r4
      002747 F0               [24] 8089 	movx	@dptr,a
      002748                       8090 00106$:
      002748 E5*00            [12] 8091 	mov	a,_bp
      00274A 24 0D            [12] 8092 	add	a,#0x0d
      00274C F8               [12] 8093 	mov	r0,a
      00274D 86 82            [24] 8094 	mov	dpl,@r0
      00274F 08               [12] 8095 	inc	r0
      002750 86 83            [24] 8096 	mov	dph,@r0
      002752 08               [12] 8097 	inc	r0
      002753 86 F0            [24] 8098 	mov	b,@r0
      002755 12r00r00         [24] 8099 	lcall	__gptrget
      002758 FC               [12] 8100 	mov	r4,a
      002759 EC               [12] 8101 	mov	a,r4
      00275A 75 F0 0C         [24] 8102 	mov	b,#0x0c
      00275D A4               [48] 8103 	mul	ab
      00275E 24r00            [12] 8104 	add	a,#_pxReadyTasksLists
      002760 FB               [12] 8105 	mov	r3,a
      002761 74s00            [12] 8106 	mov	a,#(_pxReadyTasksLists >> 8)
      002763 35 F0            [12] 8107 	addc	a,b
      002765 FC               [12] 8108 	mov	r4,a
      002766 8B 82            [24] 8109 	mov	dpl,r3
      002768 8C 83            [24] 8110 	mov	dph,r4
      00276A A3               [24] 8111 	inc	dptr
      00276B E0               [24] 8112 	movx	a,@dptr
      00276C FA               [12] 8113 	mov	r2,a
      00276D A3               [24] 8114 	inc	dptr
      00276E E0               [24] 8115 	movx	a,@dptr
      00276F FB               [12] 8116 	mov	r3,a
      002770 A3               [24] 8117 	inc	dptr
      002771 E0               [24] 8118 	movx	a,@dptr
      002772 FC               [12] 8119 	mov	r4,a
      002773 E5*00            [12] 8120 	mov	a,_bp
      002775 24 0A            [12] 8121 	add	a,#0x0a
      002777 F8               [12] 8122 	mov	r0,a
      002778 86 82            [24] 8123 	mov	dpl,@r0
      00277A 08               [12] 8124 	inc	r0
      00277B 86 83            [24] 8125 	mov	dph,@r0
      00277D 08               [12] 8126 	inc	r0
      00277E 86 F0            [24] 8127 	mov	b,@r0
      002780 EA               [12] 8128 	mov	a,r2
      002781 12r00r00         [24] 8129 	lcall	__gptrput
      002784 A3               [24] 8130 	inc	dptr
      002785 EB               [12] 8131 	mov	a,r3
      002786 12r00r00         [24] 8132 	lcall	__gptrput
      002789 A3               [24] 8133 	inc	dptr
      00278A EC               [12] 8134 	mov	a,r4
      00278B 12r00r00         [24] 8135 	lcall	__gptrput
      00278E E5*00            [12] 8136 	mov	a,_bp
      002790 24 10            [12] 8137 	add	a,#0x10
      002792 F8               [12] 8138 	mov	r0,a
      002793 74 05            [12] 8139 	mov	a,#0x05
      002795 2A               [12] 8140 	add	a,r2
      002796 F6               [12] 8141 	mov	@r0,a
      002797 74 00            [12] 8142 	mov	a,#0x00
      002799 3B               [12] 8143 	addc	a,r3
      00279A 08               [12] 8144 	inc	r0
      00279B F6               [12] 8145 	mov	@r0,a
      00279C 08               [12] 8146 	inc	r0
      00279D A6 04            [24] 8147 	mov	@r0,ar4
      00279F E5*00            [12] 8148 	mov	a,_bp
      0027A1 24 10            [12] 8149 	add	a,#0x10
      0027A3 F8               [12] 8150 	mov	r0,a
      0027A4 86 82            [24] 8151 	mov	dpl,@r0
      0027A6 08               [12] 8152 	inc	r0
      0027A7 86 83            [24] 8153 	mov	dph,@r0
      0027A9 08               [12] 8154 	inc	r0
      0027AA 86 F0            [24] 8155 	mov	b,@r0
      0027AC 12r00r00         [24] 8156 	lcall	__gptrget
      0027AF FA               [12] 8157 	mov	r2,a
      0027B0 A3               [24] 8158 	inc	dptr
      0027B1 12r00r00         [24] 8159 	lcall	__gptrget
      0027B4 FB               [12] 8160 	mov	r3,a
      0027B5 A3               [24] 8161 	inc	dptr
      0027B6 12r00r00         [24] 8162 	lcall	__gptrget
      0027B9 FC               [12] 8163 	mov	r4,a
      0027BA E5*00            [12] 8164 	mov	a,_bp
      0027BC 24 04            [12] 8165 	add	a,#0x04
      0027BE F8               [12] 8166 	mov	r0,a
      0027BF 86 82            [24] 8167 	mov	dpl,@r0
      0027C1 08               [12] 8168 	inc	r0
      0027C2 86 83            [24] 8169 	mov	dph,@r0
      0027C4 08               [12] 8170 	inc	r0
      0027C5 86 F0            [24] 8171 	mov	b,@r0
      0027C7 EA               [12] 8172 	mov	a,r2
      0027C8 12r00r00         [24] 8173 	lcall	__gptrput
      0027CB A3               [24] 8174 	inc	dptr
      0027CC EB               [12] 8175 	mov	a,r3
      0027CD 12r00r00         [24] 8176 	lcall	__gptrput
      0027D0 A3               [24] 8177 	inc	dptr
      0027D1 EC               [12] 8178 	mov	a,r4
      0027D2 12r00r00         [24] 8179 	lcall	__gptrput
      0027D5 E5*00            [12] 8180 	mov	a,_bp
      0027D7 24 10            [12] 8181 	add	a,#0x10
      0027D9 F8               [12] 8182 	mov	r0,a
      0027DA 86 82            [24] 8183 	mov	dpl,@r0
      0027DC 08               [12] 8184 	inc	r0
      0027DD 86 83            [24] 8185 	mov	dph,@r0
      0027DF 08               [12] 8186 	inc	r0
      0027E0 86 F0            [24] 8187 	mov	b,@r0
      0027E2 12r00r00         [24] 8188 	lcall	__gptrget
      0027E5 FA               [12] 8189 	mov	r2,a
      0027E6 A3               [24] 8190 	inc	dptr
      0027E7 12r00r00         [24] 8191 	lcall	__gptrget
      0027EA FB               [12] 8192 	mov	r3,a
      0027EB A3               [24] 8193 	inc	dptr
      0027EC 12r00r00         [24] 8194 	lcall	__gptrget
      0027EF FC               [12] 8195 	mov	r4,a
      0027F0 74 02            [12] 8196 	mov	a,#0x02
      0027F2 2A               [12] 8197 	add	a,r2
      0027F3 FA               [12] 8198 	mov	r2,a
      0027F4 74 00            [12] 8199 	mov	a,#0x00
      0027F6 3B               [12] 8200 	addc	a,r3
      0027F7 FB               [12] 8201 	mov	r3,a
      0027F8 8A 82            [24] 8202 	mov	dpl,r2
      0027FA 8B 83            [24] 8203 	mov	dph,r3
      0027FC 8C F0            [24] 8204 	mov	b,r4
      0027FE ED               [12] 8205 	mov	a,r5
      0027FF 12r00r00         [24] 8206 	lcall	__gptrput
      002802 A3               [24] 8207 	inc	dptr
      002803 EE               [12] 8208 	mov	a,r6
      002804 12r00r00         [24] 8209 	lcall	__gptrput
      002807 A3               [24] 8210 	inc	dptr
      002808 EF               [12] 8211 	mov	a,r7
      002809 12r00r00         [24] 8212 	lcall	__gptrput
      00280C E5*00            [12] 8213 	mov	a,_bp
      00280E 24 10            [12] 8214 	add	a,#0x10
      002810 F8               [12] 8215 	mov	r0,a
      002811 86 82            [24] 8216 	mov	dpl,@r0
      002813 08               [12] 8217 	inc	r0
      002814 86 83            [24] 8218 	mov	dph,@r0
      002816 08               [12] 8219 	inc	r0
      002817 86 F0            [24] 8220 	mov	b,@r0
      002819 ED               [12] 8221 	mov	a,r5
      00281A 12r00r00         [24] 8222 	lcall	__gptrput
      00281D A3               [24] 8223 	inc	dptr
      00281E EE               [12] 8224 	mov	a,r6
      00281F 12r00r00         [24] 8225 	lcall	__gptrput
      002822 A3               [24] 8226 	inc	dptr
      002823 EF               [12] 8227 	mov	a,r7
      002824 12r00r00         [24] 8228 	lcall	__gptrput
      002827 E5*00            [12] 8229 	mov	a,_bp
      002829 24 0D            [12] 8230 	add	a,#0x0d
      00282B F8               [12] 8231 	mov	r0,a
      00282C 86 82            [24] 8232 	mov	dpl,@r0
      00282E 08               [12] 8233 	inc	r0
      00282F 86 83            [24] 8234 	mov	dph,@r0
      002831 08               [12] 8235 	inc	r0
      002832 86 F0            [24] 8236 	mov	b,@r0
      002834 12r00r00         [24] 8237 	lcall	__gptrget
      002837 FF               [12] 8238 	mov	r7,a
      002838 EF               [12] 8239 	mov	a,r7
      002839 75 F0 0C         [24] 8240 	mov	b,#0x0c
      00283C A4               [48] 8241 	mul	ab
      00283D 24r00            [12] 8242 	add	a,#_pxReadyTasksLists
      00283F FE               [12] 8243 	mov	r6,a
      002840 74s00            [12] 8244 	mov	a,#(_pxReadyTasksLists >> 8)
      002842 35 F0            [12] 8245 	addc	a,b
      002844 FF               [12] 8246 	mov	r7,a
      002845 7D 00            [12] 8247 	mov	r5,#0x00
      002847 E5*00            [12] 8248 	mov	a,_bp
      002849 24 07            [12] 8249 	add	a,#0x07
      00284B F8               [12] 8250 	mov	r0,a
      00284C 86 82            [24] 8251 	mov	dpl,@r0
      00284E 08               [12] 8252 	inc	r0
      00284F 86 83            [24] 8253 	mov	dph,@r0
      002851 08               [12] 8254 	inc	r0
      002852 86 F0            [24] 8255 	mov	b,@r0
      002854 EE               [12] 8256 	mov	a,r6
      002855 12r00r00         [24] 8257 	lcall	__gptrput
      002858 A3               [24] 8258 	inc	dptr
      002859 EF               [12] 8259 	mov	a,r7
      00285A 12r00r00         [24] 8260 	lcall	__gptrput
      00285D A3               [24] 8261 	inc	dptr
      00285E ED               [12] 8262 	mov	a,r5
      00285F 12r00r00         [24] 8263 	lcall	__gptrput
      002862 E5*00            [12] 8264 	mov	a,_bp
      002864 24 0D            [12] 8265 	add	a,#0x0d
      002866 F8               [12] 8266 	mov	r0,a
      002867 86 82            [24] 8267 	mov	dpl,@r0
      002869 08               [12] 8268 	inc	r0
      00286A 86 83            [24] 8269 	mov	dph,@r0
      00286C 08               [12] 8270 	inc	r0
      00286D 86 F0            [24] 8271 	mov	b,@r0
      00286F 12r00r00         [24] 8272 	lcall	__gptrget
      002872 FF               [12] 8273 	mov	r7,a
      002873 EF               [12] 8274 	mov	a,r7
      002874 75 F0 0C         [24] 8275 	mov	b,#0x0c
      002877 A4               [48] 8276 	mul	ab
      002878 24r00            [12] 8277 	add	a,#_pxReadyTasksLists
      00287A FE               [12] 8278 	mov	r6,a
      00287B 74s00            [12] 8279 	mov	a,#(_pxReadyTasksLists >> 8)
      00287D 35 F0            [12] 8280 	addc	a,b
      00287F FF               [12] 8281 	mov	r7,a
      002880 8E 82            [24] 8282 	mov	dpl,r6
      002882 8F 83            [24] 8283 	mov	dph,r7
      002884 E0               [24] 8284 	movx	a,@dptr
      002885 FD               [12] 8285 	mov	r5,a
      002886 0D               [12] 8286 	inc	r5
      002887 8E 82            [24] 8287 	mov	dpl,r6
      002889 8F 83            [24] 8288 	mov	dph,r7
      00288B ED               [12] 8289 	mov	a,r5
      00288C F0               [24] 8290 	movx	@dptr,a
                           00288D  8291 	C$tasks.c$3289$1_0$321 ==.
                                   8292 ;	tasks.c:3289: if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
      00288D E5*00            [12] 8293 	mov	a,_bp
      00288F 24 0D            [12] 8294 	add	a,#0x0d
      002891 F8               [12] 8295 	mov	r0,a
      002892 86 82            [24] 8296 	mov	dpl,@r0
      002894 08               [12] 8297 	inc	r0
      002895 86 83            [24] 8298 	mov	dph,@r0
      002897 08               [12] 8299 	inc	r0
      002898 86 F0            [24] 8300 	mov	b,@r0
      00289A 12r00r00         [24] 8301 	lcall	__gptrget
      00289D FF               [12] 8302 	mov	r7,a
      00289E 90r00r00         [24] 8303 	mov	dptr,#_pxCurrentTCB
      0028A1 E0               [24] 8304 	movx	a,@dptr
      0028A2 FC               [12] 8305 	mov	r4,a
      0028A3 A3               [24] 8306 	inc	dptr
      0028A4 E0               [24] 8307 	movx	a,@dptr
      0028A5 FD               [12] 8308 	mov	r5,a
      0028A6 A3               [24] 8309 	inc	dptr
      0028A7 E0               [24] 8310 	movx	a,@dptr
      0028A8 FE               [12] 8311 	mov	r6,a
      0028A9 74 1F            [12] 8312 	mov	a,#0x1f
      0028AB 2C               [12] 8313 	add	a,r4
      0028AC FC               [12] 8314 	mov	r4,a
      0028AD 74 00            [12] 8315 	mov	a,#0x00
      0028AF 3D               [12] 8316 	addc	a,r5
      0028B0 FD               [12] 8317 	mov	r5,a
      0028B1 8C 82            [24] 8318 	mov	dpl,r4
      0028B3 8D 83            [24] 8319 	mov	dph,r5
      0028B5 8E F0            [24] 8320 	mov	b,r6
      0028B7 12r00r00         [24] 8321 	lcall	__gptrget
      0028BA FC               [12] 8322 	mov	r4,a
      0028BB C3               [12] 8323 	clr	c
      0028BC EC               [12] 8324 	mov	a,r4
      0028BD 9F               [12] 8325 	subb	a,r7
      0028BE 40 03            [24] 8326 	jc	00132$
      0028C0 02r28rC9         [24] 8327 	ljmp	00109$
      0028C3                       8328 00132$:
                           0028C3  8329 	C$tasks.c$3295$2_0$329 ==.
                                   8330 ;	tasks.c:3295: xYieldPending = pdTRUE;
      0028C3 90r00r0B         [24] 8331 	mov	dptr,#_xYieldPending
      0028C6 74 01            [12] 8332 	mov	a,#0x01
      0028C8 F0               [24] 8333 	movx	@dptr,a
      0028C9                       8334 00109$:
                           0028C9  8335 	C$tasks.c$3297$1_0$321 ==.
                                   8336 ;	tasks.c:3297: }
      0028C9 85*00 81         [24] 8337 	mov	sp,_bp
      0028CC D0*00            [24] 8338 	pop	_bp
                           0028CE  8339 	C$tasks.c$3297$1_0$321 ==.
                           0028CE  8340 	XG$vTaskRemoveFromUnorderedEventList$0$0 ==.
      0028CE 22               [24] 8341 	ret
                                   8342 ;------------------------------------------------------------
                                   8343 ;Allocation info for local variables in function 'vTaskSetTimeOutState'
                                   8344 ;------------------------------------------------------------
                                   8345 ;pxTimeOut                 Allocated to registers r5 r6 r7 
                                   8346 ;------------------------------------------------------------
                           0028CF  8347 	G$vTaskSetTimeOutState$0$0 ==.
                           0028CF  8348 	C$tasks.c$3300$1_0$331 ==.
                                   8349 ;	tasks.c:3300: void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
                                   8350 ;	-----------------------------------------
                                   8351 ;	 function vTaskSetTimeOutState
                                   8352 ;	-----------------------------------------
      0028CF                       8353 _vTaskSetTimeOutState:
      0028CF AD 82            [24] 8354 	mov	r5,dpl
      0028D1 AE 83            [24] 8355 	mov	r6,dph
      0028D3 AF F0            [24] 8356 	mov	r7,b
                           0028D5  8357 	C$tasks.c$3303$1_0$331 ==.
                                   8358 ;	tasks.c:3303: taskENTER_CRITICAL();
      0028D5 C0 E0            [24] 8359 	push ACC 
      0028D7 C0 A8            [24] 8360 	push IE 
                                   8361 ;	assignBit
      0028D9 C2 AF            [12] 8362 	clr	_EA
                           0028DB  8363 	C$tasks.c$3305$2_0$332 ==.
                                   8364 ;	tasks.c:3305: pxTimeOut->xOverflowCount = xNumOfOverflows;
      0028DB 90r00r0C         [24] 8365 	mov	dptr,#_xNumOfOverflows
      0028DE E0               [24] 8366 	movx	a,@dptr
      0028DF FC               [12] 8367 	mov	r4,a
      0028E0 8D 82            [24] 8368 	mov	dpl,r5
      0028E2 8E 83            [24] 8369 	mov	dph,r6
      0028E4 8F F0            [24] 8370 	mov	b,r7
      0028E6 EC               [12] 8371 	mov	a,r4
      0028E7 12r00r00         [24] 8372 	lcall	__gptrput
                           0028EA  8373 	C$tasks.c$3306$2_0$332 ==.
                                   8374 ;	tasks.c:3306: pxTimeOut->xTimeOnEntering = xTickCount;
      0028EA 0D               [12] 8375 	inc	r5
      0028EB BD 00 01         [24] 8376 	cjne	r5,#0x00,00103$
      0028EE 0E               [12] 8377 	inc	r6
      0028EF                       8378 00103$:
      0028EF 90r00r05         [24] 8379 	mov	dptr,#_xTickCount
      0028F2 E0               [24] 8380 	movx	a,@dptr
      0028F3 FB               [12] 8381 	mov	r3,a
      0028F4 A3               [24] 8382 	inc	dptr
      0028F5 E0               [24] 8383 	movx	a,@dptr
      0028F6 FC               [12] 8384 	mov	r4,a
      0028F7 8D 82            [24] 8385 	mov	dpl,r5
      0028F9 8E 83            [24] 8386 	mov	dph,r6
      0028FB 8F F0            [24] 8387 	mov	b,r7
      0028FD EB               [12] 8388 	mov	a,r3
      0028FE 12r00r00         [24] 8389 	lcall	__gptrput
      002901 A3               [24] 8390 	inc	dptr
      002902 EC               [12] 8391 	mov	a,r4
      002903 12r00r00         [24] 8392 	lcall	__gptrput
                           002906  8393 	C$tasks.c$3308$1_0$331 ==.
                                   8394 ;	tasks.c:3308: taskEXIT_CRITICAL();
      002906 D0 E0            [24] 8395 	pop ACC 
      002908 53 E0 80         [24] 8396 	anl	_ACC,#0x80
      00290B E5 E0            [12] 8397 	mov	a,_ACC
      00290D 42 A8            [12] 8398 	orl	_IE,a
      00290F D0 E0            [24] 8399 	pop ACC 
      002911                       8400 00101$:
                           002911  8401 	C$tasks.c$3309$1_0$331 ==.
                                   8402 ;	tasks.c:3309: }
                           002911  8403 	C$tasks.c$3309$1_0$331 ==.
                           002911  8404 	XG$vTaskSetTimeOutState$0$0 ==.
      002911 22               [24] 8405 	ret
                                   8406 ;------------------------------------------------------------
                                   8407 ;Allocation info for local variables in function 'vTaskInternalSetTimeOutState'
                                   8408 ;------------------------------------------------------------
                                   8409 ;pxTimeOut                 Allocated to registers r5 r6 r7 
                                   8410 ;------------------------------------------------------------
                           002912  8411 	G$vTaskInternalSetTimeOutState$0$0 ==.
                           002912  8412 	C$tasks.c$3312$1_0$334 ==.
                                   8413 ;	tasks.c:3312: void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
                                   8414 ;	-----------------------------------------
                                   8415 ;	 function vTaskInternalSetTimeOutState
                                   8416 ;	-----------------------------------------
      002912                       8417 _vTaskInternalSetTimeOutState:
      002912 AD 82            [24] 8418 	mov	r5,dpl
      002914 AE 83            [24] 8419 	mov	r6,dph
      002916 AF F0            [24] 8420 	mov	r7,b
                           002918  8421 	C$tasks.c$3315$1_0$334 ==.
                                   8422 ;	tasks.c:3315: pxTimeOut->xOverflowCount = xNumOfOverflows;
      002918 90r00r0C         [24] 8423 	mov	dptr,#_xNumOfOverflows
      00291B E0               [24] 8424 	movx	a,@dptr
      00291C FC               [12] 8425 	mov	r4,a
      00291D 8D 82            [24] 8426 	mov	dpl,r5
      00291F 8E 83            [24] 8427 	mov	dph,r6
      002921 8F F0            [24] 8428 	mov	b,r7
      002923 EC               [12] 8429 	mov	a,r4
      002924 12r00r00         [24] 8430 	lcall	__gptrput
                           002927  8431 	C$tasks.c$3316$1_0$334 ==.
                                   8432 ;	tasks.c:3316: pxTimeOut->xTimeOnEntering = xTickCount;
      002927 0D               [12] 8433 	inc	r5
      002928 BD 00 01         [24] 8434 	cjne	r5,#0x00,00103$
      00292B 0E               [12] 8435 	inc	r6
      00292C                       8436 00103$:
      00292C 90r00r05         [24] 8437 	mov	dptr,#_xTickCount
      00292F E0               [24] 8438 	movx	a,@dptr
      002930 FB               [12] 8439 	mov	r3,a
      002931 A3               [24] 8440 	inc	dptr
      002932 E0               [24] 8441 	movx	a,@dptr
      002933 FC               [12] 8442 	mov	r4,a
      002934 8D 82            [24] 8443 	mov	dpl,r5
      002936 8E 83            [24] 8444 	mov	dph,r6
      002938 8F F0            [24] 8445 	mov	b,r7
      00293A EB               [12] 8446 	mov	a,r3
      00293B 12r00r00         [24] 8447 	lcall	__gptrput
      00293E A3               [24] 8448 	inc	dptr
      00293F EC               [12] 8449 	mov	a,r4
      002940 12r00r00         [24] 8450 	lcall	__gptrput
      002943                       8451 00101$:
                           002943  8452 	C$tasks.c$3317$1_0$334 ==.
                                   8453 ;	tasks.c:3317: }
                           002943  8454 	C$tasks.c$3317$1_0$334 ==.
                           002943  8455 	XG$vTaskInternalSetTimeOutState$0$0 ==.
      002943 22               [24] 8456 	ret
                                   8457 ;------------------------------------------------------------
                                   8458 ;Allocation info for local variables in function 'xTaskCheckForTimeOut'
                                   8459 ;------------------------------------------------------------
                                   8460 ;pxTicksToWait             Allocated to stack - _bp -5
                                   8461 ;pxTimeOut                 Allocated to stack - _bp +1
                                   8462 ;xReturn                   Allocated to registers r6 
                                   8463 ;xConstTickCount           Allocated to stack - _bp +6
                                   8464 ;xElapsedTime              Allocated to registers r2 r7 
                                   8465 ;sloc0                     Allocated to stack - _bp +4
                                   8466 ;------------------------------------------------------------
                           002944  8467 	G$xTaskCheckForTimeOut$0$0 ==.
                           002944  8468 	C$tasks.c$3320$1_0$336 ==.
                                   8469 ;	tasks.c:3320: BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
                                   8470 ;	-----------------------------------------
                                   8471 ;	 function xTaskCheckForTimeOut
                                   8472 ;	-----------------------------------------
      002944                       8473 _xTaskCheckForTimeOut:
      002944 C0*00            [24] 8474 	push	_bp
      002946 85 81*00         [24] 8475 	mov	_bp,sp
      002949 C0 82            [24] 8476 	push	dpl
      00294B C0 83            [24] 8477 	push	dph
      00294D C0 F0            [24] 8478 	push	b
      00294F E5 81            [12] 8479 	mov	a,sp
      002951 24 04            [12] 8480 	add	a,#0x04
      002953 F5 81            [12] 8481 	mov	sp,a
                           002955  8482 	C$tasks.c$3328$1_0$336 ==.
                                   8483 ;	tasks.c:3328: taskENTER_CRITICAL();
      002955 C0 E0            [24] 8484 	push ACC 
      002957 C0 A8            [24] 8485 	push IE 
                                   8486 ;	assignBit
      002959 C2 AF            [12] 8487 	clr	_EA
                           00295B  8488 	C$tasks.c$3331$3_0$337 ==.
                                   8489 ;	tasks.c:3331: const TickType_t xConstTickCount = xTickCount;
      00295B 90r00r05         [24] 8490 	mov	dptr,#_xTickCount
      00295E E0               [24] 8491 	movx	a,@dptr
      00295F FB               [12] 8492 	mov	r3,a
      002960 A3               [24] 8493 	inc	dptr
      002961 E0               [24] 8494 	movx	a,@dptr
      002962 FC               [12] 8495 	mov	r4,a
      002963 E5*00            [12] 8496 	mov	a,_bp
      002965 24 06            [12] 8497 	add	a,#0x06
      002967 F8               [12] 8498 	mov	r0,a
      002968 A6 03            [24] 8499 	mov	@r0,ar3
      00296A 08               [12] 8500 	inc	r0
      00296B A6 04            [24] 8501 	mov	@r0,ar4
                           00296D  8502 	C$tasks.c$3332$2_0$337 ==.
                                   8503 ;	tasks.c:3332: const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
      00296D A8*00            [24] 8504 	mov	r0,_bp
      00296F 08               [12] 8505 	inc	r0
      002970 74 01            [12] 8506 	mov	a,#0x01
      002972 26               [12] 8507 	add	a,@r0
      002973 FB               [12] 8508 	mov	r3,a
      002974 74 00            [12] 8509 	mov	a,#0x00
      002976 08               [12] 8510 	inc	r0
      002977 36               [12] 8511 	addc	a,@r0
      002978 FA               [12] 8512 	mov	r2,a
      002979 08               [12] 8513 	inc	r0
      00297A 86 04            [24] 8514 	mov	ar4,@r0
      00297C 8B 82            [24] 8515 	mov	dpl,r3
      00297E 8A 83            [24] 8516 	mov	dph,r2
      002980 8C F0            [24] 8517 	mov	b,r4
      002982 12r00r00         [24] 8518 	lcall	__gptrget
      002985 FB               [12] 8519 	mov	r3,a
      002986 A3               [24] 8520 	inc	dptr
      002987 12r00r00         [24] 8521 	lcall	__gptrget
      00298A FC               [12] 8522 	mov	r4,a
      00298B E5*00            [12] 8523 	mov	a,_bp
      00298D 24 06            [12] 8524 	add	a,#0x06
      00298F F8               [12] 8525 	mov	r0,a
      002990 E6               [12] 8526 	mov	a,@r0
      002991 C3               [12] 8527 	clr	c
      002992 9B               [12] 8528 	subb	a,r3
      002993 FE               [12] 8529 	mov	r6,a
      002994 08               [12] 8530 	inc	r0
      002995 E6               [12] 8531 	mov	a,@r0
      002996 9C               [12] 8532 	subb	a,r4
      002997 FF               [12] 8533 	mov	r7,a
      002998 8E 02            [24] 8534 	mov	ar2,r6
                           00299A  8535 	C$tasks.c$3356$2_0$337 ==.
                                   8536 ;	tasks.c:3356: if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
      00299A A8*00            [24] 8537 	mov	r0,_bp
      00299C 08               [12] 8538 	inc	r0
      00299D 86 82            [24] 8539 	mov	dpl,@r0
      00299F 08               [12] 8540 	inc	r0
      0029A0 86 83            [24] 8541 	mov	dph,@r0
      0029A2 08               [12] 8542 	inc	r0
      0029A3 86 F0            [24] 8543 	mov	b,@r0
      0029A5 12r00r00         [24] 8544 	lcall	__gptrget
      0029A8 FE               [12] 8545 	mov	r6,a
      0029A9 90r00r0C         [24] 8546 	mov	dptr,#_xNumOfOverflows
      0029AC E0               [24] 8547 	movx	a,@dptr
      0029AD FD               [12] 8548 	mov	r5,a
      0029AE ED               [12] 8549 	mov	a,r5
      0029AF B5 06 03         [24] 8550 	cjne	a,ar6,00122$
      0029B2 02r29rE6         [24] 8551 	ljmp	00105$
      0029B5                       8552 00122$:
      0029B5 E5*00            [12] 8553 	mov	a,_bp
      0029B7 24 06            [12] 8554 	add	a,#0x06
      0029B9 F8               [12] 8555 	mov	r0,a
      0029BA C3               [12] 8556 	clr	c
      0029BB E6               [12] 8557 	mov	a,@r0
      0029BC 9B               [12] 8558 	subb	a,r3
      0029BD 08               [12] 8559 	inc	r0
      0029BE E6               [12] 8560 	mov	a,@r0
      0029BF 9C               [12] 8561 	subb	a,r4
      0029C0 50 03            [24] 8562 	jnc	00123$
      0029C2 02r29rE6         [24] 8563 	ljmp	00105$
      0029C5                       8564 00123$:
                           0029C5  8565 	C$tasks.c$3363$3_0$338 ==.
                                   8566 ;	tasks.c:3363: xReturn = pdTRUE;
      0029C5 7E 01            [12] 8567 	mov	r6,#0x01
                           0029C7  8568 	C$tasks.c$3364$3_0$338 ==.
                                   8569 ;	tasks.c:3364: *pxTicksToWait = ( TickType_t ) 0;
      0029C7 E5*00            [12] 8570 	mov	a,_bp
      0029C9 24 FB            [12] 8571 	add	a,#0xfb
      0029CB F8               [12] 8572 	mov	r0,a
      0029CC 86 03            [24] 8573 	mov	ar3,@r0
      0029CE 08               [12] 8574 	inc	r0
      0029CF 86 04            [24] 8575 	mov	ar4,@r0
      0029D1 08               [12] 8576 	inc	r0
      0029D2 86 05            [24] 8577 	mov	ar5,@r0
      0029D4 8B 82            [24] 8578 	mov	dpl,r3
      0029D6 8C 83            [24] 8579 	mov	dph,r4
      0029D8 8D F0            [24] 8580 	mov	b,r5
      0029DA 74 00            [12] 8581 	mov	a,#0x00
      0029DC 12r00r00         [24] 8582 	lcall	__gptrput
      0029DF A3               [24] 8583 	inc	dptr
      0029E0 12r00r00         [24] 8584 	lcall	__gptrput
      0029E3 02r2Ar58         [24] 8585 	ljmp	00106$
      0029E6                       8586 00105$:
                           0029E6  8587 	C$tasks.c$3366$2_0$337 ==.
                                   8588 ;	tasks.c:3366: else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
      0029E6 E5*00            [12] 8589 	mov	a,_bp
      0029E8 24 FB            [12] 8590 	add	a,#0xfb
      0029EA F8               [12] 8591 	mov	r0,a
      0029EB 86 03            [24] 8592 	mov	ar3,@r0
      0029ED 08               [12] 8593 	inc	r0
      0029EE 86 04            [24] 8594 	mov	ar4,@r0
      0029F0 08               [12] 8595 	inc	r0
      0029F1 86 05            [24] 8596 	mov	ar5,@r0
      0029F3 8B 82            [24] 8597 	mov	dpl,r3
      0029F5 8C 83            [24] 8598 	mov	dph,r4
      0029F7 8D F0            [24] 8599 	mov	b,r5
      0029F9 E5*00            [12] 8600 	mov	a,_bp
      0029FB 24 04            [12] 8601 	add	a,#0x04
      0029FD F8               [12] 8602 	mov	r0,a
      0029FE 12r00r00         [24] 8603 	lcall	__gptrget
      002A01 F6               [12] 8604 	mov	@r0,a
      002A02 A3               [24] 8605 	inc	dptr
      002A03 12r00r00         [24] 8606 	lcall	__gptrget
      002A06 08               [12] 8607 	inc	r0
      002A07 F6               [12] 8608 	mov	@r0,a
      002A08 E5*00            [12] 8609 	mov	a,_bp
      002A0A 24 04            [12] 8610 	add	a,#0x04
      002A0C F8               [12] 8611 	mov	r0,a
      002A0D C3               [12] 8612 	clr	c
      002A0E EA               [12] 8613 	mov	a,r2
      002A0F 96               [12] 8614 	subb	a,@r0
      002A10 EF               [12] 8615 	mov	a,r7
      002A11 08               [12] 8616 	inc	r0
      002A12 96               [12] 8617 	subb	a,@r0
      002A13 40 03            [24] 8618 	jc	00124$
      002A15 02r2Ar47         [24] 8619 	ljmp	00102$
      002A18                       8620 00124$:
                           002A18  8621 	C$tasks.c$3369$3_0$339 ==.
                                   8622 ;	tasks.c:3369: *pxTicksToWait -= xElapsedTime;
      002A18 E5*00            [12] 8623 	mov	a,_bp
      002A1A 24 04            [12] 8624 	add	a,#0x04
      002A1C F8               [12] 8625 	mov	r0,a
      002A1D E6               [12] 8626 	mov	a,@r0
      002A1E C3               [12] 8627 	clr	c
      002A1F 9A               [12] 8628 	subb	a,r2
      002A20 FA               [12] 8629 	mov	r2,a
      002A21 08               [12] 8630 	inc	r0
      002A22 E6               [12] 8631 	mov	a,@r0
      002A23 9F               [12] 8632 	subb	a,r7
      002A24 FF               [12] 8633 	mov	r7,a
      002A25 8B 82            [24] 8634 	mov	dpl,r3
      002A27 8C 83            [24] 8635 	mov	dph,r4
      002A29 8D F0            [24] 8636 	mov	b,r5
      002A2B EA               [12] 8637 	mov	a,r2
      002A2C 12r00r00         [24] 8638 	lcall	__gptrput
      002A2F A3               [24] 8639 	inc	dptr
      002A30 EF               [12] 8640 	mov	a,r7
      002A31 12r00r00         [24] 8641 	lcall	__gptrput
                           002A34  8642 	C$tasks.c$3370$3_0$339 ==.
                                   8643 ;	tasks.c:3370: vTaskInternalSetTimeOutState( pxTimeOut );
      002A34 A8*00            [24] 8644 	mov	r0,_bp
      002A36 08               [12] 8645 	inc	r0
      002A37 86 82            [24] 8646 	mov	dpl,@r0
      002A39 08               [12] 8647 	inc	r0
      002A3A 86 83            [24] 8648 	mov	dph,@r0
      002A3C 08               [12] 8649 	inc	r0
      002A3D 86 F0            [24] 8650 	mov	b,@r0
      002A3F 12r29r12         [24] 8651 	lcall	_vTaskInternalSetTimeOutState
                           002A42  8652 	C$tasks.c$3371$3_0$339 ==.
                                   8653 ;	tasks.c:3371: xReturn = pdFALSE;
      002A42 7E 00            [12] 8654 	mov	r6,#0x00
      002A44 02r2Ar58         [24] 8655 	ljmp	00106$
      002A47                       8656 00102$:
                           002A47  8657 	C$tasks.c$3375$3_0$340 ==.
                                   8658 ;	tasks.c:3375: *pxTicksToWait = ( TickType_t ) 0;
      002A47 8B 82            [24] 8659 	mov	dpl,r3
      002A49 8C 83            [24] 8660 	mov	dph,r4
      002A4B 8D F0            [24] 8661 	mov	b,r5
      002A4D 74 00            [12] 8662 	mov	a,#0x00
      002A4F 12r00r00         [24] 8663 	lcall	__gptrput
      002A52 A3               [24] 8664 	inc	dptr
      002A53 12r00r00         [24] 8665 	lcall	__gptrput
                           002A56  8666 	C$tasks.c$3376$3_0$340 ==.
                                   8667 ;	tasks.c:3376: xReturn = pdTRUE;
      002A56 7E 01            [12] 8668 	mov	r6,#0x01
      002A58                       8669 00106$:
                           002A58  8670 	C$tasks.c$3379$1_0$336 ==.
                                   8671 ;	tasks.c:3379: taskEXIT_CRITICAL();
      002A58 D0 E0            [24] 8672 	pop ACC 
      002A5A 53 E0 80         [24] 8673 	anl	_ACC,#0x80
      002A5D E5 E0            [12] 8674 	mov	a,_ACC
      002A5F 42 A8            [12] 8675 	orl	_IE,a
      002A61 D0 E0            [24] 8676 	pop ACC 
                           002A63  8677 	C$tasks.c$3381$1_0$336 ==.
                                   8678 ;	tasks.c:3381: return xReturn;
      002A63 8E 82            [24] 8679 	mov	dpl,r6
      002A65                       8680 00108$:
                           002A65  8681 	C$tasks.c$3382$1_0$336 ==.
                                   8682 ;	tasks.c:3382: }
      002A65 85*00 81         [24] 8683 	mov	sp,_bp
      002A68 D0*00            [24] 8684 	pop	_bp
                           002A6A  8685 	C$tasks.c$3382$1_0$336 ==.
                           002A6A  8686 	XG$xTaskCheckForTimeOut$0$0 ==.
      002A6A 22               [24] 8687 	ret
                                   8688 ;------------------------------------------------------------
                                   8689 ;Allocation info for local variables in function 'vTaskMissedYield'
                                   8690 ;------------------------------------------------------------
                           002A6B  8691 	G$vTaskMissedYield$0$0 ==.
                           002A6B  8692 	C$tasks.c$3385$1_0$342 ==.
                                   8693 ;	tasks.c:3385: void vTaskMissedYield( void )
                                   8694 ;	-----------------------------------------
                                   8695 ;	 function vTaskMissedYield
                                   8696 ;	-----------------------------------------
      002A6B                       8697 _vTaskMissedYield:
                           002A6B  8698 	C$tasks.c$3387$1_0$342 ==.
                                   8699 ;	tasks.c:3387: xYieldPending = pdTRUE;
      002A6B 90r00r0B         [24] 8700 	mov	dptr,#_xYieldPending
      002A6E 74 01            [12] 8701 	mov	a,#0x01
      002A70 F0               [24] 8702 	movx	@dptr,a
      002A71                       8703 00101$:
                           002A71  8704 	C$tasks.c$3388$1_0$342 ==.
                                   8705 ;	tasks.c:3388: }
                           002A71  8706 	C$tasks.c$3388$1_0$342 ==.
                           002A71  8707 	XG$vTaskMissedYield$0$0 ==.
      002A71 22               [24] 8708 	ret
                                   8709 ;------------------------------------------------------------
                                   8710 ;Allocation info for local variables in function 'prvIdleTask'
                                   8711 ;------------------------------------------------------------
                                   8712 ;pvParameters              Allocated to registers 
                                   8713 ;------------------------------------------------------------
                           002A72  8714 	Ftasks$prvIdleTask$0$0 ==.
                           002A72  8715 	C$tasks.c$3441$1_0$344 ==.
                                   8716 ;	tasks.c:3441: static portTASK_FUNCTION( prvIdleTask, pvParameters )
                                   8717 ;	-----------------------------------------
                                   8718 ;	 function prvIdleTask
                                   8719 ;	-----------------------------------------
      002A72                       8720 _prvIdleTask:
                           002A72  8721 	C$tasks.c$3444$2_0$345 ==.
                                   8722 ;	tasks.c:3444: ( void ) pvParameters;
      002A72                       8723 00102$:
                           002A72  8724 	C$tasks.c$3458$3_0$346 ==.
                                   8725 ;	tasks.c:3458: prvCheckTasksWaitingTermination();
      002A72 12r2ArF0         [24] 8726 	lcall	_prvCheckTasksWaitingTermination
                           002A75  8727 	C$tasks.c$3466$4_0$347 ==.
                                   8728 ;	tasks.c:3466: taskYIELD();
      002A75 12r00r00         [24] 8729 	lcall	_vPortYield
      002A78 02r2Ar72         [24] 8730 	ljmp	00102$
      002A7B                       8731 00104$:
                           002A7B  8732 	C$tasks.c$3555$2_0$344 ==.
                                   8733 ;	tasks.c:3555: }
                           002A7B  8734 	C$tasks.c$3555$2_0$344 ==.
                           002A7B  8735 	XFtasks$prvIdleTask$0$0 ==.
      002A7B 22               [24] 8736 	ret
                                   8737 ;------------------------------------------------------------
                                   8738 ;Allocation info for local variables in function 'prvInitialiseTaskLists'
                                   8739 ;------------------------------------------------------------
                                   8740 ;uxPriority                Allocated to registers r7 
                                   8741 ;------------------------------------------------------------
                           002A7C  8742 	Ftasks$prvInitialiseTaskLists$0$0 ==.
                           002A7C  8743 	C$tasks.c$3666$2_0$349 ==.
                                   8744 ;	tasks.c:3666: static void prvInitialiseTaskLists( void )
                                   8745 ;	-----------------------------------------
                                   8746 ;	 function prvInitialiseTaskLists
                                   8747 ;	-----------------------------------------
      002A7C                       8748 _prvInitialiseTaskLists:
                           002A7C  8749 	C$tasks.c$3670$3_0$351 ==.
                                   8750 ;	tasks.c:3670: for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
      002A7C 7F 00            [12] 8751 	mov	r7,#0x00
      002A7E                       8752 00102$:
                           002A7E  8753 	C$tasks.c$3672$3_0$351 ==.
                                   8754 ;	tasks.c:3672: vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
      002A7E EF               [12] 8755 	mov	a,r7
      002A7F 75 F0 0C         [24] 8756 	mov	b,#0x0c
      002A82 A4               [48] 8757 	mul	ab
      002A83 24r00            [12] 8758 	add	a,#_pxReadyTasksLists
      002A85 FD               [12] 8759 	mov	r5,a
      002A86 74s00            [12] 8760 	mov	a,#(_pxReadyTasksLists >> 8)
      002A88 35 F0            [12] 8761 	addc	a,b
      002A8A FE               [12] 8762 	mov	r6,a
      002A8B 7C 00            [12] 8763 	mov	r4,#0x00
      002A8D 8D 82            [24] 8764 	mov	dpl,r5
      002A8F 8E 83            [24] 8765 	mov	dph,r6
      002A91 8C F0            [24] 8766 	mov	b,r4
      002A93 C0 07            [24] 8767 	push	ar7
      002A95 12r00r00         [24] 8768 	lcall	_vListInitialise
      002A98 D0 07            [24] 8769 	pop	ar7
                           002A9A  8770 	C$tasks.c$3670$2_0$350 ==.
                                   8771 ;	tasks.c:3670: for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
      002A9A 0F               [12] 8772 	inc	r7
      002A9B BF 04 00         [24] 8773 	cjne	r7,#0x04,00115$
      002A9E                       8774 00115$:
      002A9E 50 03            [24] 8775 	jnc	00116$
      002AA0 02r2Ar7E         [24] 8776 	ljmp	00102$
      002AA3                       8777 00116$:
                           002AA3  8778 	C$tasks.c$3675$1_0$349 ==.
                                   8779 ;	tasks.c:3675: vListInitialise( &xDelayedTaskList1 );
      002AA3 75 82r30         [24] 8780 	mov	dpl,#_xDelayedTaskList1
      002AA6 75 83s00         [24] 8781 	mov	dph,#(_xDelayedTaskList1 >> 8)
      002AA9 75 F0 00         [24] 8782 	mov	b,#0x00
      002AAC 12r00r00         [24] 8783 	lcall	_vListInitialise
                           002AAF  8784 	C$tasks.c$3676$1_0$349 ==.
                                   8785 ;	tasks.c:3676: vListInitialise( &xDelayedTaskList2 );
      002AAF 75 82r3C         [24] 8786 	mov	dpl,#_xDelayedTaskList2
      002AB2 75 83s00         [24] 8787 	mov	dph,#(_xDelayedTaskList2 >> 8)
      002AB5 75 F0 00         [24] 8788 	mov	b,#0x00
      002AB8 12r00r00         [24] 8789 	lcall	_vListInitialise
                           002ABB  8790 	C$tasks.c$3677$1_0$349 ==.
                                   8791 ;	tasks.c:3677: vListInitialise( &xPendingReadyList );
      002ABB 75 82r4E         [24] 8792 	mov	dpl,#_xPendingReadyList
      002ABE 75 83s00         [24] 8793 	mov	dph,#(_xPendingReadyList >> 8)
      002AC1 75 F0 00         [24] 8794 	mov	b,#0x00
      002AC4 12r00r00         [24] 8795 	lcall	_vListInitialise
                           002AC7  8796 	C$tasks.c$3681$2_0$352 ==.
                                   8797 ;	tasks.c:3681: vListInitialise( &xTasksWaitingTermination );
      002AC7 75 82r5A         [24] 8798 	mov	dpl,#_xTasksWaitingTermination
      002ACA 75 83s00         [24] 8799 	mov	dph,#(_xTasksWaitingTermination >> 8)
      002ACD 75 F0 00         [24] 8800 	mov	b,#0x00
      002AD0 12r00r00         [24] 8801 	lcall	_vListInitialise
                           002AD3  8802 	C$tasks.c$3693$1_0$349 ==.
                                   8803 ;	tasks.c:3693: pxDelayedTaskList = &xDelayedTaskList1;
      002AD3 90r00r48         [24] 8804 	mov	dptr,#_pxDelayedTaskList
      002AD6 74r30            [12] 8805 	mov	a,#_xDelayedTaskList1
      002AD8 F0               [24] 8806 	movx	@dptr,a
      002AD9 74s00            [12] 8807 	mov	a,#(_xDelayedTaskList1 >> 8)
      002ADB A3               [24] 8808 	inc	dptr
      002ADC F0               [24] 8809 	movx	@dptr,a
      002ADD 74 00            [12] 8810 	mov	a,#0x00
      002ADF A3               [24] 8811 	inc	dptr
      002AE0 F0               [24] 8812 	movx	@dptr,a
                           002AE1  8813 	C$tasks.c$3694$1_0$349 ==.
                                   8814 ;	tasks.c:3694: pxOverflowDelayedTaskList = &xDelayedTaskList2;
      002AE1 90r00r4B         [24] 8815 	mov	dptr,#_pxOverflowDelayedTaskList
      002AE4 74r3C            [12] 8816 	mov	a,#_xDelayedTaskList2
      002AE6 F0               [24] 8817 	movx	@dptr,a
      002AE7 74s00            [12] 8818 	mov	a,#(_xDelayedTaskList2 >> 8)
      002AE9 A3               [24] 8819 	inc	dptr
      002AEA F0               [24] 8820 	movx	@dptr,a
      002AEB 74 00            [12] 8821 	mov	a,#0x00
      002AED A3               [24] 8822 	inc	dptr
      002AEE F0               [24] 8823 	movx	@dptr,a
      002AEF                       8824 00104$:
                           002AEF  8825 	C$tasks.c$3695$1_0$349 ==.
                                   8826 ;	tasks.c:3695: }
                           002AEF  8827 	C$tasks.c$3695$1_0$349 ==.
                           002AEF  8828 	XFtasks$prvInitialiseTaskLists$0$0 ==.
      002AEF 22               [24] 8829 	ret
                                   8830 ;------------------------------------------------------------
                                   8831 ;Allocation info for local variables in function 'prvCheckTasksWaitingTermination'
                                   8832 ;------------------------------------------------------------
                                   8833 ;pxTCB                     Allocated to registers r5 r6 r7 
                                   8834 ;------------------------------------------------------------
                           002AF0  8835 	Ftasks$prvCheckTasksWaitingTermination$0$0 ==.
                           002AF0  8836 	C$tasks.c$3698$1_0$355 ==.
                                   8837 ;	tasks.c:3698: static void prvCheckTasksWaitingTermination( void )
                                   8838 ;	-----------------------------------------
                                   8839 ;	 function prvCheckTasksWaitingTermination
                                   8840 ;	-----------------------------------------
      002AF0                       8841 _prvCheckTasksWaitingTermination:
                           002AF0  8842 	C$tasks.c$3708$4_0$357 ==.
                                   8843 ;	tasks.c:3708: while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
      002AF0                       8844 00101$:
      002AF0 90r00r03         [24] 8845 	mov	dptr,#_uxDeletedTasksWaitingCleanUp
      002AF3 E0               [24] 8846 	movx	a,@dptr
      002AF4 70 03            [24] 8847 	jnz	00114$
      002AF6 02r2Br68         [24] 8848 	ljmp	00104$
      002AF9                       8849 00114$:
                           002AF9  8850 	C$tasks.c$3710$3_0$356 ==.
                                   8851 ;	tasks.c:3710: taskENTER_CRITICAL();
      002AF9 C0 E0            [24] 8852 	push ACC 
      002AFB C0 A8            [24] 8853 	push IE 
                                   8854 ;	assignBit
      002AFD C2 AF            [12] 8855 	clr	_EA
                           002AFF  8856 	C$tasks.c$3712$4_0$357 ==.
                                   8857 ;	tasks.c:3712: pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
      002AFF 90r00r60         [24] 8858 	mov	dptr,#(_xTasksWaitingTermination + 0x0006)
      002B02 E0               [24] 8859 	movx	a,@dptr
      002B03 FD               [12] 8860 	mov	r5,a
      002B04 A3               [24] 8861 	inc	dptr
      002B05 E0               [24] 8862 	movx	a,@dptr
      002B06 FE               [12] 8863 	mov	r6,a
      002B07 A3               [24] 8864 	inc	dptr
      002B08 E0               [24] 8865 	movx	a,@dptr
      002B09 FF               [12] 8866 	mov	r7,a
      002B0A 74 08            [12] 8867 	mov	a,#0x08
      002B0C 2D               [12] 8868 	add	a,r5
      002B0D FD               [12] 8869 	mov	r5,a
      002B0E 74 00            [12] 8870 	mov	a,#0x00
      002B10 3E               [12] 8871 	addc	a,r6
      002B11 FE               [12] 8872 	mov	r6,a
      002B12 8D 82            [24] 8873 	mov	dpl,r5
      002B14 8E 83            [24] 8874 	mov	dph,r6
      002B16 8F F0            [24] 8875 	mov	b,r7
      002B18 12r00r00         [24] 8876 	lcall	__gptrget
      002B1B FD               [12] 8877 	mov	r5,a
      002B1C A3               [24] 8878 	inc	dptr
      002B1D 12r00r00         [24] 8879 	lcall	__gptrget
      002B20 FE               [12] 8880 	mov	r6,a
      002B21 A3               [24] 8881 	inc	dptr
      002B22 12r00r00         [24] 8882 	lcall	__gptrget
      002B25 FF               [12] 8883 	mov	r7,a
                           002B26  8884 	C$tasks.c$3713$4_0$357 ==.
                                   8885 ;	tasks.c:3713: ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
      002B26 74 03            [12] 8886 	mov	a,#0x03
      002B28 2D               [12] 8887 	add	a,r5
      002B29 FA               [12] 8888 	mov	r2,a
      002B2A 74 00            [12] 8889 	mov	a,#0x00
      002B2C 3E               [12] 8890 	addc	a,r6
      002B2D FB               [12] 8891 	mov	r3,a
      002B2E 8F 04            [24] 8892 	mov	ar4,r7
      002B30 8A 82            [24] 8893 	mov	dpl,r2
      002B32 8B 83            [24] 8894 	mov	dph,r3
      002B34 8C F0            [24] 8895 	mov	b,r4
      002B36 C0 07            [24] 8896 	push	ar7
      002B38 C0 06            [24] 8897 	push	ar6
      002B3A C0 05            [24] 8898 	push	ar5
      002B3C 12r00r00         [24] 8899 	lcall	_uxListRemove
      002B3F D0 05            [24] 8900 	pop	ar5
      002B41 D0 06            [24] 8901 	pop	ar6
      002B43 D0 07            [24] 8902 	pop	ar7
                           002B45  8903 	C$tasks.c$3714$4_0$357 ==.
                                   8904 ;	tasks.c:3714: --uxCurrentNumberOfTasks;
      002B45 90r00r04         [24] 8905 	mov	dptr,#_uxCurrentNumberOfTasks
      002B48 E0               [24] 8906 	movx	a,@dptr
      002B49 14               [12] 8907 	dec	a
      002B4A F0               [24] 8908 	movx	@dptr,a
                           002B4B  8909 	C$tasks.c$3715$4_0$357 ==.
                                   8910 ;	tasks.c:3715: --uxDeletedTasksWaitingCleanUp;
      002B4B 90r00r03         [24] 8911 	mov	dptr,#_uxDeletedTasksWaitingCleanUp
      002B4E E0               [24] 8912 	movx	a,@dptr
      002B4F 14               [12] 8913 	dec	a
      002B50 F0               [24] 8914 	movx	@dptr,a
                           002B51  8915 	C$tasks.c$3717$3_0$356 ==.
                                   8916 ;	tasks.c:3717: taskEXIT_CRITICAL();
      002B51 D0 E0            [24] 8917 	pop ACC 
      002B53 53 E0 80         [24] 8918 	anl	_ACC,#0x80
      002B56 E5 E0            [12] 8919 	mov	a,_ACC
      002B58 42 A8            [12] 8920 	orl	_IE,a
      002B5A D0 E0            [24] 8921 	pop ACC 
                           002B5C  8922 	C$tasks.c$3719$3_0$356 ==.
                                   8923 ;	tasks.c:3719: prvDeleteTCB( pxTCB );
      002B5C 8D 82            [24] 8924 	mov	dpl,r5
      002B5E 8E 83            [24] 8925 	mov	dph,r6
      002B60 8F F0            [24] 8926 	mov	b,r7
      002B62 12r2Br69         [24] 8927 	lcall	_prvDeleteTCB
      002B65 02r2ArF0         [24] 8928 	ljmp	00101$
      002B68                       8929 00104$:
                           002B68  8930 	C$tasks.c$3723$2_0$355 ==.
                                   8931 ;	tasks.c:3723: }
                           002B68  8932 	C$tasks.c$3723$2_0$355 ==.
                           002B68  8933 	XFtasks$prvCheckTasksWaitingTermination$0$0 ==.
      002B68 22               [24] 8934 	ret
                                   8935 ;------------------------------------------------------------
                                   8936 ;Allocation info for local variables in function 'prvDeleteTCB'
                                   8937 ;------------------------------------------------------------
                                   8938 ;pxTCB                     Allocated to registers r5 r6 r7 
                                   8939 ;------------------------------------------------------------
                           002B69  8940 	Ftasks$prvDeleteTCB$0$0 ==.
                           002B69  8941 	C$tasks.c$3950$2_0$359 ==.
                                   8942 ;	tasks.c:3950: static void prvDeleteTCB( TCB_t * pxTCB )
                                   8943 ;	-----------------------------------------
                                   8944 ;	 function prvDeleteTCB
                                   8945 ;	-----------------------------------------
      002B69                       8946 _prvDeleteTCB:
      002B69 AD 82            [24] 8947 	mov	r5,dpl
      002B6B AE 83            [24] 8948 	mov	r6,dph
      002B6D AF F0            [24] 8949 	mov	r7,b
                           002B6F  8950 	C$tasks.c$3971$2_0$360 ==.
                                   8951 ;	tasks.c:3971: vPortFreeStack( pxTCB->pxStack );
      002B6F 74 20            [12] 8952 	mov	a,#0x20
      002B71 2D               [12] 8953 	add	a,r5
      002B72 FA               [12] 8954 	mov	r2,a
      002B73 74 00            [12] 8955 	mov	a,#0x00
      002B75 3E               [12] 8956 	addc	a,r6
      002B76 FB               [12] 8957 	mov	r3,a
      002B77 8F 04            [24] 8958 	mov	ar4,r7
      002B79 8A 82            [24] 8959 	mov	dpl,r2
      002B7B 8B 83            [24] 8960 	mov	dph,r3
      002B7D 8C F0            [24] 8961 	mov	b,r4
      002B7F 12r00r00         [24] 8962 	lcall	__gptrget
      002B82 FA               [12] 8963 	mov	r2,a
      002B83 A3               [24] 8964 	inc	dptr
      002B84 12r00r00         [24] 8965 	lcall	__gptrget
      002B87 FB               [12] 8966 	mov	r3,a
      002B88 A3               [24] 8967 	inc	dptr
      002B89 12r00r00         [24] 8968 	lcall	__gptrget
      002B8C FC               [12] 8969 	mov	r4,a
      002B8D 8A 82            [24] 8970 	mov	dpl,r2
      002B8F 8B 83            [24] 8971 	mov	dph,r3
      002B91 8C F0            [24] 8972 	mov	b,r4
      002B93 C0 07            [24] 8973 	push	ar7
      002B95 C0 06            [24] 8974 	push	ar6
      002B97 C0 05            [24] 8975 	push	ar5
      002B99 12r00r00         [24] 8976 	lcall	_vPortFree
      002B9C D0 05            [24] 8977 	pop	ar5
      002B9E D0 06            [24] 8978 	pop	ar6
      002BA0 D0 07            [24] 8979 	pop	ar7
                           002BA2  8980 	C$tasks.c$3972$2_0$360 ==.
                                   8981 ;	tasks.c:3972: vPortFree( pxTCB );
      002BA2 8D 82            [24] 8982 	mov	dpl,r5
      002BA4 8E 83            [24] 8983 	mov	dph,r6
      002BA6 8F F0            [24] 8984 	mov	b,r7
      002BA8 12r00r00         [24] 8985 	lcall	_vPortFree
      002BAB                       8986 00101$:
                           002BAB  8987 	C$tasks.c$4001$2_0$359 ==.
                                   8988 ;	tasks.c:4001: }
                           002BAB  8989 	C$tasks.c$4001$2_0$359 ==.
                           002BAB  8990 	XFtasks$prvDeleteTCB$0$0 ==.
      002BAB 22               [24] 8991 	ret
                                   8992 ;------------------------------------------------------------
                                   8993 ;Allocation info for local variables in function 'prvResetNextTaskUnblockTime'
                                   8994 ;------------------------------------------------------------
                           002BAC  8995 	Ftasks$prvResetNextTaskUnblockTime$0$0 ==.
                           002BAC  8996 	C$tasks.c$4006$2_0$362 ==.
                                   8997 ;	tasks.c:4006: static void prvResetNextTaskUnblockTime( void )
                                   8998 ;	-----------------------------------------
                                   8999 ;	 function prvResetNextTaskUnblockTime
                                   9000 ;	-----------------------------------------
      002BAC                       9001 _prvResetNextTaskUnblockTime:
                           002BAC  9002 	C$tasks.c$4008$1_0$362 ==.
                                   9003 ;	tasks.c:4008: if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
      002BAC 90r00r48         [24] 9004 	mov	dptr,#_pxDelayedTaskList
      002BAF E0               [24] 9005 	movx	a,@dptr
      002BB0 FD               [12] 9006 	mov	r5,a
      002BB1 A3               [24] 9007 	inc	dptr
      002BB2 E0               [24] 9008 	movx	a,@dptr
      002BB3 FE               [12] 9009 	mov	r6,a
      002BB4 A3               [24] 9010 	inc	dptr
      002BB5 E0               [24] 9011 	movx	a,@dptr
      002BB6 FF               [12] 9012 	mov	r7,a
      002BB7 8D 82            [24] 9013 	mov	dpl,r5
      002BB9 8E 83            [24] 9014 	mov	dph,r6
      002BBB 8F F0            [24] 9015 	mov	b,r7
      002BBD 12r00r00         [24] 9016 	lcall	__gptrget
      002BC0 60 03            [24] 9017 	jz	00112$
      002BC2 02r2BrD0         [24] 9018 	ljmp	00102$
      002BC5                       9019 00112$:
                           002BC5  9020 	C$tasks.c$4014$2_0$363 ==.
                                   9021 ;	tasks.c:4014: xNextTaskUnblockTime = portMAX_DELAY;
      002BC5 90r00r0E         [24] 9022 	mov	dptr,#_xNextTaskUnblockTime
      002BC8 74 FF            [12] 9023 	mov	a,#0xff
      002BCA F0               [24] 9024 	movx	@dptr,a
      002BCB A3               [24] 9025 	inc	dptr
      002BCC F0               [24] 9026 	movx	@dptr,a
      002BCD 02r2Cr16         [24] 9027 	ljmp	00104$
      002BD0                       9028 00102$:
                           002BD0  9029 	C$tasks.c$4022$2_0$364 ==.
                                   9030 ;	tasks.c:4022: xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
      002BD0 90r00r48         [24] 9031 	mov	dptr,#_pxDelayedTaskList
      002BD3 E0               [24] 9032 	movx	a,@dptr
      002BD4 FD               [12] 9033 	mov	r5,a
      002BD5 A3               [24] 9034 	inc	dptr
      002BD6 E0               [24] 9035 	movx	a,@dptr
      002BD7 FE               [12] 9036 	mov	r6,a
      002BD8 A3               [24] 9037 	inc	dptr
      002BD9 E0               [24] 9038 	movx	a,@dptr
      002BDA FF               [12] 9039 	mov	r7,a
      002BDB 74 04            [12] 9040 	mov	a,#0x04
      002BDD 2D               [12] 9041 	add	a,r5
      002BDE FD               [12] 9042 	mov	r5,a
      002BDF 74 00            [12] 9043 	mov	a,#0x00
      002BE1 3E               [12] 9044 	addc	a,r6
      002BE2 FE               [12] 9045 	mov	r6,a
      002BE3 74 02            [12] 9046 	mov	a,#0x02
      002BE5 2D               [12] 9047 	add	a,r5
      002BE6 FD               [12] 9048 	mov	r5,a
      002BE7 74 00            [12] 9049 	mov	a,#0x00
      002BE9 3E               [12] 9050 	addc	a,r6
      002BEA FE               [12] 9051 	mov	r6,a
      002BEB 8D 82            [24] 9052 	mov	dpl,r5
      002BED 8E 83            [24] 9053 	mov	dph,r6
      002BEF 8F F0            [24] 9054 	mov	b,r7
      002BF1 12r00r00         [24] 9055 	lcall	__gptrget
      002BF4 FD               [12] 9056 	mov	r5,a
      002BF5 A3               [24] 9057 	inc	dptr
      002BF6 12r00r00         [24] 9058 	lcall	__gptrget
      002BF9 FE               [12] 9059 	mov	r6,a
      002BFA A3               [24] 9060 	inc	dptr
      002BFB 12r00r00         [24] 9061 	lcall	__gptrget
      002BFE FF               [12] 9062 	mov	r7,a
      002BFF 8D 82            [24] 9063 	mov	dpl,r5
      002C01 8E 83            [24] 9064 	mov	dph,r6
      002C03 8F F0            [24] 9065 	mov	b,r7
      002C05 12r00r00         [24] 9066 	lcall	__gptrget
      002C08 FD               [12] 9067 	mov	r5,a
      002C09 A3               [24] 9068 	inc	dptr
      002C0A 12r00r00         [24] 9069 	lcall	__gptrget
      002C0D FE               [12] 9070 	mov	r6,a
      002C0E 90r00r0E         [24] 9071 	mov	dptr,#_xNextTaskUnblockTime
      002C11 ED               [12] 9072 	mov	a,r5
      002C12 F0               [24] 9073 	movx	@dptr,a
      002C13 EE               [12] 9074 	mov	a,r6
      002C14 A3               [24] 9075 	inc	dptr
      002C15 F0               [24] 9076 	movx	@dptr,a
      002C16                       9077 00104$:
                           002C16  9078 	C$tasks.c$4024$1_0$362 ==.
                                   9079 ;	tasks.c:4024: }
                           002C16  9080 	C$tasks.c$4024$1_0$362 ==.
                           002C16  9081 	XFtasks$prvResetNextTaskUnblockTime$0$0 ==.
      002C16 22               [24] 9082 	ret
                                   9083 ;------------------------------------------------------------
                                   9084 ;Allocation info for local variables in function 'uxTaskResetEventItemValue'
                                   9085 ;------------------------------------------------------------
                                   9086 ;uxReturn                  Allocated to stack - _bp +1
                                   9087 ;------------------------------------------------------------
                           002C17  9088 	G$uxTaskResetEventItemValue$0$0 ==.
                           002C17  9089 	C$tasks.c$4671$1_0$366 ==.
                                   9090 ;	tasks.c:4671: TickType_t uxTaskResetEventItemValue( void )
                                   9091 ;	-----------------------------------------
                                   9092 ;	 function uxTaskResetEventItemValue
                                   9093 ;	-----------------------------------------
      002C17                       9094 _uxTaskResetEventItemValue:
      002C17 C0*00            [24] 9095 	push	_bp
      002C19 85 81*00         [24] 9096 	mov	_bp,sp
      002C1C 05 81            [12] 9097 	inc	sp
      002C1E 05 81            [12] 9098 	inc	sp
                           002C20  9099 	C$tasks.c$4675$1_0$366 ==.
                                   9100 ;	tasks.c:4675: uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
      002C20 90r00r00         [24] 9101 	mov	dptr,#_pxCurrentTCB
      002C23 E0               [24] 9102 	movx	a,@dptr
      002C24 FD               [12] 9103 	mov	r5,a
      002C25 A3               [24] 9104 	inc	dptr
      002C26 E0               [24] 9105 	movx	a,@dptr
      002C27 FE               [12] 9106 	mov	r6,a
      002C28 A3               [24] 9107 	inc	dptr
      002C29 E0               [24] 9108 	movx	a,@dptr
      002C2A FF               [12] 9109 	mov	r7,a
      002C2B 74 11            [12] 9110 	mov	a,#0x11
      002C2D 2D               [12] 9111 	add	a,r5
      002C2E FD               [12] 9112 	mov	r5,a
      002C2F 74 00            [12] 9113 	mov	a,#0x00
      002C31 3E               [12] 9114 	addc	a,r6
      002C32 FE               [12] 9115 	mov	r6,a
      002C33 8D 82            [24] 9116 	mov	dpl,r5
      002C35 8E 83            [24] 9117 	mov	dph,r6
      002C37 8F F0            [24] 9118 	mov	b,r7
      002C39 A8*00            [24] 9119 	mov	r0,_bp
      002C3B 08               [12] 9120 	inc	r0
      002C3C 12r00r00         [24] 9121 	lcall	__gptrget
      002C3F F6               [12] 9122 	mov	@r0,a
      002C40 A3               [24] 9123 	inc	dptr
      002C41 12r00r00         [24] 9124 	lcall	__gptrget
      002C44 08               [12] 9125 	inc	r0
      002C45 F6               [12] 9126 	mov	@r0,a
                           002C46  9127 	C$tasks.c$4679$1_0$366 ==.
                                   9128 ;	tasks.c:4679: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      002C46 90r00r00         [24] 9129 	mov	dptr,#_pxCurrentTCB
      002C49 E0               [24] 9130 	movx	a,@dptr
      002C4A FB               [12] 9131 	mov	r3,a
      002C4B A3               [24] 9132 	inc	dptr
      002C4C E0               [24] 9133 	movx	a,@dptr
      002C4D FC               [12] 9134 	mov	r4,a
      002C4E A3               [24] 9135 	inc	dptr
      002C4F E0               [24] 9136 	movx	a,@dptr
      002C50 FF               [12] 9137 	mov	r7,a
      002C51 74 11            [12] 9138 	mov	a,#0x11
      002C53 2B               [12] 9139 	add	a,r3
      002C54 FB               [12] 9140 	mov	r3,a
      002C55 74 00            [12] 9141 	mov	a,#0x00
      002C57 3C               [12] 9142 	addc	a,r4
      002C58 FC               [12] 9143 	mov	r4,a
      002C59 90r00r00         [24] 9144 	mov	dptr,#_pxCurrentTCB
      002C5C E0               [24] 9145 	movx	a,@dptr
      002C5D FA               [12] 9146 	mov	r2,a
      002C5E A3               [24] 9147 	inc	dptr
      002C5F E0               [24] 9148 	movx	a,@dptr
      002C60 FD               [12] 9149 	mov	r5,a
      002C61 A3               [24] 9150 	inc	dptr
      002C62 E0               [24] 9151 	movx	a,@dptr
      002C63 FE               [12] 9152 	mov	r6,a
      002C64 74 1F            [12] 9153 	mov	a,#0x1f
      002C66 2A               [12] 9154 	add	a,r2
      002C67 FA               [12] 9155 	mov	r2,a
      002C68 74 00            [12] 9156 	mov	a,#0x00
      002C6A 3D               [12] 9157 	addc	a,r5
      002C6B FD               [12] 9158 	mov	r5,a
      002C6C 8A 82            [24] 9159 	mov	dpl,r2
      002C6E 8D 83            [24] 9160 	mov	dph,r5
      002C70 8E F0            [24] 9161 	mov	b,r6
      002C72 12r00r00         [24] 9162 	lcall	__gptrget
      002C75 FA               [12] 9163 	mov	r2,a
      002C76 7E 00            [12] 9164 	mov	r6,#0x00
      002C78 74 04            [12] 9165 	mov	a,#0x04
      002C7A C3               [12] 9166 	clr	c
      002C7B 9A               [12] 9167 	subb	a,r2
      002C7C FA               [12] 9168 	mov	r2,a
      002C7D 74 00            [12] 9169 	mov	a,#0x00
      002C7F 9E               [12] 9170 	subb	a,r6
      002C80 FE               [12] 9171 	mov	r6,a
      002C81 8B 82            [24] 9172 	mov	dpl,r3
      002C83 8C 83            [24] 9173 	mov	dph,r4
      002C85 8F F0            [24] 9174 	mov	b,r7
      002C87 EA               [12] 9175 	mov	a,r2
      002C88 12r00r00         [24] 9176 	lcall	__gptrput
      002C8B A3               [24] 9177 	inc	dptr
      002C8C EE               [12] 9178 	mov	a,r6
      002C8D 12r00r00         [24] 9179 	lcall	__gptrput
                           002C90  9180 	C$tasks.c$4681$1_0$366 ==.
                                   9181 ;	tasks.c:4681: return uxReturn;
      002C90 A8*00            [24] 9182 	mov	r0,_bp
      002C92 08               [12] 9183 	inc	r0
      002C93 86 82            [24] 9184 	mov	dpl,@r0
      002C95 08               [12] 9185 	inc	r0
      002C96 86 83            [24] 9186 	mov	dph,@r0
      002C98                       9187 00101$:
                           002C98  9188 	C$tasks.c$4682$1_0$366 ==.
                                   9189 ;	tasks.c:4682: }
      002C98 85*00 81         [24] 9190 	mov	sp,_bp
      002C9B D0*00            [24] 9191 	pop	_bp
                           002C9D  9192 	C$tasks.c$4682$1_0$366 ==.
                           002C9D  9193 	XG$uxTaskResetEventItemValue$0$0 ==.
      002C9D 22               [24] 9194 	ret
                                   9195 ;------------------------------------------------------------
                                   9196 ;Allocation info for local variables in function 'ulTaskGenericNotifyTake'
                                   9197 ;------------------------------------------------------------
                                   9198 ;xClearCountOnExit         Allocated to stack - _bp -3
                                   9199 ;xTicksToWait              Allocated to stack - _bp -5
                                   9200 ;uxIndexToWait             Allocated to stack - _bp +1
                                   9201 ;ulReturn                  Allocated to stack - _bp +5
                                   9202 ;sloc0                     Allocated to stack - _bp +2
                                   9203 ;------------------------------------------------------------
                           002C9E  9204 	G$ulTaskGenericNotifyTake$0$0 ==.
                           002C9E  9205 	C$tasks.c$4704$1_0$368 ==.
                                   9206 ;	tasks.c:4704: uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
                                   9207 ;	-----------------------------------------
                                   9208 ;	 function ulTaskGenericNotifyTake
                                   9209 ;	-----------------------------------------
      002C9E                       9210 _ulTaskGenericNotifyTake:
      002C9E C0*00            [24] 9211 	push	_bp
      002CA0 85 81*00         [24] 9212 	mov	_bp,sp
      002CA3 C0 82            [24] 9213 	push	dpl
      002CA5 E5 81            [12] 9214 	mov	a,sp
      002CA7 24 07            [12] 9215 	add	a,#0x07
      002CA9 F5 81            [12] 9216 	mov	sp,a
                           002CAB  9217 	C$tasks.c$4712$1_0$368 ==.
                                   9218 ;	tasks.c:4712: taskENTER_CRITICAL();
      002CAB C0 E0            [24] 9219 	push ACC 
      002CAD C0 A8            [24] 9220 	push IE 
                                   9221 ;	assignBit
      002CAF C2 AF            [12] 9222 	clr	_EA
                           002CB1  9223 	C$tasks.c$4715$2_0$369 ==.
                                   9224 ;	tasks.c:4715: if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
      002CB1 90r00r00         [24] 9225 	mov	dptr,#_pxCurrentTCB
      002CB4 E0               [24] 9226 	movx	a,@dptr
      002CB5 FC               [12] 9227 	mov	r4,a
      002CB6 A3               [24] 9228 	inc	dptr
      002CB7 E0               [24] 9229 	movx	a,@dptr
      002CB8 FD               [12] 9230 	mov	r5,a
      002CB9 A3               [24] 9231 	inc	dptr
      002CBA E0               [24] 9232 	movx	a,@dptr
      002CBB FE               [12] 9233 	mov	r6,a
      002CBC 74 2E            [12] 9234 	mov	a,#0x2e
      002CBE 2C               [12] 9235 	add	a,r4
      002CBF FC               [12] 9236 	mov	r4,a
      002CC0 74 00            [12] 9237 	mov	a,#0x00
      002CC2 3D               [12] 9238 	addc	a,r5
      002CC3 FD               [12] 9239 	mov	r5,a
      002CC4 A8*00            [24] 9240 	mov	r0,_bp
      002CC6 08               [12] 9241 	inc	r0
      002CC7 E6               [12] 9242 	mov	a,@r0
      002CC8 25 E0            [12] 9243 	add	a,acc
      002CCA FB               [12] 9244 	mov	r3,a
      002CCB EB               [12] 9245 	mov	a,r3
      002CCC 25 E0            [12] 9246 	add	a,acc
      002CCE FB               [12] 9247 	mov	r3,a
      002CCF EB               [12] 9248 	mov	a,r3
      002CD0 2C               [12] 9249 	add	a,r4
      002CD1 FC               [12] 9250 	mov	r4,a
      002CD2 74 00            [12] 9251 	mov	a,#0x00
      002CD4 3D               [12] 9252 	addc	a,r5
      002CD5 FD               [12] 9253 	mov	r5,a
      002CD6 8C 82            [24] 9254 	mov	dpl,r4
      002CD8 8D 83            [24] 9255 	mov	dph,r5
      002CDA 8E F0            [24] 9256 	mov	b,r6
      002CDC 12r00r00         [24] 9257 	lcall	__gptrget
      002CDF FC               [12] 9258 	mov	r4,a
      002CE0 A3               [24] 9259 	inc	dptr
      002CE1 12r00r00         [24] 9260 	lcall	__gptrget
      002CE4 FD               [12] 9261 	mov	r5,a
      002CE5 A3               [24] 9262 	inc	dptr
      002CE6 12r00r00         [24] 9263 	lcall	__gptrget
      002CE9 FE               [12] 9264 	mov	r6,a
      002CEA A3               [24] 9265 	inc	dptr
      002CEB 12r00r00         [24] 9266 	lcall	__gptrget
      002CEE FA               [12] 9267 	mov	r2,a
      002CEF EC               [12] 9268 	mov	a,r4
      002CF0 4D               [12] 9269 	orl	a,r5
      002CF1 4E               [12] 9270 	orl	a,r6
      002CF2 4A               [12] 9271 	orl	a,r2
      002CF3 60 03            [24] 9272 	jz	00128$
      002CF5 02r2Dr4B         [24] 9273 	ljmp	00104$
      002CF8                       9274 00128$:
                           002CF8  9275 	C$tasks.c$4718$3_0$370 ==.
                                   9276 ;	tasks.c:4718: pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
      002CF8 90r00r00         [24] 9277 	mov	dptr,#_pxCurrentTCB
      002CFB E0               [24] 9278 	movx	a,@dptr
      002CFC FC               [12] 9279 	mov	r4,a
      002CFD A3               [24] 9280 	inc	dptr
      002CFE E0               [24] 9281 	movx	a,@dptr
      002CFF FD               [12] 9282 	mov	r5,a
      002D00 A3               [24] 9283 	inc	dptr
      002D01 E0               [24] 9284 	movx	a,@dptr
      002D02 FE               [12] 9285 	mov	r6,a
      002D03 74 32            [12] 9286 	mov	a,#0x32
      002D05 2C               [12] 9287 	add	a,r4
      002D06 FC               [12] 9288 	mov	r4,a
      002D07 74 00            [12] 9289 	mov	a,#0x00
      002D09 3D               [12] 9290 	addc	a,r5
      002D0A FD               [12] 9291 	mov	r5,a
      002D0B A8*00            [24] 9292 	mov	r0,_bp
      002D0D 08               [12] 9293 	inc	r0
      002D0E E6               [12] 9294 	mov	a,@r0
      002D0F 2C               [12] 9295 	add	a,r4
      002D10 FC               [12] 9296 	mov	r4,a
      002D11 74 00            [12] 9297 	mov	a,#0x00
      002D13 3D               [12] 9298 	addc	a,r5
      002D14 FD               [12] 9299 	mov	r5,a
      002D15 8C 82            [24] 9300 	mov	dpl,r4
      002D17 8D 83            [24] 9301 	mov	dph,r5
      002D19 8E F0            [24] 9302 	mov	b,r6
      002D1B 74 01            [12] 9303 	mov	a,#0x01
      002D1D 12r00r00         [24] 9304 	lcall	__gptrput
                           002D20  9305 	C$tasks.c$4720$3_0$370 ==.
                                   9306 ;	tasks.c:4720: if( xTicksToWait > ( TickType_t ) 0 )
      002D20 E5*00            [12] 9307 	mov	a,_bp
      002D22 24 FB            [12] 9308 	add	a,#0xfb
      002D24 F8               [12] 9309 	mov	r0,a
      002D25 E6               [12] 9310 	mov	a,@r0
      002D26 08               [12] 9311 	inc	r0
      002D27 46               [12] 9312 	orl	a,@r0
      002D28 70 03            [24] 9313 	jnz	00129$
      002D2A 02r2Dr4B         [24] 9314 	ljmp	00104$
      002D2D                       9315 00129$:
                           002D2D  9316 	C$tasks.c$4722$4_0$371 ==.
                                   9317 ;	tasks.c:4722: prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
      002D2D C0 03            [24] 9318 	push	ar3
      002D2F 74 01            [12] 9319 	mov	a,#0x01
      002D31 C0 E0            [24] 9320 	push	acc
      002D33 E5*00            [12] 9321 	mov	a,_bp
      002D35 24 FB            [12] 9322 	add	a,#0xfb
      002D37 F8               [12] 9323 	mov	r0,a
      002D38 86 82            [24] 9324 	mov	dpl,@r0
      002D3A 08               [12] 9325 	inc	r0
      002D3B 86 83            [24] 9326 	mov	dph,@r0
      002D3D 12r46rF6         [24] 9327 	lcall	_prvAddCurrentTaskToDelayedList
      002D40 15 81            [12] 9328 	dec	sp
      002D42 D0 03            [24] 9329 	pop	ar3
                           002D44  9330 	C$tasks.c$4729$4_0$371 ==.
                                   9331 ;	tasks.c:4729: portYIELD_WITHIN_API();
      002D44 C0 03            [24] 9332 	push	ar3
      002D46 12r00r00         [24] 9333 	lcall	_vPortYield
      002D49 D0 03            [24] 9334 	pop	ar3
      002D4B                       9335 00104$:
                           002D4B  9336 	C$tasks.c$4741$1_0$368 ==.
                                   9337 ;	tasks.c:4741: taskEXIT_CRITICAL();
      002D4B D0 E0            [24] 9338 	pop ACC 
      002D4D 53 E0 80         [24] 9339 	anl	_ACC,#0x80
      002D50 E5 E0            [12] 9340 	mov	a,_ACC
      002D52 42 A8            [12] 9341 	orl	_IE,a
      002D54 D0 E0            [24] 9342 	pop ACC 
                           002D56  9343 	C$tasks.c$4743$1_0$368 ==.
                                   9344 ;	tasks.c:4743: taskENTER_CRITICAL();
      002D56 C0 E0            [24] 9345 	push ACC 
      002D58 C0 A8            [24] 9346 	push IE 
                                   9347 ;	assignBit
      002D5A C2 AF            [12] 9348 	clr	_EA
                           002D5C  9349 	C$tasks.c$4746$2_0$374 ==.
                                   9350 ;	tasks.c:4746: ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
      002D5C 90r00r00         [24] 9351 	mov	dptr,#_pxCurrentTCB
      002D5F E0               [24] 9352 	movx	a,@dptr
      002D60 FE               [12] 9353 	mov	r6,a
      002D61 A3               [24] 9354 	inc	dptr
      002D62 E0               [24] 9355 	movx	a,@dptr
      002D63 FC               [12] 9356 	mov	r4,a
      002D64 A3               [24] 9357 	inc	dptr
      002D65 E0               [24] 9358 	movx	a,@dptr
      002D66 FD               [12] 9359 	mov	r5,a
      002D67 74 2E            [12] 9360 	mov	a,#0x2e
      002D69 2E               [12] 9361 	add	a,r6
      002D6A FE               [12] 9362 	mov	r6,a
      002D6B 74 00            [12] 9363 	mov	a,#0x00
      002D6D 3C               [12] 9364 	addc	a,r4
      002D6E FC               [12] 9365 	mov	r4,a
      002D6F EB               [12] 9366 	mov	a,r3
      002D70 2E               [12] 9367 	add	a,r6
      002D71 FE               [12] 9368 	mov	r6,a
      002D72 74 00            [12] 9369 	mov	a,#0x00
      002D74 3C               [12] 9370 	addc	a,r4
      002D75 FC               [12] 9371 	mov	r4,a
      002D76 8E 82            [24] 9372 	mov	dpl,r6
      002D78 8C 83            [24] 9373 	mov	dph,r4
      002D7A 8D F0            [24] 9374 	mov	b,r5
      002D7C E5*00            [12] 9375 	mov	a,_bp
      002D7E 24 05            [12] 9376 	add	a,#0x05
      002D80 F8               [12] 9377 	mov	r0,a
      002D81 12r00r00         [24] 9378 	lcall	__gptrget
      002D84 F6               [12] 9379 	mov	@r0,a
      002D85 A3               [24] 9380 	inc	dptr
      002D86 12r00r00         [24] 9381 	lcall	__gptrget
      002D89 08               [12] 9382 	inc	r0
      002D8A F6               [12] 9383 	mov	@r0,a
      002D8B A3               [24] 9384 	inc	dptr
      002D8C 12r00r00         [24] 9385 	lcall	__gptrget
      002D8F 08               [12] 9386 	inc	r0
      002D90 F6               [12] 9387 	mov	@r0,a
      002D91 A3               [24] 9388 	inc	dptr
      002D92 12r00r00         [24] 9389 	lcall	__gptrget
      002D95 08               [12] 9390 	inc	r0
      002D96 F6               [12] 9391 	mov	@r0,a
                           002D97  9392 	C$tasks.c$4748$2_0$374 ==.
                                   9393 ;	tasks.c:4748: if( ulReturn != 0UL )
      002D97 E5*00            [12] 9394 	mov	a,_bp
      002D99 24 05            [12] 9395 	add	a,#0x05
      002D9B F8               [12] 9396 	mov	r0,a
      002D9C E6               [12] 9397 	mov	a,@r0
      002D9D 08               [12] 9398 	inc	r0
      002D9E 46               [12] 9399 	orl	a,@r0
      002D9F 08               [12] 9400 	inc	r0
      002DA0 46               [12] 9401 	orl	a,@r0
      002DA1 08               [12] 9402 	inc	r0
      002DA2 46               [12] 9403 	orl	a,@r0
      002DA3 70 03            [24] 9404 	jnz	00130$
      002DA5 02r2Er40         [24] 9405 	ljmp	00109$
      002DA8                       9406 00130$:
                           002DA8  9407 	C$tasks.c$4750$3_0$375 ==.
                                   9408 ;	tasks.c:4750: if( xClearCountOnExit != pdFALSE )
      002DA8 E5*00            [12] 9409 	mov	a,_bp
      002DAA 24 FD            [12] 9410 	add	a,#0xfd
      002DAC F8               [12] 9411 	mov	r0,a
      002DAD E6               [12] 9412 	mov	a,@r0
      002DAE 70 03            [24] 9413 	jnz	00131$
      002DB0 02r2DrE7         [24] 9414 	ljmp	00106$
      002DB3                       9415 00131$:
                           002DB3  9416 	C$tasks.c$4752$1_0$368 ==.
                                   9417 ;	tasks.c:4752: pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
      002DB3 90r00r00         [24] 9418 	mov	dptr,#_pxCurrentTCB
      002DB6 E0               [24] 9419 	movx	a,@dptr
      002DB7 FD               [12] 9420 	mov	r5,a
      002DB8 A3               [24] 9421 	inc	dptr
      002DB9 E0               [24] 9422 	movx	a,@dptr
      002DBA FE               [12] 9423 	mov	r6,a
      002DBB A3               [24] 9424 	inc	dptr
      002DBC E0               [24] 9425 	movx	a,@dptr
      002DBD FF               [12] 9426 	mov	r7,a
      002DBE 74 2E            [12] 9427 	mov	a,#0x2e
      002DC0 2D               [12] 9428 	add	a,r5
      002DC1 FD               [12] 9429 	mov	r5,a
      002DC2 74 00            [12] 9430 	mov	a,#0x00
      002DC4 3E               [12] 9431 	addc	a,r6
      002DC5 FE               [12] 9432 	mov	r6,a
      002DC6 EB               [12] 9433 	mov	a,r3
      002DC7 2D               [12] 9434 	add	a,r5
      002DC8 FD               [12] 9435 	mov	r5,a
      002DC9 74 00            [12] 9436 	mov	a,#0x00
      002DCB 3E               [12] 9437 	addc	a,r6
      002DCC FE               [12] 9438 	mov	r6,a
      002DCD 8D 82            [24] 9439 	mov	dpl,r5
      002DCF 8E 83            [24] 9440 	mov	dph,r6
      002DD1 8F F0            [24] 9441 	mov	b,r7
      002DD3 74 00            [12] 9442 	mov	a,#0x00
      002DD5 12r00r00         [24] 9443 	lcall	__gptrput
      002DD8 A3               [24] 9444 	inc	dptr
      002DD9 12r00r00         [24] 9445 	lcall	__gptrput
      002DDC A3               [24] 9446 	inc	dptr
      002DDD 12r00r00         [24] 9447 	lcall	__gptrput
      002DE0 A3               [24] 9448 	inc	dptr
      002DE1 12r00r00         [24] 9449 	lcall	__gptrput
      002DE4 02r2Er40         [24] 9450 	ljmp	00109$
      002DE7                       9451 00106$:
                           002DE7  9452 	C$tasks.c$4756$4_0$377 ==.
                                   9453 ;	tasks.c:4756: pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
      002DE7 90r00r00         [24] 9454 	mov	dptr,#_pxCurrentTCB
      002DEA E0               [24] 9455 	movx	a,@dptr
      002DEB FC               [12] 9456 	mov	r4,a
      002DEC A3               [24] 9457 	inc	dptr
      002DED E0               [24] 9458 	movx	a,@dptr
      002DEE FD               [12] 9459 	mov	r5,a
      002DEF A3               [24] 9460 	inc	dptr
      002DF0 E0               [24] 9461 	movx	a,@dptr
      002DF1 FE               [12] 9462 	mov	r6,a
      002DF2 74 2E            [12] 9463 	mov	a,#0x2e
      002DF4 2C               [12] 9464 	add	a,r4
      002DF5 FC               [12] 9465 	mov	r4,a
      002DF6 74 00            [12] 9466 	mov	a,#0x00
      002DF8 3D               [12] 9467 	addc	a,r5
      002DF9 FD               [12] 9468 	mov	r5,a
      002DFA A8*00            [24] 9469 	mov	r0,_bp
      002DFC 08               [12] 9470 	inc	r0
      002DFD 08               [12] 9471 	inc	r0
      002DFE EB               [12] 9472 	mov	a,r3
      002DFF 2C               [12] 9473 	add	a,r4
      002E00 F6               [12] 9474 	mov	@r0,a
      002E01 74 00            [12] 9475 	mov	a,#0x00
      002E03 3D               [12] 9476 	addc	a,r5
      002E04 08               [12] 9477 	inc	r0
      002E05 F6               [12] 9478 	mov	@r0,a
      002E06 08               [12] 9479 	inc	r0
      002E07 A6 06            [24] 9480 	mov	@r0,ar6
      002E09 E5*00            [12] 9481 	mov	a,_bp
      002E0B 24 05            [12] 9482 	add	a,#0x05
      002E0D F8               [12] 9483 	mov	r0,a
      002E0E E6               [12] 9484 	mov	a,@r0
      002E0F 24 FF            [12] 9485 	add	a,#0xff
      002E11 FA               [12] 9486 	mov	r2,a
      002E12 08               [12] 9487 	inc	r0
      002E13 E6               [12] 9488 	mov	a,@r0
      002E14 34 FF            [12] 9489 	addc	a,#0xff
      002E16 FB               [12] 9490 	mov	r3,a
      002E17 08               [12] 9491 	inc	r0
      002E18 E6               [12] 9492 	mov	a,@r0
      002E19 34 FF            [12] 9493 	addc	a,#0xff
      002E1B FE               [12] 9494 	mov	r6,a
      002E1C 08               [12] 9495 	inc	r0
      002E1D E6               [12] 9496 	mov	a,@r0
      002E1E 34 FF            [12] 9497 	addc	a,#0xff
      002E20 FF               [12] 9498 	mov	r7,a
      002E21 A8*00            [24] 9499 	mov	r0,_bp
      002E23 08               [12] 9500 	inc	r0
      002E24 08               [12] 9501 	inc	r0
      002E25 86 82            [24] 9502 	mov	dpl,@r0
      002E27 08               [12] 9503 	inc	r0
      002E28 86 83            [24] 9504 	mov	dph,@r0
      002E2A 08               [12] 9505 	inc	r0
      002E2B 86 F0            [24] 9506 	mov	b,@r0
      002E2D EA               [12] 9507 	mov	a,r2
      002E2E 12r00r00         [24] 9508 	lcall	__gptrput
      002E31 A3               [24] 9509 	inc	dptr
      002E32 EB               [12] 9510 	mov	a,r3
      002E33 12r00r00         [24] 9511 	lcall	__gptrput
      002E36 A3               [24] 9512 	inc	dptr
      002E37 EE               [12] 9513 	mov	a,r6
      002E38 12r00r00         [24] 9514 	lcall	__gptrput
      002E3B A3               [24] 9515 	inc	dptr
      002E3C EF               [12] 9516 	mov	a,r7
      002E3D 12r00r00         [24] 9517 	lcall	__gptrput
      002E40                       9518 00109$:
                           002E40  9519 	C$tasks.c$4764$2_0$374 ==.
                                   9520 ;	tasks.c:4764: pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
      002E40 90r00r00         [24] 9521 	mov	dptr,#_pxCurrentTCB
      002E43 E0               [24] 9522 	movx	a,@dptr
      002E44 FD               [12] 9523 	mov	r5,a
      002E45 A3               [24] 9524 	inc	dptr
      002E46 E0               [24] 9525 	movx	a,@dptr
      002E47 FE               [12] 9526 	mov	r6,a
      002E48 A3               [24] 9527 	inc	dptr
      002E49 E0               [24] 9528 	movx	a,@dptr
      002E4A FF               [12] 9529 	mov	r7,a
      002E4B 74 32            [12] 9530 	mov	a,#0x32
      002E4D 2D               [12] 9531 	add	a,r5
      002E4E FD               [12] 9532 	mov	r5,a
      002E4F 74 00            [12] 9533 	mov	a,#0x00
      002E51 3E               [12] 9534 	addc	a,r6
      002E52 FE               [12] 9535 	mov	r6,a
      002E53 A8*00            [24] 9536 	mov	r0,_bp
      002E55 08               [12] 9537 	inc	r0
      002E56 E6               [12] 9538 	mov	a,@r0
      002E57 2D               [12] 9539 	add	a,r5
      002E58 FD               [12] 9540 	mov	r5,a
      002E59 74 00            [12] 9541 	mov	a,#0x00
      002E5B 3E               [12] 9542 	addc	a,r6
      002E5C FE               [12] 9543 	mov	r6,a
      002E5D 8D 82            [24] 9544 	mov	dpl,r5
      002E5F 8E 83            [24] 9545 	mov	dph,r6
      002E61 8F F0            [24] 9546 	mov	b,r7
      002E63 74 00            [12] 9547 	mov	a,#0x00
      002E65 12r00r00         [24] 9548 	lcall	__gptrput
                           002E68  9549 	C$tasks.c$4766$1_0$368 ==.
                                   9550 ;	tasks.c:4766: taskEXIT_CRITICAL();
      002E68 D0 E0            [24] 9551 	pop ACC 
      002E6A 53 E0 80         [24] 9552 	anl	_ACC,#0x80
      002E6D E5 E0            [12] 9553 	mov	a,_ACC
      002E6F 42 A8            [12] 9554 	orl	_IE,a
      002E71 D0 E0            [24] 9555 	pop ACC 
                           002E73  9556 	C$tasks.c$4768$1_0$368 ==.
                                   9557 ;	tasks.c:4768: return ulReturn;
      002E73 E5*00            [12] 9558 	mov	a,_bp
      002E75 24 05            [12] 9559 	add	a,#0x05
      002E77 F8               [12] 9560 	mov	r0,a
      002E78 86 82            [24] 9561 	mov	dpl,@r0
      002E7A 08               [12] 9562 	inc	r0
      002E7B 86 83            [24] 9563 	mov	dph,@r0
      002E7D 08               [12] 9564 	inc	r0
      002E7E 86 F0            [24] 9565 	mov	b,@r0
      002E80 08               [12] 9566 	inc	r0
      002E81 E6               [12] 9567 	mov	a,@r0
      002E82                       9568 00110$:
                           002E82  9569 	C$tasks.c$4769$1_0$368 ==.
                                   9570 ;	tasks.c:4769: }
      002E82 85*00 81         [24] 9571 	mov	sp,_bp
      002E85 D0*00            [24] 9572 	pop	_bp
                           002E87  9573 	C$tasks.c$4769$1_0$368 ==.
                           002E87  9574 	XG$ulTaskGenericNotifyTake$0$0 ==.
      002E87 22               [24] 9575 	ret
                                   9576 ;------------------------------------------------------------
                                   9577 ;Allocation info for local variables in function 'xTaskGenericNotifyWait'
                                   9578 ;------------------------------------------------------------
                                   9579 ;ulBitsToClearOnEntry      Allocated to stack - _bp -6
                                   9580 ;ulBitsToClearOnExit       Allocated to stack - _bp -10
                                   9581 ;pulNotificationValue      Allocated to stack - _bp -13
                                   9582 ;xTicksToWait              Allocated to stack - _bp -15
                                   9583 ;uxIndexToWait             Allocated to stack - _bp +1
                                   9584 ;xReturn                   Allocated to registers r7 
                                   9585 ;sloc0                     Allocated to stack - _bp +2
                                   9586 ;sloc1                     Allocated to stack - _bp +5
                                   9587 ;sloc2                     Allocated to stack - _bp +12
                                   9588 ;sloc3                     Allocated to stack - _bp +8
                                   9589 ;------------------------------------------------------------
                           002E88  9590 	G$xTaskGenericNotifyWait$0$0 ==.
                           002E88  9591 	C$tasks.c$4776$1_0$380 ==.
                                   9592 ;	tasks.c:4776: BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
                                   9593 ;	-----------------------------------------
                                   9594 ;	 function xTaskGenericNotifyWait
                                   9595 ;	-----------------------------------------
      002E88                       9596 _xTaskGenericNotifyWait:
      002E88 C0*00            [24] 9597 	push	_bp
      002E8A 85 81*00         [24] 9598 	mov	_bp,sp
      002E8D C0 82            [24] 9599 	push	dpl
      002E8F E5 81            [12] 9600 	mov	a,sp
      002E91 24 0E            [12] 9601 	add	a,#0x0e
      002E93 F5 81            [12] 9602 	mov	sp,a
                           002E95  9603 	C$tasks.c$4786$1_0$380 ==.
                                   9604 ;	tasks.c:4786: taskENTER_CRITICAL();
      002E95 C0 E0            [24] 9605 	push ACC 
      002E97 C0 A8            [24] 9606 	push IE 
                                   9607 ;	assignBit
      002E99 C2 AF            [12] 9608 	clr	_EA
                           002E9B  9609 	C$tasks.c$4789$2_0$381 ==.
                                   9610 ;	tasks.c:4789: if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
      002E9B 90r00r00         [24] 9611 	mov	dptr,#_pxCurrentTCB
      002E9E E0               [24] 9612 	movx	a,@dptr
      002E9F FC               [12] 9613 	mov	r4,a
      002EA0 A3               [24] 9614 	inc	dptr
      002EA1 E0               [24] 9615 	movx	a,@dptr
      002EA2 FD               [12] 9616 	mov	r5,a
      002EA3 A3               [24] 9617 	inc	dptr
      002EA4 E0               [24] 9618 	movx	a,@dptr
      002EA5 FE               [12] 9619 	mov	r6,a
      002EA6 74 32            [12] 9620 	mov	a,#0x32
      002EA8 2C               [12] 9621 	add	a,r4
      002EA9 FC               [12] 9622 	mov	r4,a
      002EAA 74 00            [12] 9623 	mov	a,#0x00
      002EAC 3D               [12] 9624 	addc	a,r5
      002EAD FD               [12] 9625 	mov	r5,a
      002EAE A8*00            [24] 9626 	mov	r0,_bp
      002EB0 08               [12] 9627 	inc	r0
      002EB1 E6               [12] 9628 	mov	a,@r0
      002EB2 2C               [12] 9629 	add	a,r4
      002EB3 FC               [12] 9630 	mov	r4,a
      002EB4 74 00            [12] 9631 	mov	a,#0x00
      002EB6 3D               [12] 9632 	addc	a,r5
      002EB7 FD               [12] 9633 	mov	r5,a
      002EB8 8C 82            [24] 9634 	mov	dpl,r4
      002EBA 8D 83            [24] 9635 	mov	dph,r5
      002EBC 8E F0            [24] 9636 	mov	b,r6
      002EBE 12r00r00         [24] 9637 	lcall	__gptrget
      002EC1 FC               [12] 9638 	mov	r4,a
      002EC2 BC 02 03         [24] 9639 	cjne	r4,#0x02,00128$
      002EC5 02r2FrC2         [24] 9640 	ljmp	00104$
      002EC8                       9641 00128$:
                           002EC8  9642 	C$tasks.c$4794$3_0$382 ==.
                                   9643 ;	tasks.c:4794: pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
      002EC8 90r00r00         [24] 9644 	mov	dptr,#_pxCurrentTCB
      002ECB E0               [24] 9645 	movx	a,@dptr
      002ECC FC               [12] 9646 	mov	r4,a
      002ECD A3               [24] 9647 	inc	dptr
      002ECE E0               [24] 9648 	movx	a,@dptr
      002ECF FD               [12] 9649 	mov	r5,a
      002ED0 A3               [24] 9650 	inc	dptr
      002ED1 E0               [24] 9651 	movx	a,@dptr
      002ED2 FE               [12] 9652 	mov	r6,a
      002ED3 74 2E            [12] 9653 	mov	a,#0x2e
      002ED5 2C               [12] 9654 	add	a,r4
      002ED6 FC               [12] 9655 	mov	r4,a
      002ED7 74 00            [12] 9656 	mov	a,#0x00
      002ED9 3D               [12] 9657 	addc	a,r5
      002EDA FD               [12] 9658 	mov	r5,a
      002EDB A8*00            [24] 9659 	mov	r0,_bp
      002EDD 08               [12] 9660 	inc	r0
      002EDE E6               [12] 9661 	mov	a,@r0
      002EDF 25 E0            [12] 9662 	add	a,acc
      002EE1 FB               [12] 9663 	mov	r3,a
      002EE2 EB               [12] 9664 	mov	a,r3
      002EE3 25 E0            [12] 9665 	add	a,acc
      002EE5 FB               [12] 9666 	mov	r3,a
      002EE6 A8*00            [24] 9667 	mov	r0,_bp
      002EE8 08               [12] 9668 	inc	r0
      002EE9 08               [12] 9669 	inc	r0
      002EEA EB               [12] 9670 	mov	a,r3
      002EEB 2C               [12] 9671 	add	a,r4
      002EEC F6               [12] 9672 	mov	@r0,a
      002EED 74 00            [12] 9673 	mov	a,#0x00
      002EEF 3D               [12] 9674 	addc	a,r5
      002EF0 08               [12] 9675 	inc	r0
      002EF1 F6               [12] 9676 	mov	@r0,a
      002EF2 08               [12] 9677 	inc	r0
      002EF3 A6 06            [24] 9678 	mov	@r0,ar6
      002EF5 90r00r00         [24] 9679 	mov	dptr,#_pxCurrentTCB
      002EF8 E0               [24] 9680 	movx	a,@dptr
      002EF9 FA               [12] 9681 	mov	r2,a
      002EFA A3               [24] 9682 	inc	dptr
      002EFB E0               [24] 9683 	movx	a,@dptr
      002EFC FF               [12] 9684 	mov	r7,a
      002EFD A3               [24] 9685 	inc	dptr
      002EFE E0               [24] 9686 	movx	a,@dptr
      002EFF FE               [12] 9687 	mov	r6,a
      002F00 74 2E            [12] 9688 	mov	a,#0x2e
      002F02 2A               [12] 9689 	add	a,r2
      002F03 FA               [12] 9690 	mov	r2,a
      002F04 74 00            [12] 9691 	mov	a,#0x00
      002F06 3F               [12] 9692 	addc	a,r7
      002F07 FF               [12] 9693 	mov	r7,a
      002F08 EB               [12] 9694 	mov	a,r3
      002F09 2A               [12] 9695 	add	a,r2
      002F0A FD               [12] 9696 	mov	r5,a
      002F0B 74 00            [12] 9697 	mov	a,#0x00
      002F0D 3F               [12] 9698 	addc	a,r7
      002F0E FF               [12] 9699 	mov	r7,a
      002F0F E5*00            [12] 9700 	mov	a,_bp
      002F11 24 FA            [12] 9701 	add	a,#0xfa
      002F13 F8               [12] 9702 	mov	r0,a
      002F14 E5*00            [12] 9703 	mov	a,_bp
      002F16 24 0C            [12] 9704 	add	a,#0x0c
      002F18 F9               [12] 9705 	mov	r1,a
      002F19 E6               [12] 9706 	mov	a,@r0
      002F1A F4               [12] 9707 	cpl	a
      002F1B F7               [12] 9708 	mov	@r1,a
      002F1C 08               [12] 9709 	inc	r0
      002F1D E6               [12] 9710 	mov	a,@r0
      002F1E F4               [12] 9711 	cpl	a
      002F1F 09               [12] 9712 	inc	r1
      002F20 F7               [12] 9713 	mov	@r1,a
      002F21 08               [12] 9714 	inc	r0
      002F22 E6               [12] 9715 	mov	a,@r0
      002F23 F4               [12] 9716 	cpl	a
      002F24 09               [12] 9717 	inc	r1
      002F25 F7               [12] 9718 	mov	@r1,a
      002F26 08               [12] 9719 	inc	r0
      002F27 E6               [12] 9720 	mov	a,@r0
      002F28 F4               [12] 9721 	cpl	a
      002F29 09               [12] 9722 	inc	r1
      002F2A F7               [12] 9723 	mov	@r1,a
      002F2B 8D 82            [24] 9724 	mov	dpl,r5
      002F2D 8F 83            [24] 9725 	mov	dph,r7
      002F2F 8E F0            [24] 9726 	mov	b,r6
      002F31 12r00r00         [24] 9727 	lcall	__gptrget
      002F34 FC               [12] 9728 	mov	r4,a
      002F35 A3               [24] 9729 	inc	dptr
      002F36 12r00r00         [24] 9730 	lcall	__gptrget
      002F39 FB               [12] 9731 	mov	r3,a
      002F3A A3               [24] 9732 	inc	dptr
      002F3B 12r00r00         [24] 9733 	lcall	__gptrget
      002F3E FE               [12] 9734 	mov	r6,a
      002F3F A3               [24] 9735 	inc	dptr
      002F40 12r00r00         [24] 9736 	lcall	__gptrget
      002F43 FF               [12] 9737 	mov	r7,a
      002F44 E5*00            [12] 9738 	mov	a,_bp
      002F46 24 0C            [12] 9739 	add	a,#0x0c
      002F48 F8               [12] 9740 	mov	r0,a
      002F49 E6               [12] 9741 	mov	a,@r0
      002F4A 52 04            [12] 9742 	anl	ar4,a
      002F4C 08               [12] 9743 	inc	r0
      002F4D E6               [12] 9744 	mov	a,@r0
      002F4E 52 03            [12] 9745 	anl	ar3,a
      002F50 08               [12] 9746 	inc	r0
      002F51 E6               [12] 9747 	mov	a,@r0
      002F52 52 06            [12] 9748 	anl	ar6,a
      002F54 08               [12] 9749 	inc	r0
      002F55 E6               [12] 9750 	mov	a,@r0
      002F56 52 07            [12] 9751 	anl	ar7,a
      002F58 A8*00            [24] 9752 	mov	r0,_bp
      002F5A 08               [12] 9753 	inc	r0
      002F5B 08               [12] 9754 	inc	r0
      002F5C 86 82            [24] 9755 	mov	dpl,@r0
      002F5E 08               [12] 9756 	inc	r0
      002F5F 86 83            [24] 9757 	mov	dph,@r0
      002F61 08               [12] 9758 	inc	r0
      002F62 86 F0            [24] 9759 	mov	b,@r0
      002F64 EC               [12] 9760 	mov	a,r4
      002F65 12r00r00         [24] 9761 	lcall	__gptrput
      002F68 A3               [24] 9762 	inc	dptr
      002F69 EB               [12] 9763 	mov	a,r3
      002F6A 12r00r00         [24] 9764 	lcall	__gptrput
      002F6D A3               [24] 9765 	inc	dptr
      002F6E EE               [12] 9766 	mov	a,r6
      002F6F 12r00r00         [24] 9767 	lcall	__gptrput
      002F72 A3               [24] 9768 	inc	dptr
      002F73 EF               [12] 9769 	mov	a,r7
      002F74 12r00r00         [24] 9770 	lcall	__gptrput
                           002F77  9771 	C$tasks.c$4797$3_0$382 ==.
                                   9772 ;	tasks.c:4797: pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
      002F77 90r00r00         [24] 9773 	mov	dptr,#_pxCurrentTCB
      002F7A E0               [24] 9774 	movx	a,@dptr
      002F7B FD               [12] 9775 	mov	r5,a
      002F7C A3               [24] 9776 	inc	dptr
      002F7D E0               [24] 9777 	movx	a,@dptr
      002F7E FE               [12] 9778 	mov	r6,a
      002F7F A3               [24] 9779 	inc	dptr
      002F80 E0               [24] 9780 	movx	a,@dptr
      002F81 FF               [12] 9781 	mov	r7,a
      002F82 74 32            [12] 9782 	mov	a,#0x32
      002F84 2D               [12] 9783 	add	a,r5
      002F85 FD               [12] 9784 	mov	r5,a
      002F86 74 00            [12] 9785 	mov	a,#0x00
      002F88 3E               [12] 9786 	addc	a,r6
      002F89 FE               [12] 9787 	mov	r6,a
      002F8A A8*00            [24] 9788 	mov	r0,_bp
      002F8C 08               [12] 9789 	inc	r0
      002F8D E6               [12] 9790 	mov	a,@r0
      002F8E 2D               [12] 9791 	add	a,r5
      002F8F FD               [12] 9792 	mov	r5,a
      002F90 74 00            [12] 9793 	mov	a,#0x00
      002F92 3E               [12] 9794 	addc	a,r6
      002F93 FE               [12] 9795 	mov	r6,a
      002F94 8D 82            [24] 9796 	mov	dpl,r5
      002F96 8E 83            [24] 9797 	mov	dph,r6
      002F98 8F F0            [24] 9798 	mov	b,r7
      002F9A 74 01            [12] 9799 	mov	a,#0x01
      002F9C 12r00r00         [24] 9800 	lcall	__gptrput
                           002F9F  9801 	C$tasks.c$4799$3_0$382 ==.
                                   9802 ;	tasks.c:4799: if( xTicksToWait > ( TickType_t ) 0 )
      002F9F E5*00            [12] 9803 	mov	a,_bp
      002FA1 24 F1            [12] 9804 	add	a,#0xf1
      002FA3 F8               [12] 9805 	mov	r0,a
      002FA4 E6               [12] 9806 	mov	a,@r0
      002FA5 08               [12] 9807 	inc	r0
      002FA6 46               [12] 9808 	orl	a,@r0
      002FA7 70 03            [24] 9809 	jnz	00129$
      002FA9 02r2FrC2         [24] 9810 	ljmp	00104$
      002FAC                       9811 00129$:
                           002FAC  9812 	C$tasks.c$4801$4_0$383 ==.
                                   9813 ;	tasks.c:4801: prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
      002FAC 74 01            [12] 9814 	mov	a,#0x01
      002FAE C0 E0            [24] 9815 	push	acc
      002FB0 E5*00            [12] 9816 	mov	a,_bp
      002FB2 24 F1            [12] 9817 	add	a,#0xf1
      002FB4 F8               [12] 9818 	mov	r0,a
      002FB5 86 82            [24] 9819 	mov	dpl,@r0
      002FB7 08               [12] 9820 	inc	r0
      002FB8 86 83            [24] 9821 	mov	dph,@r0
      002FBA 12r46rF6         [24] 9822 	lcall	_prvAddCurrentTaskToDelayedList
      002FBD 15 81            [12] 9823 	dec	sp
                           002FBF  9824 	C$tasks.c$4808$4_0$383 ==.
                                   9825 ;	tasks.c:4808: portYIELD_WITHIN_API();
      002FBF 12r00r00         [24] 9826 	lcall	_vPortYield
      002FC2                       9827 00104$:
                           002FC2  9828 	C$tasks.c$4820$1_0$380 ==.
                                   9829 ;	tasks.c:4820: taskEXIT_CRITICAL();
      002FC2 D0 E0            [24] 9830 	pop ACC 
      002FC4 53 E0 80         [24] 9831 	anl	_ACC,#0x80
      002FC7 E5 E0            [12] 9832 	mov	a,_ACC
      002FC9 42 A8            [12] 9833 	orl	_IE,a
      002FCB D0 E0            [24] 9834 	pop ACC 
                           002FCD  9835 	C$tasks.c$4822$1_0$380 ==.
                                   9836 ;	tasks.c:4822: taskENTER_CRITICAL();
      002FCD C0 E0            [24] 9837 	push ACC 
      002FCF C0 A8            [24] 9838 	push IE 
                                   9839 ;	assignBit
      002FD1 C2 AF            [12] 9840 	clr	_EA
                           002FD3  9841 	C$tasks.c$4826$2_0$386 ==.
                                   9842 ;	tasks.c:4826: if( pulNotificationValue != NULL )
      002FD3 E5*00            [12] 9843 	mov	a,_bp
      002FD5 24 F3            [12] 9844 	add	a,#0xf3
      002FD7 F8               [12] 9845 	mov	r0,a
      002FD8 E6               [12] 9846 	mov	a,@r0
      002FD9 08               [12] 9847 	inc	r0
      002FDA 46               [12] 9848 	orl	a,@r0
      002FDB 70 03            [24] 9849 	jnz	00130$
      002FDD 02r30r56         [24] 9850 	ljmp	00106$
      002FE0                       9851 00130$:
                           002FE0  9852 	C$tasks.c$4830$3_0$387 ==.
                                   9853 ;	tasks.c:4830: *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
      002FE0 E5*00            [12] 9854 	mov	a,_bp
      002FE2 24 F3            [12] 9855 	add	a,#0xf3
      002FE4 F8               [12] 9856 	mov	r0,a
      002FE5 E5*00            [12] 9857 	mov	a,_bp
      002FE7 24 05            [12] 9858 	add	a,#0x05
      002FE9 F9               [12] 9859 	mov	r1,a
      002FEA E6               [12] 9860 	mov	a,@r0
      002FEB F7               [12] 9861 	mov	@r1,a
      002FEC 08               [12] 9862 	inc	r0
      002FED E6               [12] 9863 	mov	a,@r0
      002FEE 09               [12] 9864 	inc	r1
      002FEF F7               [12] 9865 	mov	@r1,a
      002FF0 08               [12] 9866 	inc	r0
      002FF1 E6               [12] 9867 	mov	a,@r0
      002FF2 09               [12] 9868 	inc	r1
      002FF3 F7               [12] 9869 	mov	@r1,a
      002FF4 90r00r00         [24] 9870 	mov	dptr,#_pxCurrentTCB
      002FF7 E0               [24] 9871 	movx	a,@dptr
      002FF8 FA               [12] 9872 	mov	r2,a
      002FF9 A3               [24] 9873 	inc	dptr
      002FFA E0               [24] 9874 	movx	a,@dptr
      002FFB FB               [12] 9875 	mov	r3,a
      002FFC A3               [24] 9876 	inc	dptr
      002FFD E0               [24] 9877 	movx	a,@dptr
      002FFE FC               [12] 9878 	mov	r4,a
      002FFF 74 2E            [12] 9879 	mov	a,#0x2e
      003001 2A               [12] 9880 	add	a,r2
      003002 FF               [12] 9881 	mov	r7,a
      003003 74 00            [12] 9882 	mov	a,#0x00
      003005 3B               [12] 9883 	addc	a,r3
      003006 FE               [12] 9884 	mov	r6,a
      003007 8C 05            [24] 9885 	mov	ar5,r4
      003009 A8*00            [24] 9886 	mov	r0,_bp
      00300B 08               [12] 9887 	inc	r0
      00300C E6               [12] 9888 	mov	a,@r0
      00300D 25 E0            [12] 9889 	add	a,acc
      00300F FC               [12] 9890 	mov	r4,a
      003010 EC               [12] 9891 	mov	a,r4
      003011 25 E0            [12] 9892 	add	a,acc
      003013 FC               [12] 9893 	mov	r4,a
      003014 EC               [12] 9894 	mov	a,r4
      003015 2F               [12] 9895 	add	a,r7
      003016 FA               [12] 9896 	mov	r2,a
      003017 74 00            [12] 9897 	mov	a,#0x00
      003019 3E               [12] 9898 	addc	a,r6
      00301A FB               [12] 9899 	mov	r3,a
      00301B 8D 04            [24] 9900 	mov	ar4,r5
      00301D 8A 82            [24] 9901 	mov	dpl,r2
      00301F 8B 83            [24] 9902 	mov	dph,r3
      003021 8C F0            [24] 9903 	mov	b,r4
      003023 12r00r00         [24] 9904 	lcall	__gptrget
      003026 FA               [12] 9905 	mov	r2,a
      003027 A3               [24] 9906 	inc	dptr
      003028 12r00r00         [24] 9907 	lcall	__gptrget
      00302B FB               [12] 9908 	mov	r3,a
      00302C A3               [24] 9909 	inc	dptr
      00302D 12r00r00         [24] 9910 	lcall	__gptrget
      003030 FC               [12] 9911 	mov	r4,a
      003031 A3               [24] 9912 	inc	dptr
      003032 12r00r00         [24] 9913 	lcall	__gptrget
      003035 FF               [12] 9914 	mov	r7,a
      003036 E5*00            [12] 9915 	mov	a,_bp
      003038 24 05            [12] 9916 	add	a,#0x05
      00303A F8               [12] 9917 	mov	r0,a
      00303B 86 82            [24] 9918 	mov	dpl,@r0
      00303D 08               [12] 9919 	inc	r0
      00303E 86 83            [24] 9920 	mov	dph,@r0
      003040 08               [12] 9921 	inc	r0
      003041 86 F0            [24] 9922 	mov	b,@r0
      003043 EA               [12] 9923 	mov	a,r2
      003044 12r00r00         [24] 9924 	lcall	__gptrput
      003047 A3               [24] 9925 	inc	dptr
      003048 EB               [12] 9926 	mov	a,r3
      003049 12r00r00         [24] 9927 	lcall	__gptrput
      00304C A3               [24] 9928 	inc	dptr
      00304D EC               [12] 9929 	mov	a,r4
      00304E 12r00r00         [24] 9930 	lcall	__gptrput
      003051 A3               [24] 9931 	inc	dptr
      003052 EF               [12] 9932 	mov	a,r7
      003053 12r00r00         [24] 9933 	lcall	__gptrput
      003056                       9934 00106$:
                           003056  9935 	C$tasks.c$4837$2_0$386 ==.
                                   9936 ;	tasks.c:4837: if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
      003056 90r00r00         [24] 9937 	mov	dptr,#_pxCurrentTCB
      003059 E0               [24] 9938 	movx	a,@dptr
      00305A FD               [12] 9939 	mov	r5,a
      00305B A3               [24] 9940 	inc	dptr
      00305C E0               [24] 9941 	movx	a,@dptr
      00305D FE               [12] 9942 	mov	r6,a
      00305E A3               [24] 9943 	inc	dptr
      00305F E0               [24] 9944 	movx	a,@dptr
      003060 FF               [12] 9945 	mov	r7,a
      003061 74 32            [12] 9946 	mov	a,#0x32
      003063 2D               [12] 9947 	add	a,r5
      003064 FD               [12] 9948 	mov	r5,a
      003065 74 00            [12] 9949 	mov	a,#0x00
      003067 3E               [12] 9950 	addc	a,r6
      003068 FE               [12] 9951 	mov	r6,a
      003069 A8*00            [24] 9952 	mov	r0,_bp
      00306B 08               [12] 9953 	inc	r0
      00306C E6               [12] 9954 	mov	a,@r0
      00306D 2D               [12] 9955 	add	a,r5
      00306E FD               [12] 9956 	mov	r5,a
      00306F 74 00            [12] 9957 	mov	a,#0x00
      003071 3E               [12] 9958 	addc	a,r6
      003072 FE               [12] 9959 	mov	r6,a
      003073 8D 82            [24] 9960 	mov	dpl,r5
      003075 8E 83            [24] 9961 	mov	dph,r6
      003077 8F F0            [24] 9962 	mov	b,r7
      003079 12r00r00         [24] 9963 	lcall	__gptrget
      00307C FD               [12] 9964 	mov	r5,a
      00307D BD 02 03         [24] 9965 	cjne	r5,#0x02,00131$
      003080 02r30r88         [24] 9966 	ljmp	00108$
      003083                       9967 00131$:
                           003083  9968 	C$tasks.c$4840$3_0$388 ==.
                                   9969 ;	tasks.c:4840: xReturn = pdFALSE;
      003083 7F 00            [12] 9970 	mov	r7,#0x00
      003085 02r31r3B         [24] 9971 	ljmp	00109$
      003088                       9972 00108$:
                           003088  9973 	C$tasks.c$4846$3_0$389 ==.
                                   9974 ;	tasks.c:4846: pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
      003088 90r00r00         [24] 9975 	mov	dptr,#_pxCurrentTCB
      00308B E0               [24] 9976 	movx	a,@dptr
      00308C FC               [12] 9977 	mov	r4,a
      00308D A3               [24] 9978 	inc	dptr
      00308E E0               [24] 9979 	movx	a,@dptr
      00308F FD               [12] 9980 	mov	r5,a
      003090 A3               [24] 9981 	inc	dptr
      003091 E0               [24] 9982 	movx	a,@dptr
      003092 FE               [12] 9983 	mov	r6,a
      003093 74 2E            [12] 9984 	mov	a,#0x2e
      003095 2C               [12] 9985 	add	a,r4
      003096 FC               [12] 9986 	mov	r4,a
      003097 74 00            [12] 9987 	mov	a,#0x00
      003099 3D               [12] 9988 	addc	a,r5
      00309A FD               [12] 9989 	mov	r5,a
      00309B A8*00            [24] 9990 	mov	r0,_bp
      00309D 08               [12] 9991 	inc	r0
      00309E E6               [12] 9992 	mov	a,@r0
      00309F 25 E0            [12] 9993 	add	a,acc
      0030A1 FB               [12] 9994 	mov	r3,a
      0030A2 EB               [12] 9995 	mov	a,r3
      0030A3 25 E0            [12] 9996 	add	a,acc
      0030A5 FB               [12] 9997 	mov	r3,a
      0030A6 E5*00            [12] 9998 	mov	a,_bp
      0030A8 24 0C            [12] 9999 	add	a,#0x0c
      0030AA F8               [12]10000 	mov	r0,a
      0030AB EB               [12]10001 	mov	a,r3
      0030AC 2C               [12]10002 	add	a,r4
      0030AD F6               [12]10003 	mov	@r0,a
      0030AE 74 00            [12]10004 	mov	a,#0x00
      0030B0 3D               [12]10005 	addc	a,r5
      0030B1 08               [12]10006 	inc	r0
      0030B2 F6               [12]10007 	mov	@r0,a
      0030B3 08               [12]10008 	inc	r0
      0030B4 A6 06            [24]10009 	mov	@r0,ar6
      0030B6 90r00r00         [24]10010 	mov	dptr,#_pxCurrentTCB
      0030B9 E0               [24]10011 	movx	a,@dptr
      0030BA FA               [12]10012 	mov	r2,a
      0030BB A3               [24]10013 	inc	dptr
      0030BC E0               [24]10014 	movx	a,@dptr
      0030BD FD               [12]10015 	mov	r5,a
      0030BE A3               [24]10016 	inc	dptr
      0030BF E0               [24]10017 	movx	a,@dptr
      0030C0 FE               [12]10018 	mov	r6,a
      0030C1 74 2E            [12]10019 	mov	a,#0x2e
      0030C3 2A               [12]10020 	add	a,r2
      0030C4 FA               [12]10021 	mov	r2,a
      0030C5 74 00            [12]10022 	mov	a,#0x00
      0030C7 3D               [12]10023 	addc	a,r5
      0030C8 FD               [12]10024 	mov	r5,a
      0030C9 EB               [12]10025 	mov	a,r3
      0030CA 2A               [12]10026 	add	a,r2
      0030CB FF               [12]10027 	mov	r7,a
      0030CC 74 00            [12]10028 	mov	a,#0x00
      0030CE 3D               [12]10029 	addc	a,r5
      0030CF FD               [12]10030 	mov	r5,a
      0030D0 E5*00            [12]10031 	mov	a,_bp
      0030D2 24 F6            [12]10032 	add	a,#0xf6
      0030D4 F8               [12]10033 	mov	r0,a
      0030D5 E5*00            [12]10034 	mov	a,_bp
      0030D7 24 08            [12]10035 	add	a,#0x08
      0030D9 F9               [12]10036 	mov	r1,a
      0030DA E6               [12]10037 	mov	a,@r0
      0030DB F4               [12]10038 	cpl	a
      0030DC F7               [12]10039 	mov	@r1,a
      0030DD 08               [12]10040 	inc	r0
      0030DE E6               [12]10041 	mov	a,@r0
      0030DF F4               [12]10042 	cpl	a
      0030E0 09               [12]10043 	inc	r1
      0030E1 F7               [12]10044 	mov	@r1,a
      0030E2 08               [12]10045 	inc	r0
      0030E3 E6               [12]10046 	mov	a,@r0
      0030E4 F4               [12]10047 	cpl	a
      0030E5 09               [12]10048 	inc	r1
      0030E6 F7               [12]10049 	mov	@r1,a
      0030E7 08               [12]10050 	inc	r0
      0030E8 E6               [12]10051 	mov	a,@r0
      0030E9 F4               [12]10052 	cpl	a
      0030EA 09               [12]10053 	inc	r1
      0030EB F7               [12]10054 	mov	@r1,a
      0030EC 8F 82            [24]10055 	mov	dpl,r7
      0030EE 8D 83            [24]10056 	mov	dph,r5
      0030F0 8E F0            [24]10057 	mov	b,r6
      0030F2 12r00r00         [24]10058 	lcall	__gptrget
      0030F5 FC               [12]10059 	mov	r4,a
      0030F6 A3               [24]10060 	inc	dptr
      0030F7 12r00r00         [24]10061 	lcall	__gptrget
      0030FA FD               [12]10062 	mov	r5,a
      0030FB A3               [24]10063 	inc	dptr
      0030FC 12r00r00         [24]10064 	lcall	__gptrget
      0030FF FA               [12]10065 	mov	r2,a
      003100 A3               [24]10066 	inc	dptr
      003101 12r00r00         [24]10067 	lcall	__gptrget
      003104 FE               [12]10068 	mov	r6,a
      003105 E5*00            [12]10069 	mov	a,_bp
      003107 24 08            [12]10070 	add	a,#0x08
      003109 F8               [12]10071 	mov	r0,a
      00310A E6               [12]10072 	mov	a,@r0
      00310B 52 04            [12]10073 	anl	ar4,a
      00310D 08               [12]10074 	inc	r0
      00310E E6               [12]10075 	mov	a,@r0
      00310F 52 05            [12]10076 	anl	ar5,a
      003111 08               [12]10077 	inc	r0
      003112 E6               [12]10078 	mov	a,@r0
      003113 52 02            [12]10079 	anl	ar2,a
      003115 08               [12]10080 	inc	r0
      003116 E6               [12]10081 	mov	a,@r0
      003117 52 06            [12]10082 	anl	ar6,a
      003119 E5*00            [12]10083 	mov	a,_bp
      00311B 24 0C            [12]10084 	add	a,#0x0c
      00311D F8               [12]10085 	mov	r0,a
      00311E 86 82            [24]10086 	mov	dpl,@r0
      003120 08               [12]10087 	inc	r0
      003121 86 83            [24]10088 	mov	dph,@r0
      003123 08               [12]10089 	inc	r0
      003124 86 F0            [24]10090 	mov	b,@r0
      003126 EC               [12]10091 	mov	a,r4
      003127 12r00r00         [24]10092 	lcall	__gptrput
      00312A A3               [24]10093 	inc	dptr
      00312B ED               [12]10094 	mov	a,r5
      00312C 12r00r00         [24]10095 	lcall	__gptrput
      00312F A3               [24]10096 	inc	dptr
      003130 EA               [12]10097 	mov	a,r2
      003131 12r00r00         [24]10098 	lcall	__gptrput
      003134 A3               [24]10099 	inc	dptr
      003135 EE               [12]10100 	mov	a,r6
      003136 12r00r00         [24]10101 	lcall	__gptrput
                           003139 10102 	C$tasks.c$4847$3_0$389 ==.
                                  10103 ;	tasks.c:4847: xReturn = pdTRUE;
      003139 7F 01            [12]10104 	mov	r7,#0x01
      00313B                      10105 00109$:
                           00313B 10106 	C$tasks.c$4850$2_0$386 ==.
                                  10107 ;	tasks.c:4850: pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
      00313B 90r00r00         [24]10108 	mov	dptr,#_pxCurrentTCB
      00313E E0               [24]10109 	movx	a,@dptr
      00313F FC               [12]10110 	mov	r4,a
      003140 A3               [24]10111 	inc	dptr
      003141 E0               [24]10112 	movx	a,@dptr
      003142 FD               [12]10113 	mov	r5,a
      003143 A3               [24]10114 	inc	dptr
      003144 E0               [24]10115 	movx	a,@dptr
      003145 FE               [12]10116 	mov	r6,a
      003146 74 32            [12]10117 	mov	a,#0x32
      003148 2C               [12]10118 	add	a,r4
      003149 FC               [12]10119 	mov	r4,a
      00314A 74 00            [12]10120 	mov	a,#0x00
      00314C 3D               [12]10121 	addc	a,r5
      00314D FD               [12]10122 	mov	r5,a
      00314E A8*00            [24]10123 	mov	r0,_bp
      003150 08               [12]10124 	inc	r0
      003151 E6               [12]10125 	mov	a,@r0
      003152 2C               [12]10126 	add	a,r4
      003153 FC               [12]10127 	mov	r4,a
      003154 74 00            [12]10128 	mov	a,#0x00
      003156 3D               [12]10129 	addc	a,r5
      003157 FD               [12]10130 	mov	r5,a
      003158 8C 82            [24]10131 	mov	dpl,r4
      00315A 8D 83            [24]10132 	mov	dph,r5
      00315C 8E F0            [24]10133 	mov	b,r6
      00315E 74 00            [12]10134 	mov	a,#0x00
      003160 12r00r00         [24]10135 	lcall	__gptrput
                           003163 10136 	C$tasks.c$4852$1_0$380 ==.
                                  10137 ;	tasks.c:4852: taskEXIT_CRITICAL();
      003163 D0 E0            [24]10138 	pop ACC 
      003165 53 E0 80         [24]10139 	anl	_ACC,#0x80
      003168 E5 E0            [12]10140 	mov	a,_ACC
      00316A 42 A8            [12]10141 	orl	_IE,a
      00316C D0 E0            [24]10142 	pop ACC 
                           00316E 10143 	C$tasks.c$4854$1_0$380 ==.
                                  10144 ;	tasks.c:4854: return xReturn;
      00316E 8F 82            [24]10145 	mov	dpl,r7
      003170                      10146 00110$:
                           003170 10147 	C$tasks.c$4855$1_0$380 ==.
                                  10148 ;	tasks.c:4855: }
      003170 85*00 81         [24]10149 	mov	sp,_bp
      003173 D0*00            [24]10150 	pop	_bp
                           003175 10151 	C$tasks.c$4855$1_0$380 ==.
                           003175 10152 	XG$xTaskGenericNotifyWait$0$0 ==.
      003175 22               [24]10153 	ret
                                  10154 ;------------------------------------------------------------
                                  10155 ;Allocation info for local variables in function 'xTaskGenericNotify'
                                  10156 ;------------------------------------------------------------
                                  10157 ;uxIndexToNotify           Allocated to stack - _bp -3
                                  10158 ;ulValue                   Allocated to stack - _bp -7
                                  10159 ;eAction                   Allocated to stack - _bp -8
                                  10160 ;pulPreviousNotificationValue Allocated to stack - _bp -11
                                  10161 ;xTaskToNotify             Allocated to registers r7 r6 r5 
                                  10162 ;pxTCB                     Allocated to stack - _bp +16
                                  10163 ;xReturn                   Allocated to stack - _bp +19
                                  10164 ;ucOriginalNotifyState     Allocated to registers r4 
                                  10165 ;pxList                    Allocated to stack - _bp +20
                                  10166 ;pxIndex                   Allocated to registers r2 r3 r4 
                                  10167 ;sloc0                     Allocated to stack - _bp +1
                                  10168 ;sloc1                     Allocated to stack - _bp +7
                                  10169 ;sloc2                     Allocated to stack - _bp +13
                                  10170 ;sloc3                     Allocated to stack - _bp +10
                                  10171 ;sloc4                     Allocated to stack - _bp +4
                                  10172 ;------------------------------------------------------------
                           003176 10173 	G$xTaskGenericNotify$0$0 ==.
                           003176 10174 	C$tasks.c$4862$1_0$391 ==.
                                  10175 ;	tasks.c:4862: BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
                                  10176 ;	-----------------------------------------
                                  10177 ;	 function xTaskGenericNotify
                                  10178 ;	-----------------------------------------
      003176                      10179 _xTaskGenericNotify:
      003176 C0*00            [24]10180 	push	_bp
      003178 85 81*00         [24]10181 	mov	_bp,sp
      00317B E5 81            [12]10182 	mov	a,sp
      00317D 24 16            [12]10183 	add	a,#0x16
      00317F F5 81            [12]10184 	mov	sp,a
      003181 AF 82            [24]10185 	mov	r7,dpl
      003183 AE 83            [24]10186 	mov	r6,dph
      003185 AD F0            [24]10187 	mov	r5,b
                           003187 10188 	C$tasks.c$4869$2_0$391 ==.
                                  10189 ;	tasks.c:4869: BaseType_t xReturn = pdPASS;
      003187 E5*00            [12]10190 	mov	a,_bp
      003189 24 13            [12]10191 	add	a,#0x13
      00318B F8               [12]10192 	mov	r0,a
      00318C 76 01            [12]10193 	mov	@r0,#0x01
                           00318E 10194 	C$tasks.c$4874$1_0$391 ==.
                                  10195 ;	tasks.c:4874: pxTCB = xTaskToNotify;
      00318E E5*00            [12]10196 	mov	a,_bp
      003190 24 10            [12]10197 	add	a,#0x10
      003192 F8               [12]10198 	mov	r0,a
      003193 A6 07            [24]10199 	mov	@r0,ar7
      003195 08               [12]10200 	inc	r0
      003196 A6 06            [24]10201 	mov	@r0,ar6
      003198 08               [12]10202 	inc	r0
      003199 A6 05            [24]10203 	mov	@r0,ar5
                           00319B 10204 	C$tasks.c$4876$1_0$391 ==.
                                  10205 ;	tasks.c:4876: taskENTER_CRITICAL();
      00319B C0 E0            [24]10206 	push ACC 
      00319D C0 A8            [24]10207 	push IE 
                                  10208 ;	assignBit
      00319F C2 AF            [12]10209 	clr	_EA
                           0031A1 10210 	C$tasks.c$4878$2_0$392 ==.
                                  10211 ;	tasks.c:4878: if( pulPreviousNotificationValue != NULL )
      0031A1 E5*00            [12]10212 	mov	a,_bp
      0031A3 24 F5            [12]10213 	add	a,#0xf5
      0031A5 F8               [12]10214 	mov	r0,a
      0031A6 E6               [12]10215 	mov	a,@r0
      0031A7 08               [12]10216 	inc	r0
      0031A8 46               [12]10217 	orl	a,@r0
      0031A9 70 03            [24]10218 	jnz	00145$
      0031AB 02r32r19         [24]10219 	ljmp	00102$
      0031AE                      10220 00145$:
                           0031AE 10221 	C$tasks.c$4880$1_0$391 ==.
                                  10222 ;	tasks.c:4880: *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
      0031AE E5*00            [12]10223 	mov	a,_bp
      0031B0 24 F5            [12]10224 	add	a,#0xf5
      0031B2 F8               [12]10225 	mov	r0,a
      0031B3 E5*00            [12]10226 	mov	a,_bp
      0031B5 24 07            [12]10227 	add	a,#0x07
      0031B7 F9               [12]10228 	mov	r1,a
      0031B8 E6               [12]10229 	mov	a,@r0
      0031B9 F7               [12]10230 	mov	@r1,a
      0031BA 08               [12]10231 	inc	r0
      0031BB E6               [12]10232 	mov	a,@r0
      0031BC 09               [12]10233 	inc	r1
      0031BD F7               [12]10234 	mov	@r1,a
      0031BE 08               [12]10235 	inc	r0
      0031BF E6               [12]10236 	mov	a,@r0
      0031C0 09               [12]10237 	inc	r1
      0031C1 F7               [12]10238 	mov	@r1,a
      0031C2 74 2E            [12]10239 	mov	a,#0x2e
      0031C4 2F               [12]10240 	add	a,r7
      0031C5 FF               [12]10241 	mov	r7,a
      0031C6 74 00            [12]10242 	mov	a,#0x00
      0031C8 3E               [12]10243 	addc	a,r6
      0031C9 FE               [12]10244 	mov	r6,a
      0031CA E5*00            [12]10245 	mov	a,_bp
      0031CC 24 FD            [12]10246 	add	a,#0xfd
      0031CE F8               [12]10247 	mov	r0,a
      0031CF E6               [12]10248 	mov	a,@r0
      0031D0 25 E0            [12]10249 	add	a,acc
      0031D2 FC               [12]10250 	mov	r4,a
      0031D3 EC               [12]10251 	mov	a,r4
      0031D4 25 E0            [12]10252 	add	a,acc
      0031D6 FC               [12]10253 	mov	r4,a
      0031D7 EC               [12]10254 	mov	a,r4
      0031D8 2F               [12]10255 	add	a,r7
      0031D9 FA               [12]10256 	mov	r2,a
      0031DA 74 00            [12]10257 	mov	a,#0x00
      0031DC 3E               [12]10258 	addc	a,r6
      0031DD FB               [12]10259 	mov	r3,a
      0031DE 8D 04            [24]10260 	mov	ar4,r5
      0031E0 8A 82            [24]10261 	mov	dpl,r2
      0031E2 8B 83            [24]10262 	mov	dph,r3
      0031E4 8C F0            [24]10263 	mov	b,r4
      0031E6 12r00r00         [24]10264 	lcall	__gptrget
      0031E9 FA               [12]10265 	mov	r2,a
      0031EA A3               [24]10266 	inc	dptr
      0031EB 12r00r00         [24]10267 	lcall	__gptrget
      0031EE FB               [12]10268 	mov	r3,a
      0031EF A3               [24]10269 	inc	dptr
      0031F0 12r00r00         [24]10270 	lcall	__gptrget
      0031F3 FC               [12]10271 	mov	r4,a
      0031F4 A3               [24]10272 	inc	dptr
      0031F5 12r00r00         [24]10273 	lcall	__gptrget
      0031F8 FF               [12]10274 	mov	r7,a
      0031F9 E5*00            [12]10275 	mov	a,_bp
      0031FB 24 07            [12]10276 	add	a,#0x07
      0031FD F8               [12]10277 	mov	r0,a
      0031FE 86 82            [24]10278 	mov	dpl,@r0
      003200 08               [12]10279 	inc	r0
      003201 86 83            [24]10280 	mov	dph,@r0
      003203 08               [12]10281 	inc	r0
      003204 86 F0            [24]10282 	mov	b,@r0
      003206 EA               [12]10283 	mov	a,r2
      003207 12r00r00         [24]10284 	lcall	__gptrput
      00320A A3               [24]10285 	inc	dptr
      00320B EB               [12]10286 	mov	a,r3
      00320C 12r00r00         [24]10287 	lcall	__gptrput
      00320F A3               [24]10288 	inc	dptr
      003210 EC               [12]10289 	mov	a,r4
      003211 12r00r00         [24]10290 	lcall	__gptrput
      003214 A3               [24]10291 	inc	dptr
      003215 EF               [12]10292 	mov	a,r7
      003216 12r00r00         [24]10293 	lcall	__gptrput
                           003219 10294 	C$tasks.c$4977$1_0$391 ==.
                                  10295 ;	tasks.c:4977: return xReturn;
                           003219 10296 	C$tasks.c$4880$2_0$392 ==.
                                  10297 ;	tasks.c:4880: *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
      003219                      10298 00102$:
                           003219 10299 	C$tasks.c$4883$2_0$392 ==.
                                  10300 ;	tasks.c:4883: ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
      003219 E5*00            [12]10301 	mov	a,_bp
      00321B 24 10            [12]10302 	add	a,#0x10
      00321D F8               [12]10303 	mov	r0,a
      00321E 74 32            [12]10304 	mov	a,#0x32
      003220 26               [12]10305 	add	a,@r0
      003221 FD               [12]10306 	mov	r5,a
      003222 74 00            [12]10307 	mov	a,#0x00
      003224 08               [12]10308 	inc	r0
      003225 36               [12]10309 	addc	a,@r0
      003226 FE               [12]10310 	mov	r6,a
      003227 08               [12]10311 	inc	r0
      003228 86 07            [24]10312 	mov	ar7,@r0
      00322A E5*00            [12]10313 	mov	a,_bp
      00322C 24 FD            [12]10314 	add	a,#0xfd
      00322E F8               [12]10315 	mov	r0,a
      00322F 86 02            [24]10316 	mov	ar2,@r0
      003231 EA               [12]10317 	mov	a,r2
      003232 2D               [12]10318 	add	a,r5
      003233 FD               [12]10319 	mov	r5,a
      003234 74 00            [12]10320 	mov	a,#0x00
      003236 3E               [12]10321 	addc	a,r6
      003237 FE               [12]10322 	mov	r6,a
      003238 8D 82            [24]10323 	mov	dpl,r5
      00323A 8E 83            [24]10324 	mov	dph,r6
      00323C 8F F0            [24]10325 	mov	b,r7
      00323E 12r00r00         [24]10326 	lcall	__gptrget
      003241 FC               [12]10327 	mov	r4,a
                           003242 10328 	C$tasks.c$4885$2_0$392 ==.
                                  10329 ;	tasks.c:4885: pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
      003242 8D 82            [24]10330 	mov	dpl,r5
      003244 8E 83            [24]10331 	mov	dph,r6
      003246 8F F0            [24]10332 	mov	b,r7
      003248 74 02            [12]10333 	mov	a,#0x02
      00324A 12r00r00         [24]10334 	lcall	__gptrput
                           00324D 10335 	C$tasks.c$4887$2_0$392 ==.
                                  10336 ;	tasks.c:4887: switch( eAction )
      00324D E5*00            [12]10337 	mov	a,_bp
      00324F 24 F8            [12]10338 	add	a,#0xf8
      003251 F8               [12]10339 	mov	r0,a
      003252 C3               [12]10340 	clr	c
      003253 74 04            [12]10341 	mov	a,#0x04
      003255 96               [12]10342 	subb	a,@r0
      003256 50 03            [24]10343 	jnc	00146$
      003258 02r34r00         [24]10344 	ljmp	00112$
      00325B                      10345 00146$:
      00325B E5*00            [12]10346 	mov	a,_bp
      00325D 24 F8            [12]10347 	add	a,#0xf8
      00325F F8               [12]10348 	mov	r0,a
      003260 E6               [12]10349 	mov	a,@r0
      003261 26               [12]10350 	add	a,@r0
      003262 26               [12]10351 	add	a,@r0
      003263 90r32r67         [24]10352 	mov	dptr,#00147$
      003266 73               [24]10353 	jmp	@a+dptr
      003267                      10354 00147$:
      003267 02r34r00         [24]10355 	ljmp	00112$
      00326A 02r32r76         [24]10356 	ljmp	00103$
      00326D 02r32rF4         [24]10357 	ljmp	00104$
      003270 02r33r6B         [24]10358 	ljmp	00105$
      003273 02r33rAF         [24]10359 	ljmp	00106$
                           003276 10360 	C$tasks.c$4889$3_0$394 ==.
                                  10361 ;	tasks.c:4889: case eSetBits:
      003276                      10362 00103$:
                           003276 10363 	C$tasks.c$4890$1_0$391 ==.
                                  10364 ;	tasks.c:4890: pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
      003276 C0 04            [24]10365 	push	ar4
      003278 E5*00            [12]10366 	mov	a,_bp
      00327A 24 10            [12]10367 	add	a,#0x10
      00327C F8               [12]10368 	mov	r0,a
      00327D 74 2E            [12]10369 	mov	a,#0x2e
      00327F 26               [12]10370 	add	a,@r0
      003280 FD               [12]10371 	mov	r5,a
      003281 74 00            [12]10372 	mov	a,#0x00
      003283 08               [12]10373 	inc	r0
      003284 36               [12]10374 	addc	a,@r0
      003285 FE               [12]10375 	mov	r6,a
      003286 08               [12]10376 	inc	r0
      003287 86 07            [24]10377 	mov	ar7,@r0
      003289 EA               [12]10378 	mov	a,r2
      00328A 25 E0            [12]10379 	add	a,acc
      00328C FB               [12]10380 	mov	r3,a
      00328D EB               [12]10381 	mov	a,r3
      00328E 25 E0            [12]10382 	add	a,acc
      003290 FB               [12]10383 	mov	r3,a
      003291 A8*00            [24]10384 	mov	r0,_bp
      003293 08               [12]10385 	inc	r0
      003294 EB               [12]10386 	mov	a,r3
      003295 2D               [12]10387 	add	a,r5
      003296 F6               [12]10388 	mov	@r0,a
      003297 74 00            [12]10389 	mov	a,#0x00
      003299 3E               [12]10390 	addc	a,r6
      00329A 08               [12]10391 	inc	r0
      00329B F6               [12]10392 	mov	@r0,a
      00329C 08               [12]10393 	inc	r0
      00329D A6 07            [24]10394 	mov	@r0,ar7
      00329F A8*00            [24]10395 	mov	r0,_bp
      0032A1 08               [12]10396 	inc	r0
      0032A2 86 82            [24]10397 	mov	dpl,@r0
      0032A4 08               [12]10398 	inc	r0
      0032A5 86 83            [24]10399 	mov	dph,@r0
      0032A7 08               [12]10400 	inc	r0
      0032A8 86 F0            [24]10401 	mov	b,@r0
      0032AA 12r00r00         [24]10402 	lcall	__gptrget
      0032AD FA               [12]10403 	mov	r2,a
      0032AE A3               [24]10404 	inc	dptr
      0032AF 12r00r00         [24]10405 	lcall	__gptrget
      0032B2 FB               [12]10406 	mov	r3,a
      0032B3 A3               [24]10407 	inc	dptr
      0032B4 12r00r00         [24]10408 	lcall	__gptrget
      0032B7 FC               [12]10409 	mov	r4,a
      0032B8 A3               [24]10410 	inc	dptr
      0032B9 12r00r00         [24]10411 	lcall	__gptrget
      0032BC FF               [12]10412 	mov	r7,a
      0032BD E5*00            [12]10413 	mov	a,_bp
      0032BF 24 F9            [12]10414 	add	a,#0xf9
      0032C1 F8               [12]10415 	mov	r0,a
      0032C2 E6               [12]10416 	mov	a,@r0
      0032C3 42 02            [12]10417 	orl	ar2,a
      0032C5 08               [12]10418 	inc	r0
      0032C6 E6               [12]10419 	mov	a,@r0
      0032C7 42 03            [12]10420 	orl	ar3,a
      0032C9 08               [12]10421 	inc	r0
      0032CA E6               [12]10422 	mov	a,@r0
      0032CB 42 04            [12]10423 	orl	ar4,a
      0032CD 08               [12]10424 	inc	r0
      0032CE E6               [12]10425 	mov	a,@r0
      0032CF 42 07            [12]10426 	orl	ar7,a
      0032D1 A8*00            [24]10427 	mov	r0,_bp
      0032D3 08               [12]10428 	inc	r0
      0032D4 86 82            [24]10429 	mov	dpl,@r0
      0032D6 08               [12]10430 	inc	r0
      0032D7 86 83            [24]10431 	mov	dph,@r0
      0032D9 08               [12]10432 	inc	r0
      0032DA 86 F0            [24]10433 	mov	b,@r0
      0032DC EA               [12]10434 	mov	a,r2
      0032DD 12r00r00         [24]10435 	lcall	__gptrput
      0032E0 A3               [24]10436 	inc	dptr
      0032E1 EB               [12]10437 	mov	a,r3
      0032E2 12r00r00         [24]10438 	lcall	__gptrput
      0032E5 A3               [24]10439 	inc	dptr
      0032E6 EC               [12]10440 	mov	a,r4
      0032E7 12r00r00         [24]10441 	lcall	__gptrput
      0032EA A3               [24]10442 	inc	dptr
      0032EB EF               [12]10443 	mov	a,r7
      0032EC 12r00r00         [24]10444 	lcall	__gptrput
                           0032EF 10445 	C$tasks.c$4891$1_0$391 ==.
                                  10446 ;	tasks.c:4891: break;
      0032EF D0 04            [24]10447 	pop	ar4
      0032F1 02r34r00         [24]10448 	ljmp	00112$
                           0032F4 10449 	C$tasks.c$4893$3_0$394 ==.
                                  10450 ;	tasks.c:4893: case eIncrement:
      0032F4                      10451 00104$:
                           0032F4 10452 	C$tasks.c$4894$1_0$391 ==.
                                  10453 ;	tasks.c:4894: ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
      0032F4 C0 04            [24]10454 	push	ar4
      0032F6 E5*00            [12]10455 	mov	a,_bp
      0032F8 24 10            [12]10456 	add	a,#0x10
      0032FA F8               [12]10457 	mov	r0,a
      0032FB 74 2E            [12]10458 	mov	a,#0x2e
      0032FD 26               [12]10459 	add	a,@r0
      0032FE FD               [12]10460 	mov	r5,a
      0032FF 74 00            [12]10461 	mov	a,#0x00
      003301 08               [12]10462 	inc	r0
      003302 36               [12]10463 	addc	a,@r0
      003303 FE               [12]10464 	mov	r6,a
      003304 08               [12]10465 	inc	r0
      003305 86 07            [24]10466 	mov	ar7,@r0
      003307 EA               [12]10467 	mov	a,r2
      003308 25 E0            [12]10468 	add	a,acc
      00330A FB               [12]10469 	mov	r3,a
      00330B EB               [12]10470 	mov	a,r3
      00330C 25 E0            [12]10471 	add	a,acc
      00330E FB               [12]10472 	mov	r3,a
      00330F A8*00            [24]10473 	mov	r0,_bp
      003311 08               [12]10474 	inc	r0
      003312 EB               [12]10475 	mov	a,r3
      003313 2D               [12]10476 	add	a,r5
      003314 F6               [12]10477 	mov	@r0,a
      003315 74 00            [12]10478 	mov	a,#0x00
      003317 3E               [12]10479 	addc	a,r6
      003318 08               [12]10480 	inc	r0
      003319 F6               [12]10481 	mov	@r0,a
      00331A 08               [12]10482 	inc	r0
      00331B A6 07            [24]10483 	mov	@r0,ar7
      00331D A8*00            [24]10484 	mov	r0,_bp
      00331F 08               [12]10485 	inc	r0
      003320 86 82            [24]10486 	mov	dpl,@r0
      003322 08               [12]10487 	inc	r0
      003323 86 83            [24]10488 	mov	dph,@r0
      003325 08               [12]10489 	inc	r0
      003326 86 F0            [24]10490 	mov	b,@r0
      003328 12r00r00         [24]10491 	lcall	__gptrget
      00332B FA               [12]10492 	mov	r2,a
      00332C A3               [24]10493 	inc	dptr
      00332D 12r00r00         [24]10494 	lcall	__gptrget
      003330 FB               [12]10495 	mov	r3,a
      003331 A3               [24]10496 	inc	dptr
      003332 12r00r00         [24]10497 	lcall	__gptrget
      003335 FC               [12]10498 	mov	r4,a
      003336 A3               [24]10499 	inc	dptr
      003337 12r00r00         [24]10500 	lcall	__gptrget
      00333A FF               [12]10501 	mov	r7,a
      00333B 0A               [12]10502 	inc	r2
      00333C BA 00 09         [24]10503 	cjne	r2,#0x00,00148$
      00333F 0B               [12]10504 	inc	r3
      003340 BB 00 05         [24]10505 	cjne	r3,#0x00,00148$
      003343 0C               [12]10506 	inc	r4
      003344 BC 00 01         [24]10507 	cjne	r4,#0x00,00148$
      003347 0F               [12]10508 	inc	r7
      003348                      10509 00148$:
      003348 A8*00            [24]10510 	mov	r0,_bp
      00334A 08               [12]10511 	inc	r0
      00334B 86 82            [24]10512 	mov	dpl,@r0
      00334D 08               [12]10513 	inc	r0
      00334E 86 83            [24]10514 	mov	dph,@r0
      003350 08               [12]10515 	inc	r0
      003351 86 F0            [24]10516 	mov	b,@r0
      003353 EA               [12]10517 	mov	a,r2
      003354 12r00r00         [24]10518 	lcall	__gptrput
      003357 A3               [24]10519 	inc	dptr
      003358 EB               [12]10520 	mov	a,r3
      003359 12r00r00         [24]10521 	lcall	__gptrput
      00335C A3               [24]10522 	inc	dptr
      00335D EC               [12]10523 	mov	a,r4
      00335E 12r00r00         [24]10524 	lcall	__gptrput
      003361 A3               [24]10525 	inc	dptr
      003362 EF               [12]10526 	mov	a,r7
      003363 12r00r00         [24]10527 	lcall	__gptrput
                           003366 10528 	C$tasks.c$4895$1_0$391 ==.
                                  10529 ;	tasks.c:4895: break;
      003366 D0 04            [24]10530 	pop	ar4
      003368 02r34r00         [24]10531 	ljmp	00112$
                           00336B 10532 	C$tasks.c$4897$3_0$394 ==.
                                  10533 ;	tasks.c:4897: case eSetValueWithOverwrite:
      00336B                      10534 00105$:
                           00336B 10535 	C$tasks.c$4898$3_0$394 ==.
                                  10536 ;	tasks.c:4898: pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
      00336B E5*00            [12]10537 	mov	a,_bp
      00336D 24 10            [12]10538 	add	a,#0x10
      00336F F8               [12]10539 	mov	r0,a
      003370 74 2E            [12]10540 	mov	a,#0x2e
      003372 26               [12]10541 	add	a,@r0
      003373 FD               [12]10542 	mov	r5,a
      003374 74 00            [12]10543 	mov	a,#0x00
      003376 08               [12]10544 	inc	r0
      003377 36               [12]10545 	addc	a,@r0
      003378 FE               [12]10546 	mov	r6,a
      003379 08               [12]10547 	inc	r0
      00337A 86 07            [24]10548 	mov	ar7,@r0
      00337C EA               [12]10549 	mov	a,r2
      00337D 25 E0            [12]10550 	add	a,acc
      00337F FB               [12]10551 	mov	r3,a
      003380 EB               [12]10552 	mov	a,r3
      003381 25 E0            [12]10553 	add	a,acc
      003383 FB               [12]10554 	mov	r3,a
      003384 EB               [12]10555 	mov	a,r3
      003385 2D               [12]10556 	add	a,r5
      003386 FD               [12]10557 	mov	r5,a
      003387 74 00            [12]10558 	mov	a,#0x00
      003389 3E               [12]10559 	addc	a,r6
      00338A FE               [12]10560 	mov	r6,a
      00338B 8D 82            [24]10561 	mov	dpl,r5
      00338D 8E 83            [24]10562 	mov	dph,r6
      00338F 8F F0            [24]10563 	mov	b,r7
      003391 E5*00            [12]10564 	mov	a,_bp
      003393 24 F9            [12]10565 	add	a,#0xf9
      003395 F8               [12]10566 	mov	r0,a
      003396 E6               [12]10567 	mov	a,@r0
      003397 12r00r00         [24]10568 	lcall	__gptrput
      00339A A3               [24]10569 	inc	dptr
      00339B 08               [12]10570 	inc	r0
      00339C E6               [12]10571 	mov	a,@r0
      00339D 12r00r00         [24]10572 	lcall	__gptrput
      0033A0 A3               [24]10573 	inc	dptr
      0033A1 08               [12]10574 	inc	r0
      0033A2 E6               [12]10575 	mov	a,@r0
      0033A3 12r00r00         [24]10576 	lcall	__gptrput
      0033A6 A3               [24]10577 	inc	dptr
      0033A7 08               [12]10578 	inc	r0
      0033A8 E6               [12]10579 	mov	a,@r0
      0033A9 12r00r00         [24]10580 	lcall	__gptrput
                           0033AC 10581 	C$tasks.c$4899$3_0$394 ==.
                                  10582 ;	tasks.c:4899: break;
      0033AC 02r34r00         [24]10583 	ljmp	00112$
                           0033AF 10584 	C$tasks.c$4901$3_0$394 ==.
                                  10585 ;	tasks.c:4901: case eSetValueWithoutOverwrite:
      0033AF                      10586 00106$:
                           0033AF 10587 	C$tasks.c$4903$3_0$394 ==.
                                  10588 ;	tasks.c:4903: if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
      0033AF BC 02 03         [24]10589 	cjne	r4,#0x02,00149$
      0033B2 02r33rF9         [24]10590 	ljmp	00108$
      0033B5                      10591 00149$:
                           0033B5 10592 	C$tasks.c$4905$4_0$395 ==.
                                  10593 ;	tasks.c:4905: pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
      0033B5 E5*00            [12]10594 	mov	a,_bp
      0033B7 24 10            [12]10595 	add	a,#0x10
      0033B9 F8               [12]10596 	mov	r0,a
      0033BA 74 2E            [12]10597 	mov	a,#0x2e
      0033BC 26               [12]10598 	add	a,@r0
      0033BD FD               [12]10599 	mov	r5,a
      0033BE 74 00            [12]10600 	mov	a,#0x00
      0033C0 08               [12]10601 	inc	r0
      0033C1 36               [12]10602 	addc	a,@r0
      0033C2 FE               [12]10603 	mov	r6,a
      0033C3 08               [12]10604 	inc	r0
      0033C4 86 07            [24]10605 	mov	ar7,@r0
      0033C6 EA               [12]10606 	mov	a,r2
      0033C7 25 E0            [12]10607 	add	a,acc
      0033C9 FB               [12]10608 	mov	r3,a
      0033CA EB               [12]10609 	mov	a,r3
      0033CB 25 E0            [12]10610 	add	a,acc
      0033CD FB               [12]10611 	mov	r3,a
      0033CE EB               [12]10612 	mov	a,r3
      0033CF 2D               [12]10613 	add	a,r5
      0033D0 FD               [12]10614 	mov	r5,a
      0033D1 74 00            [12]10615 	mov	a,#0x00
      0033D3 3E               [12]10616 	addc	a,r6
      0033D4 FE               [12]10617 	mov	r6,a
      0033D5 8D 82            [24]10618 	mov	dpl,r5
      0033D7 8E 83            [24]10619 	mov	dph,r6
      0033D9 8F F0            [24]10620 	mov	b,r7
      0033DB E5*00            [12]10621 	mov	a,_bp
      0033DD 24 F9            [12]10622 	add	a,#0xf9
      0033DF F8               [12]10623 	mov	r0,a
      0033E0 E6               [12]10624 	mov	a,@r0
      0033E1 12r00r00         [24]10625 	lcall	__gptrput
      0033E4 A3               [24]10626 	inc	dptr
      0033E5 08               [12]10627 	inc	r0
      0033E6 E6               [12]10628 	mov	a,@r0
      0033E7 12r00r00         [24]10629 	lcall	__gptrput
      0033EA A3               [24]10630 	inc	dptr
      0033EB 08               [12]10631 	inc	r0
      0033EC E6               [12]10632 	mov	a,@r0
      0033ED 12r00r00         [24]10633 	lcall	__gptrput
      0033F0 A3               [24]10634 	inc	dptr
      0033F1 08               [12]10635 	inc	r0
      0033F2 E6               [12]10636 	mov	a,@r0
      0033F3 12r00r00         [24]10637 	lcall	__gptrput
      0033F6 02r34r00         [24]10638 	ljmp	00112$
      0033F9                      10639 00108$:
                           0033F9 10640 	C$tasks.c$4910$4_0$396 ==.
                                  10641 ;	tasks.c:4910: xReturn = pdFAIL;
      0033F9 E5*00            [12]10642 	mov	a,_bp
      0033FB 24 13            [12]10643 	add	a,#0x13
      0033FD F8               [12]10644 	mov	r0,a
      0033FE 76 00            [12]10645 	mov	@r0,#0x00
                           003400 10646 	C$tasks.c$4929$2_0$392 ==.
                                  10647 ;	tasks.c:4929: }
      003400                      10648 00112$:
                           003400 10649 	C$tasks.c$4935$2_0$392 ==.
                                  10650 ;	tasks.c:4935: if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
      003400 BC 01 02         [24]10651 	cjne	r4,#0x01,00150$
      003403 80 03            [24]10652 	sjmp	00151$
      003405                      10653 00150$:
      003405 02r37r80         [24]10654 	ljmp	00118$
      003408                      10655 00151$:
                           003408 10656 	C$tasks.c$4937$4_0$398 ==.
                                  10657 ;	tasks.c:4937: listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
      003408 E5*00            [12]10658 	mov	a,_bp
      00340A 24 10            [12]10659 	add	a,#0x10
      00340C F8               [12]10660 	mov	r0,a
      00340D 74 03            [12]10661 	mov	a,#0x03
      00340F 26               [12]10662 	add	a,@r0
      003410 FD               [12]10663 	mov	r5,a
      003411 74 00            [12]10664 	mov	a,#0x00
      003413 08               [12]10665 	inc	r0
      003414 36               [12]10666 	addc	a,@r0
      003415 FE               [12]10667 	mov	r6,a
      003416 08               [12]10668 	inc	r0
      003417 86 07            [24]10669 	mov	ar7,@r0
      003419 E5*00            [12]10670 	mov	a,_bp
      00341B 24 07            [12]10671 	add	a,#0x07
      00341D F8               [12]10672 	mov	r0,a
      00341E 74 0B            [12]10673 	mov	a,#0x0b
      003420 2D               [12]10674 	add	a,r5
      003421 F6               [12]10675 	mov	@r0,a
      003422 74 00            [12]10676 	mov	a,#0x00
      003424 3E               [12]10677 	addc	a,r6
      003425 08               [12]10678 	inc	r0
      003426 F6               [12]10679 	mov	@r0,a
      003427 08               [12]10680 	inc	r0
      003428 A6 07            [24]10681 	mov	@r0,ar7
      00342A E5*00            [12]10682 	mov	a,_bp
      00342C 24 07            [12]10683 	add	a,#0x07
      00342E F8               [12]10684 	mov	r0,a
      00342F 86 82            [24]10685 	mov	dpl,@r0
      003431 08               [12]10686 	inc	r0
      003432 86 83            [24]10687 	mov	dph,@r0
      003434 08               [12]10688 	inc	r0
      003435 86 F0            [24]10689 	mov	b,@r0
      003437 E5*00            [12]10690 	mov	a,_bp
      003439 24 14            [12]10691 	add	a,#0x14
      00343B F9               [12]10692 	mov	r1,a
      00343C 12r00r00         [24]10693 	lcall	__gptrget
      00343F F7               [12]10694 	mov	@r1,a
      003440 A3               [24]10695 	inc	dptr
      003441 12r00r00         [24]10696 	lcall	__gptrget
      003444 09               [12]10697 	inc	r1
      003445 F7               [12]10698 	mov	@r1,a
      003446 A3               [24]10699 	inc	dptr
      003447 12r00r00         [24]10700 	lcall	__gptrget
      00344A 09               [12]10701 	inc	r1
      00344B F7               [12]10702 	mov	@r1,a
      00344C A8*00            [24]10703 	mov	r0,_bp
      00344E 08               [12]10704 	inc	r0
      00344F 74 02            [12]10705 	mov	a,#0x02
      003451 2D               [12]10706 	add	a,r5
      003452 F6               [12]10707 	mov	@r0,a
      003453 74 00            [12]10708 	mov	a,#0x00
      003455 3E               [12]10709 	addc	a,r6
      003456 08               [12]10710 	inc	r0
      003457 F6               [12]10711 	mov	@r0,a
      003458 08               [12]10712 	inc	r0
      003459 A6 07            [24]10713 	mov	@r0,ar7
      00345B A8*00            [24]10714 	mov	r0,_bp
      00345D 08               [12]10715 	inc	r0
      00345E 86 82            [24]10716 	mov	dpl,@r0
      003460 08               [12]10717 	inc	r0
      003461 86 83            [24]10718 	mov	dph,@r0
      003463 08               [12]10719 	inc	r0
      003464 86 F0            [24]10720 	mov	b,@r0
      003466 12r00r00         [24]10721 	lcall	__gptrget
      003469 FA               [12]10722 	mov	r2,a
      00346A A3               [24]10723 	inc	dptr
      00346B 12r00r00         [24]10724 	lcall	__gptrget
      00346E FB               [12]10725 	mov	r3,a
      00346F A3               [24]10726 	inc	dptr
      003470 12r00r00         [24]10727 	lcall	__gptrget
      003473 FC               [12]10728 	mov	r4,a
      003474 E5*00            [12]10729 	mov	a,_bp
      003476 24 0A            [12]10730 	add	a,#0x0a
      003478 F8               [12]10731 	mov	r0,a
      003479 74 05            [12]10732 	mov	a,#0x05
      00347B 2A               [12]10733 	add	a,r2
      00347C F6               [12]10734 	mov	@r0,a
      00347D 74 00            [12]10735 	mov	a,#0x00
      00347F 3B               [12]10736 	addc	a,r3
      003480 08               [12]10737 	inc	r0
      003481 F6               [12]10738 	mov	@r0,a
      003482 08               [12]10739 	inc	r0
      003483 A6 04            [24]10740 	mov	@r0,ar4
      003485 E5*00            [12]10741 	mov	a,_bp
      003487 24 0D            [12]10742 	add	a,#0x0d
      003489 F8               [12]10743 	mov	r0,a
      00348A 74 05            [12]10744 	mov	a,#0x05
      00348C 2D               [12]10745 	add	a,r5
      00348D F6               [12]10746 	mov	@r0,a
      00348E 74 00            [12]10747 	mov	a,#0x00
      003490 3E               [12]10748 	addc	a,r6
      003491 08               [12]10749 	inc	r0
      003492 F6               [12]10750 	mov	@r0,a
      003493 08               [12]10751 	inc	r0
      003494 A6 07            [24]10752 	mov	@r0,ar7
      003496 E5*00            [12]10753 	mov	a,_bp
      003498 24 0D            [12]10754 	add	a,#0x0d
      00349A F8               [12]10755 	mov	r0,a
      00349B 86 82            [24]10756 	mov	dpl,@r0
      00349D 08               [12]10757 	inc	r0
      00349E 86 83            [24]10758 	mov	dph,@r0
      0034A0 08               [12]10759 	inc	r0
      0034A1 86 F0            [24]10760 	mov	b,@r0
      0034A3 12r00r00         [24]10761 	lcall	__gptrget
      0034A6 FA               [12]10762 	mov	r2,a
      0034A7 A3               [24]10763 	inc	dptr
      0034A8 12r00r00         [24]10764 	lcall	__gptrget
      0034AB FB               [12]10765 	mov	r3,a
      0034AC A3               [24]10766 	inc	dptr
      0034AD 12r00r00         [24]10767 	lcall	__gptrget
      0034B0 FC               [12]10768 	mov	r4,a
      0034B1 E5*00            [12]10769 	mov	a,_bp
      0034B3 24 0A            [12]10770 	add	a,#0x0a
      0034B5 F8               [12]10771 	mov	r0,a
      0034B6 86 82            [24]10772 	mov	dpl,@r0
      0034B8 08               [12]10773 	inc	r0
      0034B9 86 83            [24]10774 	mov	dph,@r0
      0034BB 08               [12]10775 	inc	r0
      0034BC 86 F0            [24]10776 	mov	b,@r0
      0034BE EA               [12]10777 	mov	a,r2
      0034BF 12r00r00         [24]10778 	lcall	__gptrput
      0034C2 A3               [24]10779 	inc	dptr
      0034C3 EB               [12]10780 	mov	a,r3
      0034C4 12r00r00         [24]10781 	lcall	__gptrput
      0034C7 A3               [24]10782 	inc	dptr
      0034C8 EC               [12]10783 	mov	a,r4
      0034C9 12r00r00         [24]10784 	lcall	__gptrput
      0034CC E5*00            [12]10785 	mov	a,_bp
      0034CE 24 0D            [12]10786 	add	a,#0x0d
      0034D0 F8               [12]10787 	mov	r0,a
      0034D1 86 82            [24]10788 	mov	dpl,@r0
      0034D3 08               [12]10789 	inc	r0
      0034D4 86 83            [24]10790 	mov	dph,@r0
      0034D6 08               [12]10791 	inc	r0
      0034D7 86 F0            [24]10792 	mov	b,@r0
      0034D9 12r00r00         [24]10793 	lcall	__gptrget
      0034DC FA               [12]10794 	mov	r2,a
      0034DD A3               [24]10795 	inc	dptr
      0034DE 12r00r00         [24]10796 	lcall	__gptrget
      0034E1 FB               [12]10797 	mov	r3,a
      0034E2 A3               [24]10798 	inc	dptr
      0034E3 12r00r00         [24]10799 	lcall	__gptrget
      0034E6 FC               [12]10800 	mov	r4,a
      0034E7 E5*00            [12]10801 	mov	a,_bp
      0034E9 24 0A            [12]10802 	add	a,#0x0a
      0034EB F8               [12]10803 	mov	r0,a
      0034EC 74 02            [12]10804 	mov	a,#0x02
      0034EE 2A               [12]10805 	add	a,r2
      0034EF F6               [12]10806 	mov	@r0,a
      0034F0 74 00            [12]10807 	mov	a,#0x00
      0034F2 3B               [12]10808 	addc	a,r3
      0034F3 08               [12]10809 	inc	r0
      0034F4 F6               [12]10810 	mov	@r0,a
      0034F5 08               [12]10811 	inc	r0
      0034F6 A6 04            [24]10812 	mov	@r0,ar4
      0034F8 A8*00            [24]10813 	mov	r0,_bp
      0034FA 08               [12]10814 	inc	r0
      0034FB 86 82            [24]10815 	mov	dpl,@r0
      0034FD 08               [12]10816 	inc	r0
      0034FE 86 83            [24]10817 	mov	dph,@r0
      003500 08               [12]10818 	inc	r0
      003501 86 F0            [24]10819 	mov	b,@r0
      003503 12r00r00         [24]10820 	lcall	__gptrget
      003506 FA               [12]10821 	mov	r2,a
      003507 A3               [24]10822 	inc	dptr
      003508 12r00r00         [24]10823 	lcall	__gptrget
      00350B FB               [12]10824 	mov	r3,a
      00350C A3               [24]10825 	inc	dptr
      00350D 12r00r00         [24]10826 	lcall	__gptrget
      003510 FC               [12]10827 	mov	r4,a
      003511 E5*00            [12]10828 	mov	a,_bp
      003513 24 0A            [12]10829 	add	a,#0x0a
      003515 F8               [12]10830 	mov	r0,a
      003516 86 82            [24]10831 	mov	dpl,@r0
      003518 08               [12]10832 	inc	r0
      003519 86 83            [24]10833 	mov	dph,@r0
      00351B 08               [12]10834 	inc	r0
      00351C 86 F0            [24]10835 	mov	b,@r0
      00351E EA               [12]10836 	mov	a,r2
      00351F 12r00r00         [24]10837 	lcall	__gptrput
      003522 A3               [24]10838 	inc	dptr
      003523 EB               [12]10839 	mov	a,r3
      003524 12r00r00         [24]10840 	lcall	__gptrput
      003527 A3               [24]10841 	inc	dptr
      003528 EC               [12]10842 	mov	a,r4
      003529 12r00r00         [24]10843 	lcall	__gptrput
      00352C E5*00            [12]10844 	mov	a,_bp
      00352E 24 14            [12]10845 	add	a,#0x14
      003530 F8               [12]10846 	mov	r0,a
      003531 E5*00            [12]10847 	mov	a,_bp
      003533 24 0A            [12]10848 	add	a,#0x0a
      003535 F9               [12]10849 	mov	r1,a
      003536 74 01            [12]10850 	mov	a,#0x01
      003538 26               [12]10851 	add	a,@r0
      003539 F7               [12]10852 	mov	@r1,a
      00353A 74 00            [12]10853 	mov	a,#0x00
      00353C 08               [12]10854 	inc	r0
      00353D 36               [12]10855 	addc	a,@r0
      00353E 09               [12]10856 	inc	r1
      00353F F7               [12]10857 	mov	@r1,a
      003540 08               [12]10858 	inc	r0
      003541 E6               [12]10859 	mov	a,@r0
      003542 09               [12]10860 	inc	r1
      003543 F7               [12]10861 	mov	@r1,a
      003544 E5*00            [12]10862 	mov	a,_bp
      003546 24 0A            [12]10863 	add	a,#0x0a
      003548 F8               [12]10864 	mov	r0,a
      003549 86 82            [24]10865 	mov	dpl,@r0
      00354B 08               [12]10866 	inc	r0
      00354C 86 83            [24]10867 	mov	dph,@r0
      00354E 08               [12]10868 	inc	r0
      00354F 86 F0            [24]10869 	mov	b,@r0
      003551 12r00r00         [24]10870 	lcall	__gptrget
      003554 FA               [12]10871 	mov	r2,a
      003555 A3               [24]10872 	inc	dptr
      003556 12r00r00         [24]10873 	lcall	__gptrget
      003559 FB               [12]10874 	mov	r3,a
      00355A A3               [24]10875 	inc	dptr
      00355B 12r00r00         [24]10876 	lcall	__gptrget
      00355E FC               [12]10877 	mov	r4,a
      00355F C0 05            [24]10878 	push	ar5
      003561 C0 06            [24]10879 	push	ar6
      003563 C0 07            [24]10880 	push	ar7
      003565 8A 82            [24]10881 	mov	dpl,r2
      003567 8B 83            [24]10882 	mov	dph,r3
      003569 8C F0            [24]10883 	mov	b,r4
      00356B 12r00r00         [24]10884 	lcall	___gptr_cmp
      00356E 15 81            [12]10885 	dec	sp
      003570 15 81            [12]10886 	dec	sp
      003572 15 81            [12]10887 	dec	sp
      003574 70 02            [24]10888 	jnz	00152$
      003576 80 03            [24]10889 	sjmp	00153$
      003578                      10890 00152$:
      003578 02r35rB1         [24]10891 	ljmp	00114$
      00357B                      10892 00153$:
      00357B E5*00            [12]10893 	mov	a,_bp
      00357D 24 0D            [12]10894 	add	a,#0x0d
      00357F F8               [12]10895 	mov	r0,a
      003580 86 82            [24]10896 	mov	dpl,@r0
      003582 08               [12]10897 	inc	r0
      003583 86 83            [24]10898 	mov	dph,@r0
      003585 08               [12]10899 	inc	r0
      003586 86 F0            [24]10900 	mov	b,@r0
      003588 12r00r00         [24]10901 	lcall	__gptrget
      00358B FA               [12]10902 	mov	r2,a
      00358C A3               [24]10903 	inc	dptr
      00358D 12r00r00         [24]10904 	lcall	__gptrget
      003590 FB               [12]10905 	mov	r3,a
      003591 A3               [24]10906 	inc	dptr
      003592 12r00r00         [24]10907 	lcall	__gptrget
      003595 FC               [12]10908 	mov	r4,a
      003596 E5*00            [12]10909 	mov	a,_bp
      003598 24 0A            [12]10910 	add	a,#0x0a
      00359A F8               [12]10911 	mov	r0,a
      00359B 86 82            [24]10912 	mov	dpl,@r0
      00359D 08               [12]10913 	inc	r0
      00359E 86 83            [24]10914 	mov	dph,@r0
      0035A0 08               [12]10915 	inc	r0
      0035A1 86 F0            [24]10916 	mov	b,@r0
      0035A3 EA               [12]10917 	mov	a,r2
      0035A4 12r00r00         [24]10918 	lcall	__gptrput
      0035A7 A3               [24]10919 	inc	dptr
      0035A8 EB               [12]10920 	mov	a,r3
      0035A9 12r00r00         [24]10921 	lcall	__gptrput
      0035AC A3               [24]10922 	inc	dptr
      0035AD EC               [12]10923 	mov	a,r4
      0035AE 12r00r00         [24]10924 	lcall	__gptrput
      0035B1                      10925 00114$:
      0035B1 C0 05            [24]10926 	push	ar5
      0035B3 C0 06            [24]10927 	push	ar6
      0035B5 C0 07            [24]10928 	push	ar7
      0035B7 E5*00            [12]10929 	mov	a,_bp
      0035B9 24 07            [12]10930 	add	a,#0x07
      0035BB F8               [12]10931 	mov	r0,a
      0035BC 86 82            [24]10932 	mov	dpl,@r0
      0035BE 08               [12]10933 	inc	r0
      0035BF 86 83            [24]10934 	mov	dph,@r0
      0035C1 08               [12]10935 	inc	r0
      0035C2 86 F0            [24]10936 	mov	b,@r0
      0035C4 74 00            [12]10937 	mov	a,#0x00
      0035C6 12r00r00         [24]10938 	lcall	__gptrput
      0035C9 A3               [24]10939 	inc	dptr
      0035CA 12r00r00         [24]10940 	lcall	__gptrput
      0035CD A3               [24]10941 	inc	dptr
      0035CE 12r00r00         [24]10942 	lcall	__gptrput
      0035D1 E5*00            [12]10943 	mov	a,_bp
      0035D3 24 14            [12]10944 	add	a,#0x14
      0035D5 F8               [12]10945 	mov	r0,a
      0035D6 86 82            [24]10946 	mov	dpl,@r0
      0035D8 08               [12]10947 	inc	r0
      0035D9 86 83            [24]10948 	mov	dph,@r0
      0035DB 08               [12]10949 	inc	r0
      0035DC 86 F0            [24]10950 	mov	b,@r0
      0035DE 12r00r00         [24]10951 	lcall	__gptrget
      0035E1 FC               [12]10952 	mov	r4,a
      0035E2 1C               [12]10953 	dec	r4
      0035E3 E5*00            [12]10954 	mov	a,_bp
      0035E5 24 14            [12]10955 	add	a,#0x14
      0035E7 F8               [12]10956 	mov	r0,a
      0035E8 86 82            [24]10957 	mov	dpl,@r0
      0035EA 08               [12]10958 	inc	r0
      0035EB 86 83            [24]10959 	mov	dph,@r0
      0035ED 08               [12]10960 	inc	r0
      0035EE 86 F0            [24]10961 	mov	b,@r0
      0035F0 EC               [12]10962 	mov	a,r4
      0035F1 12r00r00         [24]10963 	lcall	__gptrput
                           0035F4 10964 	C$tasks.c$4938$4_0$400 ==.
                                  10965 ;	tasks.c:4938: prvAddTaskToReadyList( pxTCB );
      0035F4 E5*00            [12]10966 	mov	a,_bp
      0035F6 24 10            [12]10967 	add	a,#0x10
      0035F8 F8               [12]10968 	mov	r0,a
      0035F9 E5*00            [12]10969 	mov	a,_bp
      0035FB 24 04            [12]10970 	add	a,#0x04
      0035FD F9               [12]10971 	mov	r1,a
      0035FE 74 1F            [12]10972 	mov	a,#0x1f
      003600 26               [12]10973 	add	a,@r0
      003601 F7               [12]10974 	mov	@r1,a
      003602 74 00            [12]10975 	mov	a,#0x00
      003604 08               [12]10976 	inc	r0
      003605 36               [12]10977 	addc	a,@r0
      003606 09               [12]10978 	inc	r1
      003607 F7               [12]10979 	mov	@r1,a
      003608 08               [12]10980 	inc	r0
      003609 E6               [12]10981 	mov	a,@r0
      00360A 09               [12]10982 	inc	r1
      00360B F7               [12]10983 	mov	@r1,a
      00360C E5*00            [12]10984 	mov	a,_bp
      00360E 24 04            [12]10985 	add	a,#0x04
      003610 F8               [12]10986 	mov	r0,a
      003611 86 82            [24]10987 	mov	dpl,@r0
      003613 08               [12]10988 	inc	r0
      003614 86 83            [24]10989 	mov	dph,@r0
      003616 08               [12]10990 	inc	r0
      003617 86 F0            [24]10991 	mov	b,@r0
      003619 12r00r00         [24]10992 	lcall	__gptrget
      00361C FC               [12]10993 	mov	r4,a
      00361D 90r00r07         [24]10994 	mov	dptr,#_uxTopReadyPriority
      003620 E0               [24]10995 	movx	a,@dptr
      003621 FF               [12]10996 	mov	r7,a
      003622 C3               [12]10997 	clr	c
      003623 EF               [12]10998 	mov	a,r7
      003624 9C               [12]10999 	subb	a,r4
      003625 D0 07            [24]11000 	pop	ar7
      003627 D0 06            [24]11001 	pop	ar6
      003629 D0 05            [24]11002 	pop	ar5
      00362B 40 03            [24]11003 	jc	00154$
      00362D 02r36r35         [24]11004 	ljmp	00116$
      003630                      11005 00154$:
      003630 90r00r07         [24]11006 	mov	dptr,#_uxTopReadyPriority
      003633 EC               [12]11007 	mov	a,r4
      003634 F0               [24]11008 	movx	@dptr,a
      003635                      11009 00116$:
      003635 E5*00            [12]11010 	mov	a,_bp
      003637 24 04            [12]11011 	add	a,#0x04
      003639 F8               [12]11012 	mov	r0,a
      00363A 86 82            [24]11013 	mov	dpl,@r0
      00363C 08               [12]11014 	inc	r0
      00363D 86 83            [24]11015 	mov	dph,@r0
      00363F 08               [12]11016 	inc	r0
      003640 86 F0            [24]11017 	mov	b,@r0
      003642 12r00r00         [24]11018 	lcall	__gptrget
      003645 FC               [12]11019 	mov	r4,a
      003646 EC               [12]11020 	mov	a,r4
      003647 75 F0 0C         [24]11021 	mov	b,#0x0c
      00364A A4               [48]11022 	mul	ab
      00364B 24r00            [12]11023 	add	a,#_pxReadyTasksLists
      00364D FB               [12]11024 	mov	r3,a
      00364E 74s00            [12]11025 	mov	a,#(_pxReadyTasksLists >> 8)
      003650 35 F0            [12]11026 	addc	a,b
      003652 FC               [12]11027 	mov	r4,a
      003653 8B 82            [24]11028 	mov	dpl,r3
      003655 8C 83            [24]11029 	mov	dph,r4
      003657 A3               [24]11030 	inc	dptr
      003658 E0               [24]11031 	movx	a,@dptr
      003659 FA               [12]11032 	mov	r2,a
      00365A A3               [24]11033 	inc	dptr
      00365B E0               [24]11034 	movx	a,@dptr
      00365C FB               [12]11035 	mov	r3,a
      00365D A3               [24]11036 	inc	dptr
      00365E E0               [24]11037 	movx	a,@dptr
      00365F FC               [12]11038 	mov	r4,a
      003660 A8*00            [24]11039 	mov	r0,_bp
      003662 08               [12]11040 	inc	r0
      003663 86 82            [24]11041 	mov	dpl,@r0
      003665 08               [12]11042 	inc	r0
      003666 86 83            [24]11043 	mov	dph,@r0
      003668 08               [12]11044 	inc	r0
      003669 86 F0            [24]11045 	mov	b,@r0
      00366B EA               [12]11046 	mov	a,r2
      00366C 12r00r00         [24]11047 	lcall	__gptrput
      00366F A3               [24]11048 	inc	dptr
      003670 EB               [12]11049 	mov	a,r3
      003671 12r00r00         [24]11050 	lcall	__gptrput
      003674 A3               [24]11051 	inc	dptr
      003675 EC               [12]11052 	mov	a,r4
      003676 12r00r00         [24]11053 	lcall	__gptrput
      003679 E5*00            [12]11054 	mov	a,_bp
      00367B 24 0A            [12]11055 	add	a,#0x0a
      00367D F8               [12]11056 	mov	r0,a
      00367E 74 05            [12]11057 	mov	a,#0x05
      003680 2A               [12]11058 	add	a,r2
      003681 F6               [12]11059 	mov	@r0,a
      003682 74 00            [12]11060 	mov	a,#0x00
      003684 3B               [12]11061 	addc	a,r3
      003685 08               [12]11062 	inc	r0
      003686 F6               [12]11063 	mov	@r0,a
      003687 08               [12]11064 	inc	r0
      003688 A6 04            [24]11065 	mov	@r0,ar4
      00368A E5*00            [12]11066 	mov	a,_bp
      00368C 24 0A            [12]11067 	add	a,#0x0a
      00368E F8               [12]11068 	mov	r0,a
      00368F 86 82            [24]11069 	mov	dpl,@r0
      003691 08               [12]11070 	inc	r0
      003692 86 83            [24]11071 	mov	dph,@r0
      003694 08               [12]11072 	inc	r0
      003695 86 F0            [24]11073 	mov	b,@r0
      003697 12r00r00         [24]11074 	lcall	__gptrget
      00369A FA               [12]11075 	mov	r2,a
      00369B A3               [24]11076 	inc	dptr
      00369C 12r00r00         [24]11077 	lcall	__gptrget
      00369F FB               [12]11078 	mov	r3,a
      0036A0 A3               [24]11079 	inc	dptr
      0036A1 12r00r00         [24]11080 	lcall	__gptrget
      0036A4 FC               [12]11081 	mov	r4,a
      0036A5 E5*00            [12]11082 	mov	a,_bp
      0036A7 24 0D            [12]11083 	add	a,#0x0d
      0036A9 F8               [12]11084 	mov	r0,a
      0036AA 86 82            [24]11085 	mov	dpl,@r0
      0036AC 08               [12]11086 	inc	r0
      0036AD 86 83            [24]11087 	mov	dph,@r0
      0036AF 08               [12]11088 	inc	r0
      0036B0 86 F0            [24]11089 	mov	b,@r0
      0036B2 EA               [12]11090 	mov	a,r2
      0036B3 12r00r00         [24]11091 	lcall	__gptrput
      0036B6 A3               [24]11092 	inc	dptr
      0036B7 EB               [12]11093 	mov	a,r3
      0036B8 12r00r00         [24]11094 	lcall	__gptrput
      0036BB A3               [24]11095 	inc	dptr
      0036BC EC               [12]11096 	mov	a,r4
      0036BD 12r00r00         [24]11097 	lcall	__gptrput
      0036C0 E5*00            [12]11098 	mov	a,_bp
      0036C2 24 0A            [12]11099 	add	a,#0x0a
      0036C4 F8               [12]11100 	mov	r0,a
      0036C5 86 82            [24]11101 	mov	dpl,@r0
      0036C7 08               [12]11102 	inc	r0
      0036C8 86 83            [24]11103 	mov	dph,@r0
      0036CA 08               [12]11104 	inc	r0
      0036CB 86 F0            [24]11105 	mov	b,@r0
      0036CD 12r00r00         [24]11106 	lcall	__gptrget
      0036D0 FA               [12]11107 	mov	r2,a
      0036D1 A3               [24]11108 	inc	dptr
      0036D2 12r00r00         [24]11109 	lcall	__gptrget
      0036D5 FB               [12]11110 	mov	r3,a
      0036D6 A3               [24]11111 	inc	dptr
      0036D7 12r00r00         [24]11112 	lcall	__gptrget
      0036DA FC               [12]11113 	mov	r4,a
      0036DB 74 02            [12]11114 	mov	a,#0x02
      0036DD 2A               [12]11115 	add	a,r2
      0036DE FA               [12]11116 	mov	r2,a
      0036DF 74 00            [12]11117 	mov	a,#0x00
      0036E1 3B               [12]11118 	addc	a,r3
      0036E2 FB               [12]11119 	mov	r3,a
      0036E3 8A 82            [24]11120 	mov	dpl,r2
      0036E5 8B 83            [24]11121 	mov	dph,r3
      0036E7 8C F0            [24]11122 	mov	b,r4
      0036E9 ED               [12]11123 	mov	a,r5
      0036EA 12r00r00         [24]11124 	lcall	__gptrput
      0036ED A3               [24]11125 	inc	dptr
      0036EE EE               [12]11126 	mov	a,r6
      0036EF 12r00r00         [24]11127 	lcall	__gptrput
      0036F2 A3               [24]11128 	inc	dptr
      0036F3 EF               [12]11129 	mov	a,r7
      0036F4 12r00r00         [24]11130 	lcall	__gptrput
      0036F7 E5*00            [12]11131 	mov	a,_bp
      0036F9 24 0A            [12]11132 	add	a,#0x0a
      0036FB F8               [12]11133 	mov	r0,a
      0036FC 86 82            [24]11134 	mov	dpl,@r0
      0036FE 08               [12]11135 	inc	r0
      0036FF 86 83            [24]11136 	mov	dph,@r0
      003701 08               [12]11137 	inc	r0
      003702 86 F0            [24]11138 	mov	b,@r0
      003704 ED               [12]11139 	mov	a,r5
      003705 12r00r00         [24]11140 	lcall	__gptrput
      003708 A3               [24]11141 	inc	dptr
      003709 EE               [12]11142 	mov	a,r6
      00370A 12r00r00         [24]11143 	lcall	__gptrput
      00370D A3               [24]11144 	inc	dptr
      00370E EF               [12]11145 	mov	a,r7
      00370F 12r00r00         [24]11146 	lcall	__gptrput
      003712 E5*00            [12]11147 	mov	a,_bp
      003714 24 04            [12]11148 	add	a,#0x04
      003716 F8               [12]11149 	mov	r0,a
      003717 86 82            [24]11150 	mov	dpl,@r0
      003719 08               [12]11151 	inc	r0
      00371A 86 83            [24]11152 	mov	dph,@r0
      00371C 08               [12]11153 	inc	r0
      00371D 86 F0            [24]11154 	mov	b,@r0
      00371F 12r00r00         [24]11155 	lcall	__gptrget
      003722 FF               [12]11156 	mov	r7,a
      003723 EF               [12]11157 	mov	a,r7
      003724 75 F0 0C         [24]11158 	mov	b,#0x0c
      003727 A4               [48]11159 	mul	ab
      003728 24r00            [12]11160 	add	a,#_pxReadyTasksLists
      00372A FE               [12]11161 	mov	r6,a
      00372B 74s00            [12]11162 	mov	a,#(_pxReadyTasksLists >> 8)
      00372D 35 F0            [12]11163 	addc	a,b
      00372F FF               [12]11164 	mov	r7,a
      003730 7D 00            [12]11165 	mov	r5,#0x00
      003732 E5*00            [12]11166 	mov	a,_bp
      003734 24 07            [12]11167 	add	a,#0x07
      003736 F8               [12]11168 	mov	r0,a
      003737 86 82            [24]11169 	mov	dpl,@r0
      003739 08               [12]11170 	inc	r0
      00373A 86 83            [24]11171 	mov	dph,@r0
      00373C 08               [12]11172 	inc	r0
      00373D 86 F0            [24]11173 	mov	b,@r0
      00373F EE               [12]11174 	mov	a,r6
      003740 12r00r00         [24]11175 	lcall	__gptrput
      003743 A3               [24]11176 	inc	dptr
      003744 EF               [12]11177 	mov	a,r7
      003745 12r00r00         [24]11178 	lcall	__gptrput
      003748 A3               [24]11179 	inc	dptr
      003749 ED               [12]11180 	mov	a,r5
      00374A 12r00r00         [24]11181 	lcall	__gptrput
      00374D E5*00            [12]11182 	mov	a,_bp
      00374F 24 04            [12]11183 	add	a,#0x04
      003751 F8               [12]11184 	mov	r0,a
      003752 86 82            [24]11185 	mov	dpl,@r0
      003754 08               [12]11186 	inc	r0
      003755 86 83            [24]11187 	mov	dph,@r0
      003757 08               [12]11188 	inc	r0
      003758 86 F0            [24]11189 	mov	b,@r0
      00375A 12r00r00         [24]11190 	lcall	__gptrget
      00375D FF               [12]11191 	mov	r7,a
      00375E EF               [12]11192 	mov	a,r7
      00375F 75 F0 0C         [24]11193 	mov	b,#0x0c
      003762 A4               [48]11194 	mul	ab
      003763 24r00            [12]11195 	add	a,#_pxReadyTasksLists
      003765 FE               [12]11196 	mov	r6,a
      003766 74s00            [12]11197 	mov	a,#(_pxReadyTasksLists >> 8)
      003768 35 F0            [12]11198 	addc	a,b
      00376A FF               [12]11199 	mov	r7,a
      00376B 8E 82            [24]11200 	mov	dpl,r6
      00376D 8F 83            [24]11201 	mov	dph,r7
      00376F E0               [24]11202 	movx	a,@dptr
      003770 FD               [12]11203 	mov	r5,a
      003771 0D               [12]11204 	inc	r5
      003772 8E 82            [24]11205 	mov	dpl,r6
      003774 8F 83            [24]11206 	mov	dph,r7
      003776 ED               [12]11207 	mov	a,r5
      003777 F0               [24]11208 	movx	@dptr,a
                           003778 11209 	C$tasks.c$4959$3_0$397 ==.
                                  11210 ;	tasks.c:4959: if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
      003778 90r00r00         [24]11211 	mov	dptr,#_pxCurrentTCB
      00377B E0               [24]11212 	movx	a,@dptr
      00377C A3               [24]11213 	inc	dptr
      00377D E0               [24]11214 	movx	a,@dptr
      00377E A3               [24]11215 	inc	dptr
      00377F E0               [24]11216 	movx	a,@dptr
      003780                      11217 00118$:
                           003780 11218 	C$tasks.c$4975$1_0$391 ==.
                                  11219 ;	tasks.c:4975: taskEXIT_CRITICAL();
      003780 D0 E0            [24]11220 	pop ACC 
      003782 53 E0 80         [24]11221 	anl	_ACC,#0x80
      003785 E5 E0            [12]11222 	mov	a,_ACC
      003787 42 A8            [12]11223 	orl	_IE,a
      003789 D0 E0            [24]11224 	pop ACC 
                           00378B 11225 	C$tasks.c$4977$1_0$391 ==.
                                  11226 ;	tasks.c:4977: return xReturn;
      00378B E5*00            [12]11227 	mov	a,_bp
      00378D 24 13            [12]11228 	add	a,#0x13
      00378F F8               [12]11229 	mov	r0,a
      003790 86 82            [24]11230 	mov	dpl,@r0
      003792                      11231 00119$:
                           003792 11232 	C$tasks.c$4978$1_0$391 ==.
                                  11233 ;	tasks.c:4978: }
      003792 85*00 81         [24]11234 	mov	sp,_bp
      003795 D0*00            [24]11235 	pop	_bp
                           003797 11236 	C$tasks.c$4978$1_0$391 ==.
                           003797 11237 	XG$xTaskGenericNotify$0$0 ==.
      003797 22               [24]11238 	ret
                                  11239 ;------------------------------------------------------------
                                  11240 ;Allocation info for local variables in function 'xTaskGenericNotifyFromISR'
                                  11241 ;------------------------------------------------------------
                                  11242 ;uxIndexToNotify           Allocated to stack - _bp -3
                                  11243 ;ulValue                   Allocated to stack - _bp -7
                                  11244 ;eAction                   Allocated to stack - _bp -8
                                  11245 ;pulPreviousNotificationValue Allocated to stack - _bp -11
                                  11246 ;pxHigherPriorityTaskWoken Allocated to stack - _bp -14
                                  11247 ;xTaskToNotify             Allocated to registers r7 r6 r5 
                                  11248 ;pxTCB                     Allocated to stack - _bp +17
                                  11249 ;ucOriginalNotifyState     Allocated to registers r4 
                                  11250 ;xReturn                   Allocated to stack - _bp +16
                                  11251 ;uxSavedInterruptStatus    Allocated to registers 
                                  11252 ;pxList                    Allocated to stack - _bp +20
                                  11253 ;pxIndex                   Allocated to registers r2 r3 r4 
                                  11254 ;pxIndex                   Allocated to stack - _bp +20
                                  11255 ;sloc0                     Allocated to stack - _bp +7
                                  11256 ;sloc1                     Allocated to stack - _bp +10
                                  11257 ;sloc2                     Allocated to stack - _bp +4
                                  11258 ;sloc3                     Allocated to stack - _bp +1
                                  11259 ;sloc4                     Allocated to stack - _bp +13
                                  11260 ;------------------------------------------------------------
                           003798 11261 	G$xTaskGenericNotifyFromISR$0$0 ==.
                           003798 11262 	C$tasks.c$4985$1_0$407 ==.
                                  11263 ;	tasks.c:4985: BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
                                  11264 ;	-----------------------------------------
                                  11265 ;	 function xTaskGenericNotifyFromISR
                                  11266 ;	-----------------------------------------
      003798                      11267 _xTaskGenericNotifyFromISR:
      003798 C0*00            [24]11268 	push	_bp
      00379A 85 81*00         [24]11269 	mov	_bp,sp
      00379D E5 81            [12]11270 	mov	a,sp
      00379F 24 16            [12]11271 	add	a,#0x16
      0037A1 F5 81            [12]11272 	mov	sp,a
      0037A3 AF 82            [24]11273 	mov	r7,dpl
      0037A5 AE 83            [24]11274 	mov	r6,dph
      0037A7 AD F0            [24]11275 	mov	r5,b
                           0037A9 11276 	C$tasks.c$4994$2_0$407 ==.
                                  11277 ;	tasks.c:4994: BaseType_t xReturn = pdPASS;
      0037A9 E5*00            [12]11278 	mov	a,_bp
      0037AB 24 10            [12]11279 	add	a,#0x10
      0037AD F8               [12]11280 	mov	r0,a
      0037AE 76 01            [12]11281 	mov	@r0,#0x01
                           0037B0 11282 	C$tasks.c$5018$1_0$407 ==.
                                  11283 ;	tasks.c:5018: pxTCB = xTaskToNotify;
      0037B0 E5*00            [12]11284 	mov	a,_bp
      0037B2 24 11            [12]11285 	add	a,#0x11
      0037B4 F8               [12]11286 	mov	r0,a
      0037B5 A6 07            [24]11287 	mov	@r0,ar7
      0037B7 08               [12]11288 	inc	r0
      0037B8 A6 06            [24]11289 	mov	@r0,ar6
      0037BA 08               [12]11290 	inc	r0
      0037BB A6 05            [24]11291 	mov	@r0,ar5
                           0037BD 11292 	C$tasks.c$5022$2_0$408 ==.
                                  11293 ;	tasks.c:5022: if( pulPreviousNotificationValue != NULL )
      0037BD E5*00            [12]11294 	mov	a,_bp
      0037BF 24 F5            [12]11295 	add	a,#0xf5
      0037C1 F8               [12]11296 	mov	r0,a
      0037C2 E6               [12]11297 	mov	a,@r0
      0037C3 08               [12]11298 	inc	r0
      0037C4 46               [12]11299 	orl	a,@r0
      0037C5 70 03            [24]11300 	jnz	00164$
      0037C7 02r38r35         [24]11301 	ljmp	00102$
      0037CA                      11302 00164$:
                           0037CA 11303 	C$tasks.c$5024$1_0$407 ==.
                                  11304 ;	tasks.c:5024: *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
      0037CA E5*00            [12]11305 	mov	a,_bp
      0037CC 24 F5            [12]11306 	add	a,#0xf5
      0037CE F8               [12]11307 	mov	r0,a
      0037CF E5*00            [12]11308 	mov	a,_bp
      0037D1 24 0A            [12]11309 	add	a,#0x0a
      0037D3 F9               [12]11310 	mov	r1,a
      0037D4 E6               [12]11311 	mov	a,@r0
      0037D5 F7               [12]11312 	mov	@r1,a
      0037D6 08               [12]11313 	inc	r0
      0037D7 E6               [12]11314 	mov	a,@r0
      0037D8 09               [12]11315 	inc	r1
      0037D9 F7               [12]11316 	mov	@r1,a
      0037DA 08               [12]11317 	inc	r0
      0037DB E6               [12]11318 	mov	a,@r0
      0037DC 09               [12]11319 	inc	r1
      0037DD F7               [12]11320 	mov	@r1,a
      0037DE 74 2E            [12]11321 	mov	a,#0x2e
      0037E0 2F               [12]11322 	add	a,r7
      0037E1 FF               [12]11323 	mov	r7,a
      0037E2 74 00            [12]11324 	mov	a,#0x00
      0037E4 3E               [12]11325 	addc	a,r6
      0037E5 FE               [12]11326 	mov	r6,a
      0037E6 E5*00            [12]11327 	mov	a,_bp
      0037E8 24 FD            [12]11328 	add	a,#0xfd
      0037EA F8               [12]11329 	mov	r0,a
      0037EB E6               [12]11330 	mov	a,@r0
      0037EC 25 E0            [12]11331 	add	a,acc
      0037EE FC               [12]11332 	mov	r4,a
      0037EF EC               [12]11333 	mov	a,r4
      0037F0 25 E0            [12]11334 	add	a,acc
      0037F2 FC               [12]11335 	mov	r4,a
      0037F3 EC               [12]11336 	mov	a,r4
      0037F4 2F               [12]11337 	add	a,r7
      0037F5 FA               [12]11338 	mov	r2,a
      0037F6 74 00            [12]11339 	mov	a,#0x00
      0037F8 3E               [12]11340 	addc	a,r6
      0037F9 FB               [12]11341 	mov	r3,a
      0037FA 8D 04            [24]11342 	mov	ar4,r5
      0037FC 8A 82            [24]11343 	mov	dpl,r2
      0037FE 8B 83            [24]11344 	mov	dph,r3
      003800 8C F0            [24]11345 	mov	b,r4
      003802 12r00r00         [24]11346 	lcall	__gptrget
      003805 FA               [12]11347 	mov	r2,a
      003806 A3               [24]11348 	inc	dptr
      003807 12r00r00         [24]11349 	lcall	__gptrget
      00380A FB               [12]11350 	mov	r3,a
      00380B A3               [24]11351 	inc	dptr
      00380C 12r00r00         [24]11352 	lcall	__gptrget
      00380F FC               [12]11353 	mov	r4,a
      003810 A3               [24]11354 	inc	dptr
      003811 12r00r00         [24]11355 	lcall	__gptrget
      003814 FF               [12]11356 	mov	r7,a
      003815 E5*00            [12]11357 	mov	a,_bp
      003817 24 0A            [12]11358 	add	a,#0x0a
      003819 F8               [12]11359 	mov	r0,a
      00381A 86 82            [24]11360 	mov	dpl,@r0
      00381C 08               [12]11361 	inc	r0
      00381D 86 83            [24]11362 	mov	dph,@r0
      00381F 08               [12]11363 	inc	r0
      003820 86 F0            [24]11364 	mov	b,@r0
      003822 EA               [12]11365 	mov	a,r2
      003823 12r00r00         [24]11366 	lcall	__gptrput
      003826 A3               [24]11367 	inc	dptr
      003827 EB               [12]11368 	mov	a,r3
      003828 12r00r00         [24]11369 	lcall	__gptrput
      00382B A3               [24]11370 	inc	dptr
      00382C EC               [12]11371 	mov	a,r4
      00382D 12r00r00         [24]11372 	lcall	__gptrput
      003830 A3               [24]11373 	inc	dptr
      003831 EF               [12]11374 	mov	a,r7
      003832 12r00r00         [24]11375 	lcall	__gptrput
                           003835 11376 	C$tasks.c$5116$1_0$407 ==.
                                  11377 ;	tasks.c:5116: return xReturn;
                           003835 11378 	C$tasks.c$5024$2_0$408 ==.
                                  11379 ;	tasks.c:5024: *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
      003835                      11380 00102$:
                           003835 11381 	C$tasks.c$5027$2_0$408 ==.
                                  11382 ;	tasks.c:5027: ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
      003835 E5*00            [12]11383 	mov	a,_bp
      003837 24 11            [12]11384 	add	a,#0x11
      003839 F8               [12]11385 	mov	r0,a
      00383A 74 32            [12]11386 	mov	a,#0x32
      00383C 26               [12]11387 	add	a,@r0
      00383D FD               [12]11388 	mov	r5,a
      00383E 74 00            [12]11389 	mov	a,#0x00
      003840 08               [12]11390 	inc	r0
      003841 36               [12]11391 	addc	a,@r0
      003842 FE               [12]11392 	mov	r6,a
      003843 08               [12]11393 	inc	r0
      003844 86 07            [24]11394 	mov	ar7,@r0
      003846 E5*00            [12]11395 	mov	a,_bp
      003848 24 FD            [12]11396 	add	a,#0xfd
      00384A F8               [12]11397 	mov	r0,a
      00384B 86 02            [24]11398 	mov	ar2,@r0
      00384D EA               [12]11399 	mov	a,r2
      00384E 2D               [12]11400 	add	a,r5
      00384F FD               [12]11401 	mov	r5,a
      003850 74 00            [12]11402 	mov	a,#0x00
      003852 3E               [12]11403 	addc	a,r6
      003853 FE               [12]11404 	mov	r6,a
      003854 8D 82            [24]11405 	mov	dpl,r5
      003856 8E 83            [24]11406 	mov	dph,r6
      003858 8F F0            [24]11407 	mov	b,r7
      00385A 12r00r00         [24]11408 	lcall	__gptrget
      00385D FC               [12]11409 	mov	r4,a
                           00385E 11410 	C$tasks.c$5028$2_0$408 ==.
                                  11411 ;	tasks.c:5028: pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
      00385E 8D 82            [24]11412 	mov	dpl,r5
      003860 8E 83            [24]11413 	mov	dph,r6
      003862 8F F0            [24]11414 	mov	b,r7
      003864 74 02            [12]11415 	mov	a,#0x02
      003866 12r00r00         [24]11416 	lcall	__gptrput
                           003869 11417 	C$tasks.c$5030$2_0$408 ==.
                                  11418 ;	tasks.c:5030: switch( eAction )
      003869 E5*00            [12]11419 	mov	a,_bp
      00386B 24 F8            [12]11420 	add	a,#0xf8
      00386D F8               [12]11421 	mov	r0,a
      00386E C3               [12]11422 	clr	c
      00386F 74 04            [12]11423 	mov	a,#0x04
      003871 96               [12]11424 	subb	a,@r0
      003872 50 03            [24]11425 	jnc	00165$
      003874 02r3Ar28         [24]11426 	ljmp	00112$
      003877                      11427 00165$:
      003877 E5*00            [12]11428 	mov	a,_bp
      003879 24 F8            [12]11429 	add	a,#0xf8
      00387B F8               [12]11430 	mov	r0,a
      00387C E6               [12]11431 	mov	a,@r0
      00387D 26               [12]11432 	add	a,@r0
      00387E 26               [12]11433 	add	a,@r0
      00387F 90r38r83         [24]11434 	mov	dptr,#00166$
      003882 73               [24]11435 	jmp	@a+dptr
      003883                      11436 00166$:
      003883 02r3Ar28         [24]11437 	ljmp	00112$
      003886 02r38r92         [24]11438 	ljmp	00103$
      003889 02r39r16         [24]11439 	ljmp	00104$
      00388C 02r39r93         [24]11440 	ljmp	00105$
      00388F 02r39rD7         [24]11441 	ljmp	00106$
                           003892 11442 	C$tasks.c$5032$3_0$410 ==.
                                  11443 ;	tasks.c:5032: case eSetBits:
      003892                      11444 00103$:
                           003892 11445 	C$tasks.c$5033$1_0$407 ==.
                                  11446 ;	tasks.c:5033: pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
      003892 C0 04            [24]11447 	push	ar4
      003894 E5*00            [12]11448 	mov	a,_bp
      003896 24 11            [12]11449 	add	a,#0x11
      003898 F8               [12]11450 	mov	r0,a
      003899 74 2E            [12]11451 	mov	a,#0x2e
      00389B 26               [12]11452 	add	a,@r0
      00389C FD               [12]11453 	mov	r5,a
      00389D 74 00            [12]11454 	mov	a,#0x00
      00389F 08               [12]11455 	inc	r0
      0038A0 36               [12]11456 	addc	a,@r0
      0038A1 FE               [12]11457 	mov	r6,a
      0038A2 08               [12]11458 	inc	r0
      0038A3 86 07            [24]11459 	mov	ar7,@r0
      0038A5 EA               [12]11460 	mov	a,r2
      0038A6 25 E0            [12]11461 	add	a,acc
      0038A8 FB               [12]11462 	mov	r3,a
      0038A9 EB               [12]11463 	mov	a,r3
      0038AA 25 E0            [12]11464 	add	a,acc
      0038AC FB               [12]11465 	mov	r3,a
      0038AD E5*00            [12]11466 	mov	a,_bp
      0038AF 24 07            [12]11467 	add	a,#0x07
      0038B1 F8               [12]11468 	mov	r0,a
      0038B2 EB               [12]11469 	mov	a,r3
      0038B3 2D               [12]11470 	add	a,r5
      0038B4 F6               [12]11471 	mov	@r0,a
      0038B5 74 00            [12]11472 	mov	a,#0x00
      0038B7 3E               [12]11473 	addc	a,r6
      0038B8 08               [12]11474 	inc	r0
      0038B9 F6               [12]11475 	mov	@r0,a
      0038BA 08               [12]11476 	inc	r0
      0038BB A6 07            [24]11477 	mov	@r0,ar7
      0038BD E5*00            [12]11478 	mov	a,_bp
      0038BF 24 07            [12]11479 	add	a,#0x07
      0038C1 F8               [12]11480 	mov	r0,a
      0038C2 86 82            [24]11481 	mov	dpl,@r0
      0038C4 08               [12]11482 	inc	r0
      0038C5 86 83            [24]11483 	mov	dph,@r0
      0038C7 08               [12]11484 	inc	r0
      0038C8 86 F0            [24]11485 	mov	b,@r0
      0038CA 12r00r00         [24]11486 	lcall	__gptrget
      0038CD FA               [12]11487 	mov	r2,a
      0038CE A3               [24]11488 	inc	dptr
      0038CF 12r00r00         [24]11489 	lcall	__gptrget
      0038D2 FB               [12]11490 	mov	r3,a
      0038D3 A3               [24]11491 	inc	dptr
      0038D4 12r00r00         [24]11492 	lcall	__gptrget
      0038D7 FC               [12]11493 	mov	r4,a
      0038D8 A3               [24]11494 	inc	dptr
      0038D9 12r00r00         [24]11495 	lcall	__gptrget
      0038DC FF               [12]11496 	mov	r7,a
      0038DD E5*00            [12]11497 	mov	a,_bp
      0038DF 24 F9            [12]11498 	add	a,#0xf9
      0038E1 F8               [12]11499 	mov	r0,a
      0038E2 E6               [12]11500 	mov	a,@r0
      0038E3 42 02            [12]11501 	orl	ar2,a
      0038E5 08               [12]11502 	inc	r0
      0038E6 E6               [12]11503 	mov	a,@r0
      0038E7 42 03            [12]11504 	orl	ar3,a
      0038E9 08               [12]11505 	inc	r0
      0038EA E6               [12]11506 	mov	a,@r0
      0038EB 42 04            [12]11507 	orl	ar4,a
      0038ED 08               [12]11508 	inc	r0
      0038EE E6               [12]11509 	mov	a,@r0
      0038EF 42 07            [12]11510 	orl	ar7,a
      0038F1 E5*00            [12]11511 	mov	a,_bp
      0038F3 24 07            [12]11512 	add	a,#0x07
      0038F5 F8               [12]11513 	mov	r0,a
      0038F6 86 82            [24]11514 	mov	dpl,@r0
      0038F8 08               [12]11515 	inc	r0
      0038F9 86 83            [24]11516 	mov	dph,@r0
      0038FB 08               [12]11517 	inc	r0
      0038FC 86 F0            [24]11518 	mov	b,@r0
      0038FE EA               [12]11519 	mov	a,r2
      0038FF 12r00r00         [24]11520 	lcall	__gptrput
      003902 A3               [24]11521 	inc	dptr
      003903 EB               [12]11522 	mov	a,r3
      003904 12r00r00         [24]11523 	lcall	__gptrput
      003907 A3               [24]11524 	inc	dptr
      003908 EC               [12]11525 	mov	a,r4
      003909 12r00r00         [24]11526 	lcall	__gptrput
      00390C A3               [24]11527 	inc	dptr
      00390D EF               [12]11528 	mov	a,r7
      00390E 12r00r00         [24]11529 	lcall	__gptrput
                           003911 11530 	C$tasks.c$5034$1_0$407 ==.
                                  11531 ;	tasks.c:5034: break;
      003911 D0 04            [24]11532 	pop	ar4
      003913 02r3Ar28         [24]11533 	ljmp	00112$
                           003916 11534 	C$tasks.c$5036$3_0$410 ==.
                                  11535 ;	tasks.c:5036: case eIncrement:
      003916                      11536 00104$:
                           003916 11537 	C$tasks.c$5037$1_0$407 ==.
                                  11538 ;	tasks.c:5037: ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
      003916 C0 04            [24]11539 	push	ar4
      003918 E5*00            [12]11540 	mov	a,_bp
      00391A 24 11            [12]11541 	add	a,#0x11
      00391C F8               [12]11542 	mov	r0,a
      00391D 74 2E            [12]11543 	mov	a,#0x2e
      00391F 26               [12]11544 	add	a,@r0
      003920 FD               [12]11545 	mov	r5,a
      003921 74 00            [12]11546 	mov	a,#0x00
      003923 08               [12]11547 	inc	r0
      003924 36               [12]11548 	addc	a,@r0
      003925 FE               [12]11549 	mov	r6,a
      003926 08               [12]11550 	inc	r0
      003927 86 07            [24]11551 	mov	ar7,@r0
      003929 EA               [12]11552 	mov	a,r2
      00392A 25 E0            [12]11553 	add	a,acc
      00392C FB               [12]11554 	mov	r3,a
      00392D EB               [12]11555 	mov	a,r3
      00392E 25 E0            [12]11556 	add	a,acc
      003930 FB               [12]11557 	mov	r3,a
      003931 E5*00            [12]11558 	mov	a,_bp
      003933 24 07            [12]11559 	add	a,#0x07
      003935 F8               [12]11560 	mov	r0,a
      003936 EB               [12]11561 	mov	a,r3
      003937 2D               [12]11562 	add	a,r5
      003938 F6               [12]11563 	mov	@r0,a
      003939 74 00            [12]11564 	mov	a,#0x00
      00393B 3E               [12]11565 	addc	a,r6
      00393C 08               [12]11566 	inc	r0
      00393D F6               [12]11567 	mov	@r0,a
      00393E 08               [12]11568 	inc	r0
      00393F A6 07            [24]11569 	mov	@r0,ar7
      003941 E5*00            [12]11570 	mov	a,_bp
      003943 24 07            [12]11571 	add	a,#0x07
      003945 F8               [12]11572 	mov	r0,a
      003946 86 82            [24]11573 	mov	dpl,@r0
      003948 08               [12]11574 	inc	r0
      003949 86 83            [24]11575 	mov	dph,@r0
      00394B 08               [12]11576 	inc	r0
      00394C 86 F0            [24]11577 	mov	b,@r0
      00394E 12r00r00         [24]11578 	lcall	__gptrget
      003951 FA               [12]11579 	mov	r2,a
      003952 A3               [24]11580 	inc	dptr
      003953 12r00r00         [24]11581 	lcall	__gptrget
      003956 FB               [12]11582 	mov	r3,a
      003957 A3               [24]11583 	inc	dptr
      003958 12r00r00         [24]11584 	lcall	__gptrget
      00395B FC               [12]11585 	mov	r4,a
      00395C A3               [24]11586 	inc	dptr
      00395D 12r00r00         [24]11587 	lcall	__gptrget
      003960 FF               [12]11588 	mov	r7,a
      003961 0A               [12]11589 	inc	r2
      003962 BA 00 09         [24]11590 	cjne	r2,#0x00,00167$
      003965 0B               [12]11591 	inc	r3
      003966 BB 00 05         [24]11592 	cjne	r3,#0x00,00167$
      003969 0C               [12]11593 	inc	r4
      00396A BC 00 01         [24]11594 	cjne	r4,#0x00,00167$
      00396D 0F               [12]11595 	inc	r7
      00396E                      11596 00167$:
      00396E E5*00            [12]11597 	mov	a,_bp
      003970 24 07            [12]11598 	add	a,#0x07
      003972 F8               [12]11599 	mov	r0,a
      003973 86 82            [24]11600 	mov	dpl,@r0
      003975 08               [12]11601 	inc	r0
      003976 86 83            [24]11602 	mov	dph,@r0
      003978 08               [12]11603 	inc	r0
      003979 86 F0            [24]11604 	mov	b,@r0
      00397B EA               [12]11605 	mov	a,r2
      00397C 12r00r00         [24]11606 	lcall	__gptrput
      00397F A3               [24]11607 	inc	dptr
      003980 EB               [12]11608 	mov	a,r3
      003981 12r00r00         [24]11609 	lcall	__gptrput
      003984 A3               [24]11610 	inc	dptr
      003985 EC               [12]11611 	mov	a,r4
      003986 12r00r00         [24]11612 	lcall	__gptrput
      003989 A3               [24]11613 	inc	dptr
      00398A EF               [12]11614 	mov	a,r7
      00398B 12r00r00         [24]11615 	lcall	__gptrput
                           00398E 11616 	C$tasks.c$5038$1_0$407 ==.
                                  11617 ;	tasks.c:5038: break;
      00398E D0 04            [24]11618 	pop	ar4
      003990 02r3Ar28         [24]11619 	ljmp	00112$
                           003993 11620 	C$tasks.c$5040$3_0$410 ==.
                                  11621 ;	tasks.c:5040: case eSetValueWithOverwrite:
      003993                      11622 00105$:
                           003993 11623 	C$tasks.c$5041$3_0$410 ==.
                                  11624 ;	tasks.c:5041: pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
      003993 E5*00            [12]11625 	mov	a,_bp
      003995 24 11            [12]11626 	add	a,#0x11
      003997 F8               [12]11627 	mov	r0,a
      003998 74 2E            [12]11628 	mov	a,#0x2e
      00399A 26               [12]11629 	add	a,@r0
      00399B FD               [12]11630 	mov	r5,a
      00399C 74 00            [12]11631 	mov	a,#0x00
      00399E 08               [12]11632 	inc	r0
      00399F 36               [12]11633 	addc	a,@r0
      0039A0 FE               [12]11634 	mov	r6,a
      0039A1 08               [12]11635 	inc	r0
      0039A2 86 07            [24]11636 	mov	ar7,@r0
      0039A4 EA               [12]11637 	mov	a,r2
      0039A5 25 E0            [12]11638 	add	a,acc
      0039A7 FB               [12]11639 	mov	r3,a
      0039A8 EB               [12]11640 	mov	a,r3
      0039A9 25 E0            [12]11641 	add	a,acc
      0039AB FB               [12]11642 	mov	r3,a
      0039AC EB               [12]11643 	mov	a,r3
      0039AD 2D               [12]11644 	add	a,r5
      0039AE FD               [12]11645 	mov	r5,a
      0039AF 74 00            [12]11646 	mov	a,#0x00
      0039B1 3E               [12]11647 	addc	a,r6
      0039B2 FE               [12]11648 	mov	r6,a
      0039B3 8D 82            [24]11649 	mov	dpl,r5
      0039B5 8E 83            [24]11650 	mov	dph,r6
      0039B7 8F F0            [24]11651 	mov	b,r7
      0039B9 E5*00            [12]11652 	mov	a,_bp
      0039BB 24 F9            [12]11653 	add	a,#0xf9
      0039BD F8               [12]11654 	mov	r0,a
      0039BE E6               [12]11655 	mov	a,@r0
      0039BF 12r00r00         [24]11656 	lcall	__gptrput
      0039C2 A3               [24]11657 	inc	dptr
      0039C3 08               [12]11658 	inc	r0
      0039C4 E6               [12]11659 	mov	a,@r0
      0039C5 12r00r00         [24]11660 	lcall	__gptrput
      0039C8 A3               [24]11661 	inc	dptr
      0039C9 08               [12]11662 	inc	r0
      0039CA E6               [12]11663 	mov	a,@r0
      0039CB 12r00r00         [24]11664 	lcall	__gptrput
      0039CE A3               [24]11665 	inc	dptr
      0039CF 08               [12]11666 	inc	r0
      0039D0 E6               [12]11667 	mov	a,@r0
      0039D1 12r00r00         [24]11668 	lcall	__gptrput
                           0039D4 11669 	C$tasks.c$5042$3_0$410 ==.
                                  11670 ;	tasks.c:5042: break;
      0039D4 02r3Ar28         [24]11671 	ljmp	00112$
                           0039D7 11672 	C$tasks.c$5044$3_0$410 ==.
                                  11673 ;	tasks.c:5044: case eSetValueWithoutOverwrite:
      0039D7                      11674 00106$:
                           0039D7 11675 	C$tasks.c$5046$3_0$410 ==.
                                  11676 ;	tasks.c:5046: if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
      0039D7 BC 02 03         [24]11677 	cjne	r4,#0x02,00168$
      0039DA 02r3Ar21         [24]11678 	ljmp	00108$
      0039DD                      11679 00168$:
                           0039DD 11680 	C$tasks.c$5048$4_0$411 ==.
                                  11681 ;	tasks.c:5048: pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
      0039DD E5*00            [12]11682 	mov	a,_bp
      0039DF 24 11            [12]11683 	add	a,#0x11
      0039E1 F8               [12]11684 	mov	r0,a
      0039E2 74 2E            [12]11685 	mov	a,#0x2e
      0039E4 26               [12]11686 	add	a,@r0
      0039E5 FD               [12]11687 	mov	r5,a
      0039E6 74 00            [12]11688 	mov	a,#0x00
      0039E8 08               [12]11689 	inc	r0
      0039E9 36               [12]11690 	addc	a,@r0
      0039EA FE               [12]11691 	mov	r6,a
      0039EB 08               [12]11692 	inc	r0
      0039EC 86 07            [24]11693 	mov	ar7,@r0
      0039EE EA               [12]11694 	mov	a,r2
      0039EF 25 E0            [12]11695 	add	a,acc
      0039F1 FB               [12]11696 	mov	r3,a
      0039F2 EB               [12]11697 	mov	a,r3
      0039F3 25 E0            [12]11698 	add	a,acc
      0039F5 FB               [12]11699 	mov	r3,a
      0039F6 EB               [12]11700 	mov	a,r3
      0039F7 2D               [12]11701 	add	a,r5
      0039F8 FD               [12]11702 	mov	r5,a
      0039F9 74 00            [12]11703 	mov	a,#0x00
      0039FB 3E               [12]11704 	addc	a,r6
      0039FC FE               [12]11705 	mov	r6,a
      0039FD 8D 82            [24]11706 	mov	dpl,r5
      0039FF 8E 83            [24]11707 	mov	dph,r6
      003A01 8F F0            [24]11708 	mov	b,r7
      003A03 E5*00            [12]11709 	mov	a,_bp
      003A05 24 F9            [12]11710 	add	a,#0xf9
      003A07 F8               [12]11711 	mov	r0,a
      003A08 E6               [12]11712 	mov	a,@r0
      003A09 12r00r00         [24]11713 	lcall	__gptrput
      003A0C A3               [24]11714 	inc	dptr
      003A0D 08               [12]11715 	inc	r0
      003A0E E6               [12]11716 	mov	a,@r0
      003A0F 12r00r00         [24]11717 	lcall	__gptrput
      003A12 A3               [24]11718 	inc	dptr
      003A13 08               [12]11719 	inc	r0
      003A14 E6               [12]11720 	mov	a,@r0
      003A15 12r00r00         [24]11721 	lcall	__gptrput
      003A18 A3               [24]11722 	inc	dptr
      003A19 08               [12]11723 	inc	r0
      003A1A E6               [12]11724 	mov	a,@r0
      003A1B 12r00r00         [24]11725 	lcall	__gptrput
      003A1E 02r3Ar28         [24]11726 	ljmp	00112$
      003A21                      11727 00108$:
                           003A21 11728 	C$tasks.c$5053$4_0$412 ==.
                                  11729 ;	tasks.c:5053: xReturn = pdFAIL;
      003A21 E5*00            [12]11730 	mov	a,_bp
      003A23 24 10            [12]11731 	add	a,#0x10
      003A25 F8               [12]11732 	mov	r0,a
      003A26 76 00            [12]11733 	mov	@r0,#0x00
                           003A28 11734 	C$tasks.c$5071$2_0$408 ==.
                                  11735 ;	tasks.c:5071: }
      003A28                      11736 00112$:
                           003A28 11737 	C$tasks.c$5077$2_0$408 ==.
                                  11738 ;	tasks.c:5077: if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
      003A28 BC 01 02         [24]11739 	cjne	r4,#0x01,00169$
      003A2B 80 03            [24]11740 	sjmp	00170$
      003A2D                      11741 00169$:
      003A2D 02r3Fr24         [24]11742 	ljmp	00125$
      003A30                      11743 00170$:
                           003A30 11744 	C$tasks.c$5082$3_0$413 ==.
                                  11745 ;	tasks.c:5082: if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
      003A30 90r00r13         [24]11746 	mov	dptr,#_uxSchedulerSuspended
      003A33 E0               [24]11747 	movx	a,@dptr
      003A34 60 03            [24]11748 	jz	00171$
      003A36 02r3Dr9E         [24]11749 	ljmp	00118$
      003A39                      11750 00171$:
                           003A39 11751 	C$tasks.c$5084$5_0$415 ==.
                                  11752 ;	tasks.c:5084: listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
      003A39 E5*00            [12]11753 	mov	a,_bp
      003A3B 24 11            [12]11754 	add	a,#0x11
      003A3D F8               [12]11755 	mov	r0,a
      003A3E 74 03            [12]11756 	mov	a,#0x03
      003A40 26               [12]11757 	add	a,@r0
      003A41 FD               [12]11758 	mov	r5,a
      003A42 74 00            [12]11759 	mov	a,#0x00
      003A44 08               [12]11760 	inc	r0
      003A45 36               [12]11761 	addc	a,@r0
      003A46 FE               [12]11762 	mov	r6,a
      003A47 08               [12]11763 	inc	r0
      003A48 86 07            [24]11764 	mov	ar7,@r0
      003A4A E5*00            [12]11765 	mov	a,_bp
      003A4C 24 0A            [12]11766 	add	a,#0x0a
      003A4E F8               [12]11767 	mov	r0,a
      003A4F 74 0B            [12]11768 	mov	a,#0x0b
      003A51 2D               [12]11769 	add	a,r5
      003A52 F6               [12]11770 	mov	@r0,a
      003A53 74 00            [12]11771 	mov	a,#0x00
      003A55 3E               [12]11772 	addc	a,r6
      003A56 08               [12]11773 	inc	r0
      003A57 F6               [12]11774 	mov	@r0,a
      003A58 08               [12]11775 	inc	r0
      003A59 A6 07            [24]11776 	mov	@r0,ar7
      003A5B E5*00            [12]11777 	mov	a,_bp
      003A5D 24 0A            [12]11778 	add	a,#0x0a
      003A5F F8               [12]11779 	mov	r0,a
      003A60 86 82            [24]11780 	mov	dpl,@r0
      003A62 08               [12]11781 	inc	r0
      003A63 86 83            [24]11782 	mov	dph,@r0
      003A65 08               [12]11783 	inc	r0
      003A66 86 F0            [24]11784 	mov	b,@r0
      003A68 E5*00            [12]11785 	mov	a,_bp
      003A6A 24 14            [12]11786 	add	a,#0x14
      003A6C F9               [12]11787 	mov	r1,a
      003A6D 12r00r00         [24]11788 	lcall	__gptrget
      003A70 F7               [12]11789 	mov	@r1,a
      003A71 A3               [24]11790 	inc	dptr
      003A72 12r00r00         [24]11791 	lcall	__gptrget
      003A75 09               [12]11792 	inc	r1
      003A76 F7               [12]11793 	mov	@r1,a
      003A77 A3               [24]11794 	inc	dptr
      003A78 12r00r00         [24]11795 	lcall	__gptrget
      003A7B 09               [12]11796 	inc	r1
      003A7C F7               [12]11797 	mov	@r1,a
      003A7D E5*00            [12]11798 	mov	a,_bp
      003A7F 24 07            [12]11799 	add	a,#0x07
      003A81 F8               [12]11800 	mov	r0,a
      003A82 74 02            [12]11801 	mov	a,#0x02
      003A84 2D               [12]11802 	add	a,r5
      003A85 F6               [12]11803 	mov	@r0,a
      003A86 74 00            [12]11804 	mov	a,#0x00
      003A88 3E               [12]11805 	addc	a,r6
      003A89 08               [12]11806 	inc	r0
      003A8A F6               [12]11807 	mov	@r0,a
      003A8B 08               [12]11808 	inc	r0
      003A8C A6 07            [24]11809 	mov	@r0,ar7
      003A8E E5*00            [12]11810 	mov	a,_bp
      003A90 24 07            [12]11811 	add	a,#0x07
      003A92 F8               [12]11812 	mov	r0,a
      003A93 86 82            [24]11813 	mov	dpl,@r0
      003A95 08               [12]11814 	inc	r0
      003A96 86 83            [24]11815 	mov	dph,@r0
      003A98 08               [12]11816 	inc	r0
      003A99 86 F0            [24]11817 	mov	b,@r0
      003A9B 12r00r00         [24]11818 	lcall	__gptrget
      003A9E FA               [12]11819 	mov	r2,a
      003A9F A3               [24]11820 	inc	dptr
      003AA0 12r00r00         [24]11821 	lcall	__gptrget
      003AA3 FB               [12]11822 	mov	r3,a
      003AA4 A3               [24]11823 	inc	dptr
      003AA5 12r00r00         [24]11824 	lcall	__gptrget
      003AA8 FC               [12]11825 	mov	r4,a
      003AA9 A8*00            [24]11826 	mov	r0,_bp
      003AAB 08               [12]11827 	inc	r0
      003AAC 74 05            [12]11828 	mov	a,#0x05
      003AAE 2A               [12]11829 	add	a,r2
      003AAF F6               [12]11830 	mov	@r0,a
      003AB0 74 00            [12]11831 	mov	a,#0x00
      003AB2 3B               [12]11832 	addc	a,r3
      003AB3 08               [12]11833 	inc	r0
      003AB4 F6               [12]11834 	mov	@r0,a
      003AB5 08               [12]11835 	inc	r0
      003AB6 A6 04            [24]11836 	mov	@r0,ar4
      003AB8 E5*00            [12]11837 	mov	a,_bp
      003ABA 24 04            [12]11838 	add	a,#0x04
      003ABC F8               [12]11839 	mov	r0,a
      003ABD 74 05            [12]11840 	mov	a,#0x05
      003ABF 2D               [12]11841 	add	a,r5
      003AC0 F6               [12]11842 	mov	@r0,a
      003AC1 74 00            [12]11843 	mov	a,#0x00
      003AC3 3E               [12]11844 	addc	a,r6
      003AC4 08               [12]11845 	inc	r0
      003AC5 F6               [12]11846 	mov	@r0,a
      003AC6 08               [12]11847 	inc	r0
      003AC7 A6 07            [24]11848 	mov	@r0,ar7
      003AC9 E5*00            [12]11849 	mov	a,_bp
      003ACB 24 04            [12]11850 	add	a,#0x04
      003ACD F8               [12]11851 	mov	r0,a
      003ACE 86 82            [24]11852 	mov	dpl,@r0
      003AD0 08               [12]11853 	inc	r0
      003AD1 86 83            [24]11854 	mov	dph,@r0
      003AD3 08               [12]11855 	inc	r0
      003AD4 86 F0            [24]11856 	mov	b,@r0
      003AD6 12r00r00         [24]11857 	lcall	__gptrget
      003AD9 FA               [12]11858 	mov	r2,a
      003ADA A3               [24]11859 	inc	dptr
      003ADB 12r00r00         [24]11860 	lcall	__gptrget
      003ADE FB               [12]11861 	mov	r3,a
      003ADF A3               [24]11862 	inc	dptr
      003AE0 12r00r00         [24]11863 	lcall	__gptrget
      003AE3 FC               [12]11864 	mov	r4,a
      003AE4 A8*00            [24]11865 	mov	r0,_bp
      003AE6 08               [12]11866 	inc	r0
      003AE7 86 82            [24]11867 	mov	dpl,@r0
      003AE9 08               [12]11868 	inc	r0
      003AEA 86 83            [24]11869 	mov	dph,@r0
      003AEC 08               [12]11870 	inc	r0
      003AED 86 F0            [24]11871 	mov	b,@r0
      003AEF EA               [12]11872 	mov	a,r2
      003AF0 12r00r00         [24]11873 	lcall	__gptrput
      003AF3 A3               [24]11874 	inc	dptr
      003AF4 EB               [12]11875 	mov	a,r3
      003AF5 12r00r00         [24]11876 	lcall	__gptrput
      003AF8 A3               [24]11877 	inc	dptr
      003AF9 EC               [12]11878 	mov	a,r4
      003AFA 12r00r00         [24]11879 	lcall	__gptrput
      003AFD E5*00            [12]11880 	mov	a,_bp
      003AFF 24 04            [12]11881 	add	a,#0x04
      003B01 F8               [12]11882 	mov	r0,a
      003B02 86 82            [24]11883 	mov	dpl,@r0
      003B04 08               [12]11884 	inc	r0
      003B05 86 83            [24]11885 	mov	dph,@r0
      003B07 08               [12]11886 	inc	r0
      003B08 86 F0            [24]11887 	mov	b,@r0
      003B0A 12r00r00         [24]11888 	lcall	__gptrget
      003B0D FA               [12]11889 	mov	r2,a
      003B0E A3               [24]11890 	inc	dptr
      003B0F 12r00r00         [24]11891 	lcall	__gptrget
      003B12 FB               [12]11892 	mov	r3,a
      003B13 A3               [24]11893 	inc	dptr
      003B14 12r00r00         [24]11894 	lcall	__gptrget
      003B17 FC               [12]11895 	mov	r4,a
      003B18 A8*00            [24]11896 	mov	r0,_bp
      003B1A 08               [12]11897 	inc	r0
      003B1B 74 02            [12]11898 	mov	a,#0x02
      003B1D 2A               [12]11899 	add	a,r2
      003B1E F6               [12]11900 	mov	@r0,a
      003B1F 74 00            [12]11901 	mov	a,#0x00
      003B21 3B               [12]11902 	addc	a,r3
      003B22 08               [12]11903 	inc	r0
      003B23 F6               [12]11904 	mov	@r0,a
      003B24 08               [12]11905 	inc	r0
      003B25 A6 04            [24]11906 	mov	@r0,ar4
      003B27 E5*00            [12]11907 	mov	a,_bp
      003B29 24 07            [12]11908 	add	a,#0x07
      003B2B F8               [12]11909 	mov	r0,a
      003B2C 86 82            [24]11910 	mov	dpl,@r0
      003B2E 08               [12]11911 	inc	r0
      003B2F 86 83            [24]11912 	mov	dph,@r0
      003B31 08               [12]11913 	inc	r0
      003B32 86 F0            [24]11914 	mov	b,@r0
      003B34 12r00r00         [24]11915 	lcall	__gptrget
      003B37 FA               [12]11916 	mov	r2,a
      003B38 A3               [24]11917 	inc	dptr
      003B39 12r00r00         [24]11918 	lcall	__gptrget
      003B3C FB               [12]11919 	mov	r3,a
      003B3D A3               [24]11920 	inc	dptr
      003B3E 12r00r00         [24]11921 	lcall	__gptrget
      003B41 FC               [12]11922 	mov	r4,a
      003B42 A8*00            [24]11923 	mov	r0,_bp
      003B44 08               [12]11924 	inc	r0
      003B45 86 82            [24]11925 	mov	dpl,@r0
      003B47 08               [12]11926 	inc	r0
      003B48 86 83            [24]11927 	mov	dph,@r0
      003B4A 08               [12]11928 	inc	r0
      003B4B 86 F0            [24]11929 	mov	b,@r0
      003B4D EA               [12]11930 	mov	a,r2
      003B4E 12r00r00         [24]11931 	lcall	__gptrput
      003B51 A3               [24]11932 	inc	dptr
      003B52 EB               [12]11933 	mov	a,r3
      003B53 12r00r00         [24]11934 	lcall	__gptrput
      003B56 A3               [24]11935 	inc	dptr
      003B57 EC               [12]11936 	mov	a,r4
      003B58 12r00r00         [24]11937 	lcall	__gptrput
      003B5B E5*00            [12]11938 	mov	a,_bp
      003B5D 24 14            [12]11939 	add	a,#0x14
      003B5F F8               [12]11940 	mov	r0,a
      003B60 A9*00            [24]11941 	mov	r1,_bp
      003B62 09               [12]11942 	inc	r1
      003B63 74 01            [12]11943 	mov	a,#0x01
      003B65 26               [12]11944 	add	a,@r0
      003B66 F7               [12]11945 	mov	@r1,a
      003B67 74 00            [12]11946 	mov	a,#0x00
      003B69 08               [12]11947 	inc	r0
      003B6A 36               [12]11948 	addc	a,@r0
      003B6B 09               [12]11949 	inc	r1
      003B6C F7               [12]11950 	mov	@r1,a
      003B6D 08               [12]11951 	inc	r0
      003B6E E6               [12]11952 	mov	a,@r0
      003B6F 09               [12]11953 	inc	r1
      003B70 F7               [12]11954 	mov	@r1,a
      003B71 A8*00            [24]11955 	mov	r0,_bp
      003B73 08               [12]11956 	inc	r0
      003B74 86 82            [24]11957 	mov	dpl,@r0
      003B76 08               [12]11958 	inc	r0
      003B77 86 83            [24]11959 	mov	dph,@r0
      003B79 08               [12]11960 	inc	r0
      003B7A 86 F0            [24]11961 	mov	b,@r0
      003B7C 12r00r00         [24]11962 	lcall	__gptrget
      003B7F FA               [12]11963 	mov	r2,a
      003B80 A3               [24]11964 	inc	dptr
      003B81 12r00r00         [24]11965 	lcall	__gptrget
      003B84 FB               [12]11966 	mov	r3,a
      003B85 A3               [24]11967 	inc	dptr
      003B86 12r00r00         [24]11968 	lcall	__gptrget
      003B89 FC               [12]11969 	mov	r4,a
      003B8A C0 05            [24]11970 	push	ar5
      003B8C C0 06            [24]11971 	push	ar6
      003B8E C0 07            [24]11972 	push	ar7
      003B90 8A 82            [24]11973 	mov	dpl,r2
      003B92 8B 83            [24]11974 	mov	dph,r3
      003B94 8C F0            [24]11975 	mov	b,r4
      003B96 12r00r00         [24]11976 	lcall	___gptr_cmp
      003B99 15 81            [12]11977 	dec	sp
      003B9B 15 81            [12]11978 	dec	sp
      003B9D 15 81            [12]11979 	dec	sp
      003B9F 70 02            [24]11980 	jnz	00172$
      003BA1 80 03            [24]11981 	sjmp	00173$
      003BA3                      11982 00172$:
      003BA3 02r3BrDA         [24]11983 	ljmp	00114$
      003BA6                      11984 00173$:
      003BA6 E5*00            [12]11985 	mov	a,_bp
      003BA8 24 04            [12]11986 	add	a,#0x04
      003BAA F8               [12]11987 	mov	r0,a
      003BAB 86 82            [24]11988 	mov	dpl,@r0
      003BAD 08               [12]11989 	inc	r0
      003BAE 86 83            [24]11990 	mov	dph,@r0
      003BB0 08               [12]11991 	inc	r0
      003BB1 86 F0            [24]11992 	mov	b,@r0
      003BB3 12r00r00         [24]11993 	lcall	__gptrget
      003BB6 FA               [12]11994 	mov	r2,a
      003BB7 A3               [24]11995 	inc	dptr
      003BB8 12r00r00         [24]11996 	lcall	__gptrget
      003BBB FB               [12]11997 	mov	r3,a
      003BBC A3               [24]11998 	inc	dptr
      003BBD 12r00r00         [24]11999 	lcall	__gptrget
      003BC0 FC               [12]12000 	mov	r4,a
      003BC1 A8*00            [24]12001 	mov	r0,_bp
      003BC3 08               [12]12002 	inc	r0
      003BC4 86 82            [24]12003 	mov	dpl,@r0
      003BC6 08               [12]12004 	inc	r0
      003BC7 86 83            [24]12005 	mov	dph,@r0
      003BC9 08               [12]12006 	inc	r0
      003BCA 86 F0            [24]12007 	mov	b,@r0
      003BCC EA               [12]12008 	mov	a,r2
      003BCD 12r00r00         [24]12009 	lcall	__gptrput
      003BD0 A3               [24]12010 	inc	dptr
      003BD1 EB               [12]12011 	mov	a,r3
      003BD2 12r00r00         [24]12012 	lcall	__gptrput
      003BD5 A3               [24]12013 	inc	dptr
      003BD6 EC               [12]12014 	mov	a,r4
      003BD7 12r00r00         [24]12015 	lcall	__gptrput
      003BDA                      12016 00114$:
      003BDA C0 05            [24]12017 	push	ar5
      003BDC C0 06            [24]12018 	push	ar6
      003BDE C0 07            [24]12019 	push	ar7
      003BE0 E5*00            [12]12020 	mov	a,_bp
      003BE2 24 0A            [12]12021 	add	a,#0x0a
      003BE4 F8               [12]12022 	mov	r0,a
      003BE5 86 82            [24]12023 	mov	dpl,@r0
      003BE7 08               [12]12024 	inc	r0
      003BE8 86 83            [24]12025 	mov	dph,@r0
      003BEA 08               [12]12026 	inc	r0
      003BEB 86 F0            [24]12027 	mov	b,@r0
      003BED 74 00            [12]12028 	mov	a,#0x00
      003BEF 12r00r00         [24]12029 	lcall	__gptrput
      003BF2 A3               [24]12030 	inc	dptr
      003BF3 12r00r00         [24]12031 	lcall	__gptrput
      003BF6 A3               [24]12032 	inc	dptr
      003BF7 12r00r00         [24]12033 	lcall	__gptrput
      003BFA E5*00            [12]12034 	mov	a,_bp
      003BFC 24 14            [12]12035 	add	a,#0x14
      003BFE F8               [12]12036 	mov	r0,a
      003BFF 86 82            [24]12037 	mov	dpl,@r0
      003C01 08               [12]12038 	inc	r0
      003C02 86 83            [24]12039 	mov	dph,@r0
      003C04 08               [12]12040 	inc	r0
      003C05 86 F0            [24]12041 	mov	b,@r0
      003C07 12r00r00         [24]12042 	lcall	__gptrget
      003C0A FC               [12]12043 	mov	r4,a
      003C0B 1C               [12]12044 	dec	r4
      003C0C E5*00            [12]12045 	mov	a,_bp
      003C0E 24 14            [12]12046 	add	a,#0x14
      003C10 F8               [12]12047 	mov	r0,a
      003C11 86 82            [24]12048 	mov	dpl,@r0
      003C13 08               [12]12049 	inc	r0
      003C14 86 83            [24]12050 	mov	dph,@r0
      003C16 08               [12]12051 	inc	r0
      003C17 86 F0            [24]12052 	mov	b,@r0
      003C19 EC               [12]12053 	mov	a,r4
      003C1A 12r00r00         [24]12054 	lcall	__gptrput
                           003C1D 12055 	C$tasks.c$5085$5_0$417 ==.
                                  12056 ;	tasks.c:5085: prvAddTaskToReadyList( pxTCB );
      003C1D E5*00            [12]12057 	mov	a,_bp
      003C1F 24 11            [12]12058 	add	a,#0x11
      003C21 F8               [12]12059 	mov	r0,a
      003C22 E5*00            [12]12060 	mov	a,_bp
      003C24 24 0D            [12]12061 	add	a,#0x0d
      003C26 F9               [12]12062 	mov	r1,a
      003C27 74 1F            [12]12063 	mov	a,#0x1f
      003C29 26               [12]12064 	add	a,@r0
      003C2A F7               [12]12065 	mov	@r1,a
      003C2B 74 00            [12]12066 	mov	a,#0x00
      003C2D 08               [12]12067 	inc	r0
      003C2E 36               [12]12068 	addc	a,@r0
      003C2F 09               [12]12069 	inc	r1
      003C30 F7               [12]12070 	mov	@r1,a
      003C31 08               [12]12071 	inc	r0
      003C32 E6               [12]12072 	mov	a,@r0
      003C33 09               [12]12073 	inc	r1
      003C34 F7               [12]12074 	mov	@r1,a
      003C35 E5*00            [12]12075 	mov	a,_bp
      003C37 24 0D            [12]12076 	add	a,#0x0d
      003C39 F8               [12]12077 	mov	r0,a
      003C3A 86 82            [24]12078 	mov	dpl,@r0
      003C3C 08               [12]12079 	inc	r0
      003C3D 86 83            [24]12080 	mov	dph,@r0
      003C3F 08               [12]12081 	inc	r0
      003C40 86 F0            [24]12082 	mov	b,@r0
      003C42 12r00r00         [24]12083 	lcall	__gptrget
      003C45 FC               [12]12084 	mov	r4,a
      003C46 90r00r07         [24]12085 	mov	dptr,#_uxTopReadyPriority
      003C49 E0               [24]12086 	movx	a,@dptr
      003C4A FF               [12]12087 	mov	r7,a
      003C4B C3               [12]12088 	clr	c
      003C4C EF               [12]12089 	mov	a,r7
      003C4D 9C               [12]12090 	subb	a,r4
      003C4E D0 07            [24]12091 	pop	ar7
      003C50 D0 06            [24]12092 	pop	ar6
      003C52 D0 05            [24]12093 	pop	ar5
      003C54 40 03            [24]12094 	jc	00174$
      003C56 02r3Cr5E         [24]12095 	ljmp	00116$
      003C59                      12096 00174$:
      003C59 90r00r07         [24]12097 	mov	dptr,#_uxTopReadyPriority
      003C5C EC               [12]12098 	mov	a,r4
      003C5D F0               [24]12099 	movx	@dptr,a
      003C5E                      12100 00116$:
      003C5E E5*00            [12]12101 	mov	a,_bp
      003C60 24 0D            [12]12102 	add	a,#0x0d
      003C62 F8               [12]12103 	mov	r0,a
      003C63 86 82            [24]12104 	mov	dpl,@r0
      003C65 08               [12]12105 	inc	r0
      003C66 86 83            [24]12106 	mov	dph,@r0
      003C68 08               [12]12107 	inc	r0
      003C69 86 F0            [24]12108 	mov	b,@r0
      003C6B 12r00r00         [24]12109 	lcall	__gptrget
      003C6E FC               [12]12110 	mov	r4,a
      003C6F EC               [12]12111 	mov	a,r4
      003C70 75 F0 0C         [24]12112 	mov	b,#0x0c
      003C73 A4               [48]12113 	mul	ab
      003C74 24r00            [12]12114 	add	a,#_pxReadyTasksLists
      003C76 FB               [12]12115 	mov	r3,a
      003C77 74s00            [12]12116 	mov	a,#(_pxReadyTasksLists >> 8)
      003C79 35 F0            [12]12117 	addc	a,b
      003C7B FC               [12]12118 	mov	r4,a
      003C7C 8B 82            [24]12119 	mov	dpl,r3
      003C7E 8C 83            [24]12120 	mov	dph,r4
      003C80 A3               [24]12121 	inc	dptr
      003C81 E0               [24]12122 	movx	a,@dptr
      003C82 FA               [12]12123 	mov	r2,a
      003C83 A3               [24]12124 	inc	dptr
      003C84 E0               [24]12125 	movx	a,@dptr
      003C85 FB               [12]12126 	mov	r3,a
      003C86 A3               [24]12127 	inc	dptr
      003C87 E0               [24]12128 	movx	a,@dptr
      003C88 FC               [12]12129 	mov	r4,a
      003C89 E5*00            [12]12130 	mov	a,_bp
      003C8B 24 07            [12]12131 	add	a,#0x07
      003C8D F8               [12]12132 	mov	r0,a
      003C8E 86 82            [24]12133 	mov	dpl,@r0
      003C90 08               [12]12134 	inc	r0
      003C91 86 83            [24]12135 	mov	dph,@r0
      003C93 08               [12]12136 	inc	r0
      003C94 86 F0            [24]12137 	mov	b,@r0
      003C96 EA               [12]12138 	mov	a,r2
      003C97 12r00r00         [24]12139 	lcall	__gptrput
      003C9A A3               [24]12140 	inc	dptr
      003C9B EB               [12]12141 	mov	a,r3
      003C9C 12r00r00         [24]12142 	lcall	__gptrput
      003C9F A3               [24]12143 	inc	dptr
      003CA0 EC               [12]12144 	mov	a,r4
      003CA1 12r00r00         [24]12145 	lcall	__gptrput
      003CA4 A8*00            [24]12146 	mov	r0,_bp
      003CA6 08               [12]12147 	inc	r0
      003CA7 74 05            [12]12148 	mov	a,#0x05
      003CA9 2A               [12]12149 	add	a,r2
      003CAA F6               [12]12150 	mov	@r0,a
      003CAB 74 00            [12]12151 	mov	a,#0x00
      003CAD 3B               [12]12152 	addc	a,r3
      003CAE 08               [12]12153 	inc	r0
      003CAF F6               [12]12154 	mov	@r0,a
      003CB0 08               [12]12155 	inc	r0
      003CB1 A6 04            [24]12156 	mov	@r0,ar4
      003CB3 A8*00            [24]12157 	mov	r0,_bp
      003CB5 08               [12]12158 	inc	r0
      003CB6 86 82            [24]12159 	mov	dpl,@r0
      003CB8 08               [12]12160 	inc	r0
      003CB9 86 83            [24]12161 	mov	dph,@r0
      003CBB 08               [12]12162 	inc	r0
      003CBC 86 F0            [24]12163 	mov	b,@r0
      003CBE 12r00r00         [24]12164 	lcall	__gptrget
      003CC1 FA               [12]12165 	mov	r2,a
      003CC2 A3               [24]12166 	inc	dptr
      003CC3 12r00r00         [24]12167 	lcall	__gptrget
      003CC6 FB               [12]12168 	mov	r3,a
      003CC7 A3               [24]12169 	inc	dptr
      003CC8 12r00r00         [24]12170 	lcall	__gptrget
      003CCB FC               [12]12171 	mov	r4,a
      003CCC E5*00            [12]12172 	mov	a,_bp
      003CCE 24 04            [12]12173 	add	a,#0x04
      003CD0 F8               [12]12174 	mov	r0,a
      003CD1 86 82            [24]12175 	mov	dpl,@r0
      003CD3 08               [12]12176 	inc	r0
      003CD4 86 83            [24]12177 	mov	dph,@r0
      003CD6 08               [12]12178 	inc	r0
      003CD7 86 F0            [24]12179 	mov	b,@r0
      003CD9 EA               [12]12180 	mov	a,r2
      003CDA 12r00r00         [24]12181 	lcall	__gptrput
      003CDD A3               [24]12182 	inc	dptr
      003CDE EB               [12]12183 	mov	a,r3
      003CDF 12r00r00         [24]12184 	lcall	__gptrput
      003CE2 A3               [24]12185 	inc	dptr
      003CE3 EC               [12]12186 	mov	a,r4
      003CE4 12r00r00         [24]12187 	lcall	__gptrput
      003CE7 A8*00            [24]12188 	mov	r0,_bp
      003CE9 08               [12]12189 	inc	r0
      003CEA 86 82            [24]12190 	mov	dpl,@r0
      003CEC 08               [12]12191 	inc	r0
      003CED 86 83            [24]12192 	mov	dph,@r0
      003CEF 08               [12]12193 	inc	r0
      003CF0 86 F0            [24]12194 	mov	b,@r0
      003CF2 12r00r00         [24]12195 	lcall	__gptrget
      003CF5 FA               [12]12196 	mov	r2,a
      003CF6 A3               [24]12197 	inc	dptr
      003CF7 12r00r00         [24]12198 	lcall	__gptrget
      003CFA FB               [12]12199 	mov	r3,a
      003CFB A3               [24]12200 	inc	dptr
      003CFC 12r00r00         [24]12201 	lcall	__gptrget
      003CFF FC               [12]12202 	mov	r4,a
      003D00 74 02            [12]12203 	mov	a,#0x02
      003D02 2A               [12]12204 	add	a,r2
      003D03 FA               [12]12205 	mov	r2,a
      003D04 74 00            [12]12206 	mov	a,#0x00
      003D06 3B               [12]12207 	addc	a,r3
      003D07 FB               [12]12208 	mov	r3,a
      003D08 8A 82            [24]12209 	mov	dpl,r2
      003D0A 8B 83            [24]12210 	mov	dph,r3
      003D0C 8C F0            [24]12211 	mov	b,r4
      003D0E ED               [12]12212 	mov	a,r5
      003D0F 12r00r00         [24]12213 	lcall	__gptrput
      003D12 A3               [24]12214 	inc	dptr
      003D13 EE               [12]12215 	mov	a,r6
      003D14 12r00r00         [24]12216 	lcall	__gptrput
      003D17 A3               [24]12217 	inc	dptr
      003D18 EF               [12]12218 	mov	a,r7
      003D19 12r00r00         [24]12219 	lcall	__gptrput
      003D1C A8*00            [24]12220 	mov	r0,_bp
      003D1E 08               [12]12221 	inc	r0
      003D1F 86 82            [24]12222 	mov	dpl,@r0
      003D21 08               [12]12223 	inc	r0
      003D22 86 83            [24]12224 	mov	dph,@r0
      003D24 08               [12]12225 	inc	r0
      003D25 86 F0            [24]12226 	mov	b,@r0
      003D27 ED               [12]12227 	mov	a,r5
      003D28 12r00r00         [24]12228 	lcall	__gptrput
      003D2B A3               [24]12229 	inc	dptr
      003D2C EE               [12]12230 	mov	a,r6
      003D2D 12r00r00         [24]12231 	lcall	__gptrput
      003D30 A3               [24]12232 	inc	dptr
      003D31 EF               [12]12233 	mov	a,r7
      003D32 12r00r00         [24]12234 	lcall	__gptrput
      003D35 E5*00            [12]12235 	mov	a,_bp
      003D37 24 0D            [12]12236 	add	a,#0x0d
      003D39 F8               [12]12237 	mov	r0,a
      003D3A 86 82            [24]12238 	mov	dpl,@r0
      003D3C 08               [12]12239 	inc	r0
      003D3D 86 83            [24]12240 	mov	dph,@r0
      003D3F 08               [12]12241 	inc	r0
      003D40 86 F0            [24]12242 	mov	b,@r0
      003D42 12r00r00         [24]12243 	lcall	__gptrget
      003D45 FF               [12]12244 	mov	r7,a
      003D46 EF               [12]12245 	mov	a,r7
      003D47 75 F0 0C         [24]12246 	mov	b,#0x0c
      003D4A A4               [48]12247 	mul	ab
      003D4B 24r00            [12]12248 	add	a,#_pxReadyTasksLists
      003D4D FE               [12]12249 	mov	r6,a
      003D4E 74s00            [12]12250 	mov	a,#(_pxReadyTasksLists >> 8)
      003D50 35 F0            [12]12251 	addc	a,b
      003D52 FF               [12]12252 	mov	r7,a
      003D53 7D 00            [12]12253 	mov	r5,#0x00
      003D55 E5*00            [12]12254 	mov	a,_bp
      003D57 24 0A            [12]12255 	add	a,#0x0a
      003D59 F8               [12]12256 	mov	r0,a
      003D5A 86 82            [24]12257 	mov	dpl,@r0
      003D5C 08               [12]12258 	inc	r0
      003D5D 86 83            [24]12259 	mov	dph,@r0
      003D5F 08               [12]12260 	inc	r0
      003D60 86 F0            [24]12261 	mov	b,@r0
      003D62 EE               [12]12262 	mov	a,r6
      003D63 12r00r00         [24]12263 	lcall	__gptrput
      003D66 A3               [24]12264 	inc	dptr
      003D67 EF               [12]12265 	mov	a,r7
      003D68 12r00r00         [24]12266 	lcall	__gptrput
      003D6B A3               [24]12267 	inc	dptr
      003D6C ED               [12]12268 	mov	a,r5
      003D6D 12r00r00         [24]12269 	lcall	__gptrput
      003D70 E5*00            [12]12270 	mov	a,_bp
      003D72 24 0D            [12]12271 	add	a,#0x0d
      003D74 F8               [12]12272 	mov	r0,a
      003D75 86 82            [24]12273 	mov	dpl,@r0
      003D77 08               [12]12274 	inc	r0
      003D78 86 83            [24]12275 	mov	dph,@r0
      003D7A 08               [12]12276 	inc	r0
      003D7B 86 F0            [24]12277 	mov	b,@r0
      003D7D 12r00r00         [24]12278 	lcall	__gptrget
      003D80 FF               [12]12279 	mov	r7,a
      003D81 EF               [12]12280 	mov	a,r7
      003D82 75 F0 0C         [24]12281 	mov	b,#0x0c
      003D85 A4               [48]12282 	mul	ab
      003D86 24r00            [12]12283 	add	a,#_pxReadyTasksLists
      003D88 FE               [12]12284 	mov	r6,a
      003D89 74s00            [12]12285 	mov	a,#(_pxReadyTasksLists >> 8)
      003D8B 35 F0            [12]12286 	addc	a,b
      003D8D FF               [12]12287 	mov	r7,a
      003D8E 8E 82            [24]12288 	mov	dpl,r6
      003D90 8F 83            [24]12289 	mov	dph,r7
      003D92 E0               [24]12290 	movx	a,@dptr
      003D93 FD               [12]12291 	mov	r5,a
      003D94 0D               [12]12292 	inc	r5
      003D95 8E 82            [24]12293 	mov	dpl,r6
      003D97 8F 83            [24]12294 	mov	dph,r7
      003D99 ED               [12]12295 	mov	a,r5
      003D9A F0               [24]12296 	movx	@dptr,a
      003D9B 02r3ErB9         [24]12297 	ljmp	00119$
      003D9E                      12298 00118$:
                           003D9E 12299 	C$tasks.c$5091$5_0$421 ==.
                                  12300 ;	tasks.c:5091: listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
      003D9E 90r00r4F         [24]12301 	mov	dptr,#(_xPendingReadyList + 0x0001)
      003DA1 E5*00            [12]12302 	mov	a,_bp
      003DA3 24 14            [12]12303 	add	a,#0x14
      003DA5 F8               [12]12304 	mov	r0,a
      003DA6 E0               [24]12305 	movx	a,@dptr
      003DA7 F6               [12]12306 	mov	@r0,a
      003DA8 A3               [24]12307 	inc	dptr
      003DA9 E0               [24]12308 	movx	a,@dptr
      003DAA 08               [12]12309 	inc	r0
      003DAB F6               [12]12310 	mov	@r0,a
      003DAC A3               [24]12311 	inc	dptr
      003DAD E0               [24]12312 	movx	a,@dptr
      003DAE 08               [12]12313 	inc	r0
      003DAF F6               [12]12314 	mov	@r0,a
      003DB0 E5*00            [12]12315 	mov	a,_bp
      003DB2 24 11            [12]12316 	add	a,#0x11
      003DB4 F8               [12]12317 	mov	r0,a
      003DB5 74 11            [12]12318 	mov	a,#0x11
      003DB7 26               [12]12319 	add	a,@r0
      003DB8 FA               [12]12320 	mov	r2,a
      003DB9 74 00            [12]12321 	mov	a,#0x00
      003DBB 08               [12]12322 	inc	r0
      003DBC 36               [12]12323 	addc	a,@r0
      003DBD FB               [12]12324 	mov	r3,a
      003DBE 08               [12]12325 	inc	r0
      003DBF 86 04            [24]12326 	mov	ar4,@r0
      003DC1 74 02            [12]12327 	mov	a,#0x02
      003DC3 2A               [12]12328 	add	a,r2
      003DC4 FD               [12]12329 	mov	r5,a
      003DC5 74 00            [12]12330 	mov	a,#0x00
      003DC7 3B               [12]12331 	addc	a,r3
      003DC8 FE               [12]12332 	mov	r6,a
      003DC9 8C 07            [24]12333 	mov	ar7,r4
      003DCB 8D 82            [24]12334 	mov	dpl,r5
      003DCD 8E 83            [24]12335 	mov	dph,r6
      003DCF 8F F0            [24]12336 	mov	b,r7
      003DD1 E5*00            [12]12337 	mov	a,_bp
      003DD3 24 14            [12]12338 	add	a,#0x14
      003DD5 F8               [12]12339 	mov	r0,a
      003DD6 E6               [12]12340 	mov	a,@r0
      003DD7 12r00r00         [24]12341 	lcall	__gptrput
      003DDA A3               [24]12342 	inc	dptr
      003DDB 08               [12]12343 	inc	r0
      003DDC E6               [12]12344 	mov	a,@r0
      003DDD 12r00r00         [24]12345 	lcall	__gptrput
      003DE0 A3               [24]12346 	inc	dptr
      003DE1 08               [12]12347 	inc	r0
      003DE2 E6               [12]12348 	mov	a,@r0
      003DE3 12r00r00         [24]12349 	lcall	__gptrput
      003DE6 E5*00            [12]12350 	mov	a,_bp
      003DE8 24 0D            [12]12351 	add	a,#0x0d
      003DEA F8               [12]12352 	mov	r0,a
      003DEB 74 05            [12]12353 	mov	a,#0x05
      003DED 2A               [12]12354 	add	a,r2
      003DEE F6               [12]12355 	mov	@r0,a
      003DEF 74 00            [12]12356 	mov	a,#0x00
      003DF1 3B               [12]12357 	addc	a,r3
      003DF2 08               [12]12358 	inc	r0
      003DF3 F6               [12]12359 	mov	@r0,a
      003DF4 08               [12]12360 	inc	r0
      003DF5 A6 04            [24]12361 	mov	@r0,ar4
      003DF7 E5*00            [12]12362 	mov	a,_bp
      003DF9 24 14            [12]12363 	add	a,#0x14
      003DFB F8               [12]12364 	mov	r0,a
      003DFC A9*00            [24]12365 	mov	r1,_bp
      003DFE 09               [12]12366 	inc	r1
      003DFF 74 05            [12]12367 	mov	a,#0x05
      003E01 26               [12]12368 	add	a,@r0
      003E02 F7               [12]12369 	mov	@r1,a
      003E03 74 00            [12]12370 	mov	a,#0x00
      003E05 08               [12]12371 	inc	r0
      003E06 36               [12]12372 	addc	a,@r0
      003E07 09               [12]12373 	inc	r1
      003E08 F7               [12]12374 	mov	@r1,a
      003E09 08               [12]12375 	inc	r0
      003E0A E6               [12]12376 	mov	a,@r0
      003E0B 09               [12]12377 	inc	r1
      003E0C F7               [12]12378 	mov	@r1,a
      003E0D A8*00            [24]12379 	mov	r0,_bp
      003E0F 08               [12]12380 	inc	r0
      003E10 86 82            [24]12381 	mov	dpl,@r0
      003E12 08               [12]12382 	inc	r0
      003E13 86 83            [24]12383 	mov	dph,@r0
      003E15 08               [12]12384 	inc	r0
      003E16 86 F0            [24]12385 	mov	b,@r0
      003E18 12r00r00         [24]12386 	lcall	__gptrget
      003E1B FD               [12]12387 	mov	r5,a
      003E1C A3               [24]12388 	inc	dptr
      003E1D 12r00r00         [24]12389 	lcall	__gptrget
      003E20 FE               [12]12390 	mov	r6,a
      003E21 A3               [24]12391 	inc	dptr
      003E22 12r00r00         [24]12392 	lcall	__gptrget
      003E25 FF               [12]12393 	mov	r7,a
      003E26 E5*00            [12]12394 	mov	a,_bp
      003E28 24 0D            [12]12395 	add	a,#0x0d
      003E2A F8               [12]12396 	mov	r0,a
      003E2B 86 82            [24]12397 	mov	dpl,@r0
      003E2D 08               [12]12398 	inc	r0
      003E2E 86 83            [24]12399 	mov	dph,@r0
      003E30 08               [12]12400 	inc	r0
      003E31 86 F0            [24]12401 	mov	b,@r0
      003E33 ED               [12]12402 	mov	a,r5
      003E34 12r00r00         [24]12403 	lcall	__gptrput
      003E37 A3               [24]12404 	inc	dptr
      003E38 EE               [12]12405 	mov	a,r6
      003E39 12r00r00         [24]12406 	lcall	__gptrput
      003E3C A3               [24]12407 	inc	dptr
      003E3D EF               [12]12408 	mov	a,r7
      003E3E 12r00r00         [24]12409 	lcall	__gptrput
      003E41 A8*00            [24]12410 	mov	r0,_bp
      003E43 08               [12]12411 	inc	r0
      003E44 86 82            [24]12412 	mov	dpl,@r0
      003E46 08               [12]12413 	inc	r0
      003E47 86 83            [24]12414 	mov	dph,@r0
      003E49 08               [12]12415 	inc	r0
      003E4A 86 F0            [24]12416 	mov	b,@r0
      003E4C 12r00r00         [24]12417 	lcall	__gptrget
      003E4F FD               [12]12418 	mov	r5,a
      003E50 A3               [24]12419 	inc	dptr
      003E51 12r00r00         [24]12420 	lcall	__gptrget
      003E54 FE               [12]12421 	mov	r6,a
      003E55 A3               [24]12422 	inc	dptr
      003E56 12r00r00         [24]12423 	lcall	__gptrget
      003E59 FF               [12]12424 	mov	r7,a
      003E5A 74 02            [12]12425 	mov	a,#0x02
      003E5C 2D               [12]12426 	add	a,r5
      003E5D FD               [12]12427 	mov	r5,a
      003E5E 74 00            [12]12428 	mov	a,#0x00
      003E60 3E               [12]12429 	addc	a,r6
      003E61 FE               [12]12430 	mov	r6,a
      003E62 8D 82            [24]12431 	mov	dpl,r5
      003E64 8E 83            [24]12432 	mov	dph,r6
      003E66 8F F0            [24]12433 	mov	b,r7
      003E68 EA               [12]12434 	mov	a,r2
      003E69 12r00r00         [24]12435 	lcall	__gptrput
      003E6C A3               [24]12436 	inc	dptr
      003E6D EB               [12]12437 	mov	a,r3
      003E6E 12r00r00         [24]12438 	lcall	__gptrput
      003E71 A3               [24]12439 	inc	dptr
      003E72 EC               [12]12440 	mov	a,r4
      003E73 12r00r00         [24]12441 	lcall	__gptrput
      003E76 A8*00            [24]12442 	mov	r0,_bp
      003E78 08               [12]12443 	inc	r0
      003E79 86 82            [24]12444 	mov	dpl,@r0
      003E7B 08               [12]12445 	inc	r0
      003E7C 86 83            [24]12446 	mov	dph,@r0
      003E7E 08               [12]12447 	inc	r0
      003E7F 86 F0            [24]12448 	mov	b,@r0
      003E81 EA               [12]12449 	mov	a,r2
      003E82 12r00r00         [24]12450 	lcall	__gptrput
      003E85 A3               [24]12451 	inc	dptr
      003E86 EB               [12]12452 	mov	a,r3
      003E87 12r00r00         [24]12453 	lcall	__gptrput
      003E8A A3               [24]12454 	inc	dptr
      003E8B EC               [12]12455 	mov	a,r4
      003E8C 12r00r00         [24]12456 	lcall	__gptrput
      003E8F 74 0B            [12]12457 	mov	a,#0x0b
      003E91 2A               [12]12458 	add	a,r2
      003E92 FA               [12]12459 	mov	r2,a
      003E93 74 00            [12]12460 	mov	a,#0x00
      003E95 3B               [12]12461 	addc	a,r3
      003E96 FB               [12]12462 	mov	r3,a
      003E97 8A 82            [24]12463 	mov	dpl,r2
      003E99 8B 83            [24]12464 	mov	dph,r3
      003E9B 8C F0            [24]12465 	mov	b,r4
      003E9D 74r4E            [12]12466 	mov	a,#_xPendingReadyList
      003E9F 12r00r00         [24]12467 	lcall	__gptrput
      003EA2 A3               [24]12468 	inc	dptr
      003EA3 74s00            [12]12469 	mov	a,#(_xPendingReadyList >> 8)
      003EA5 12r00r00         [24]12470 	lcall	__gptrput
      003EA8 A3               [24]12471 	inc	dptr
      003EA9 74 00            [12]12472 	mov	a,#0x00
      003EAB 12r00r00         [24]12473 	lcall	__gptrput
      003EAE 90r00r4E         [24]12474 	mov	dptr,#_xPendingReadyList
      003EB1 E0               [24]12475 	movx	a,@dptr
      003EB2 FF               [12]12476 	mov	r7,a
      003EB3 0F               [12]12477 	inc	r7
      003EB4 90r00r4E         [24]12478 	mov	dptr,#_xPendingReadyList
      003EB7 EF               [12]12479 	mov	a,r7
      003EB8 F0               [24]12480 	movx	@dptr,a
      003EB9                      12481 00119$:
                           003EB9 12482 	C$tasks.c$5094$3_0$413 ==.
                                  12483 ;	tasks.c:5094: if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
      003EB9 E5*00            [12]12484 	mov	a,_bp
      003EBB 24 11            [12]12485 	add	a,#0x11
      003EBD F8               [12]12486 	mov	r0,a
      003EBE 74 1F            [12]12487 	mov	a,#0x1f
      003EC0 26               [12]12488 	add	a,@r0
      003EC1 FD               [12]12489 	mov	r5,a
      003EC2 74 00            [12]12490 	mov	a,#0x00
      003EC4 08               [12]12491 	inc	r0
      003EC5 36               [12]12492 	addc	a,@r0
      003EC6 FE               [12]12493 	mov	r6,a
      003EC7 08               [12]12494 	inc	r0
      003EC8 86 07            [24]12495 	mov	ar7,@r0
      003ECA 8D 82            [24]12496 	mov	dpl,r5
      003ECC 8E 83            [24]12497 	mov	dph,r6
      003ECE 8F F0            [24]12498 	mov	b,r7
      003ED0 12r00r00         [24]12499 	lcall	__gptrget
      003ED3 FD               [12]12500 	mov	r5,a
      003ED4 90r00r00         [24]12501 	mov	dptr,#_pxCurrentTCB
      003ED7 E0               [24]12502 	movx	a,@dptr
      003ED8 FC               [12]12503 	mov	r4,a
      003ED9 A3               [24]12504 	inc	dptr
      003EDA E0               [24]12505 	movx	a,@dptr
      003EDB FE               [12]12506 	mov	r6,a
      003EDC A3               [24]12507 	inc	dptr
      003EDD E0               [24]12508 	movx	a,@dptr
      003EDE FF               [12]12509 	mov	r7,a
      003EDF 74 1F            [12]12510 	mov	a,#0x1f
      003EE1 2C               [12]12511 	add	a,r4
      003EE2 FC               [12]12512 	mov	r4,a
      003EE3 74 00            [12]12513 	mov	a,#0x00
      003EE5 3E               [12]12514 	addc	a,r6
      003EE6 FE               [12]12515 	mov	r6,a
      003EE7 8C 82            [24]12516 	mov	dpl,r4
      003EE9 8E 83            [24]12517 	mov	dph,r6
      003EEB 8F F0            [24]12518 	mov	b,r7
      003EED 12r00r00         [24]12519 	lcall	__gptrget
      003EF0 FC               [12]12520 	mov	r4,a
      003EF1 C3               [12]12521 	clr	c
      003EF2 EC               [12]12522 	mov	a,r4
      003EF3 9D               [12]12523 	subb	a,r5
      003EF4 40 03            [24]12524 	jc	00175$
      003EF6 02r3Fr24         [24]12525 	ljmp	00125$
      003EF9                      12526 00175$:
                           003EF9 12527 	C$tasks.c$5098$4_0$422 ==.
                                  12528 ;	tasks.c:5098: if( pxHigherPriorityTaskWoken != NULL )
      003EF9 E5*00            [12]12529 	mov	a,_bp
      003EFB 24 F2            [12]12530 	add	a,#0xf2
      003EFD F8               [12]12531 	mov	r0,a
      003EFE E6               [12]12532 	mov	a,@r0
      003EFF 08               [12]12533 	inc	r0
      003F00 46               [12]12534 	orl	a,@r0
      003F01 70 03            [24]12535 	jnz	00176$
      003F03 02r3Fr1E         [24]12536 	ljmp	00121$
      003F06                      12537 00176$:
                           003F06 12538 	C$tasks.c$5100$5_0$423 ==.
                                  12539 ;	tasks.c:5100: *pxHigherPriorityTaskWoken = pdTRUE;
      003F06 E5*00            [12]12540 	mov	a,_bp
      003F08 24 F2            [12]12541 	add	a,#0xf2
      003F0A F8               [12]12542 	mov	r0,a
      003F0B 86 05            [24]12543 	mov	ar5,@r0
      003F0D 08               [12]12544 	inc	r0
      003F0E 86 06            [24]12545 	mov	ar6,@r0
      003F10 08               [12]12546 	inc	r0
      003F11 86 07            [24]12547 	mov	ar7,@r0
      003F13 8D 82            [24]12548 	mov	dpl,r5
      003F15 8E 83            [24]12549 	mov	dph,r6
      003F17 8F F0            [24]12550 	mov	b,r7
      003F19 74 01            [12]12551 	mov	a,#0x01
      003F1B 12r00r00         [24]12552 	lcall	__gptrput
      003F1E                      12553 00121$:
                           003F1E 12554 	C$tasks.c$5106$4_0$422 ==.
                                  12555 ;	tasks.c:5106: xYieldPending = pdTRUE;
      003F1E 90r00r0B         [24]12556 	mov	dptr,#_xYieldPending
      003F21 74 01            [12]12557 	mov	a,#0x01
      003F23 F0               [24]12558 	movx	@dptr,a
      003F24                      12559 00125$:
                           003F24 12560 	C$tasks.c$5116$1_0$407 ==.
                                  12561 ;	tasks.c:5116: return xReturn;
      003F24 E5*00            [12]12562 	mov	a,_bp
      003F26 24 10            [12]12563 	add	a,#0x10
      003F28 F8               [12]12564 	mov	r0,a
      003F29 86 82            [24]12565 	mov	dpl,@r0
      003F2B                      12566 00126$:
                           003F2B 12567 	C$tasks.c$5117$1_0$407 ==.
                                  12568 ;	tasks.c:5117: }
      003F2B 85*00 81         [24]12569 	mov	sp,_bp
      003F2E D0*00            [24]12570 	pop	_bp
                           003F30 12571 	C$tasks.c$5117$1_0$407 ==.
                           003F30 12572 	XG$xTaskGenericNotifyFromISR$0$0 ==.
      003F30 22               [24]12573 	ret
                                  12574 ;------------------------------------------------------------
                                  12575 ;Allocation info for local variables in function 'vTaskGenericNotifyGiveFromISR'
                                  12576 ;------------------------------------------------------------
                                  12577 ;uxIndexToNotify           Allocated to stack - _bp -3
                                  12578 ;pxHigherPriorityTaskWoken Allocated to stack - _bp -6
                                  12579 ;xTaskToNotify             Allocated to stack - _bp +1
                                  12580 ;pxTCB                     Allocated to stack - _bp +16
                                  12581 ;ucOriginalNotifyState     Allocated to stack - _bp +19
                                  12582 ;uxSavedInterruptStatus    Allocated to registers 
                                  12583 ;pxList                    Allocated to stack - _bp +20
                                  12584 ;pxIndex                   Allocated to stack - _bp +20
                                  12585 ;pxIndex                   Allocated to stack - _bp +20
                                  12586 ;sloc0                     Allocated to stack - _bp +4
                                  12587 ;sloc1                     Allocated to stack - _bp +7
                                  12588 ;sloc2                     Allocated to stack - _bp +13
                                  12589 ;sloc3                     Allocated to stack - _bp +10
                                  12590 ;------------------------------------------------------------
                           003F31 12591 	G$vTaskGenericNotifyGiveFromISR$0$0 ==.
                           003F31 12592 	C$tasks.c$5124$1_0$426 ==.
                                  12593 ;	tasks.c:5124: void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
                                  12594 ;	-----------------------------------------
                                  12595 ;	 function vTaskGenericNotifyGiveFromISR
                                  12596 ;	-----------------------------------------
      003F31                      12597 _vTaskGenericNotifyGiveFromISR:
      003F31 C0*00            [24]12598 	push	_bp
      003F33 85 81*00         [24]12599 	mov	_bp,sp
      003F36 C0 82            [24]12600 	push	dpl
      003F38 C0 83            [24]12601 	push	dph
      003F3A C0 F0            [24]12602 	push	b
      003F3C E5 81            [12]12603 	mov	a,sp
      003F3E 24 13            [12]12604 	add	a,#0x13
      003F40 F5 81            [12]12605 	mov	sp,a
                           003F42 12606 	C$tasks.c$5153$1_0$426 ==.
                                  12607 ;	tasks.c:5153: pxTCB = xTaskToNotify;
      003F42 A8*00            [24]12608 	mov	r0,_bp
      003F44 08               [12]12609 	inc	r0
      003F45 E5*00            [12]12610 	mov	a,_bp
      003F47 24 10            [12]12611 	add	a,#0x10
      003F49 F9               [12]12612 	mov	r1,a
      003F4A E6               [12]12613 	mov	a,@r0
      003F4B F7               [12]12614 	mov	@r1,a
      003F4C 08               [12]12615 	inc	r0
      003F4D E6               [12]12616 	mov	a,@r0
      003F4E 09               [12]12617 	inc	r1
      003F4F F7               [12]12618 	mov	@r1,a
      003F50 08               [12]12619 	inc	r0
      003F51 E6               [12]12620 	mov	a,@r0
      003F52 09               [12]12621 	inc	r1
      003F53 F7               [12]12622 	mov	@r1,a
                           003F54 12623 	C$tasks.c$5157$2_0$427 ==.
                                  12624 ;	tasks.c:5157: ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
      003F54 A8*00            [24]12625 	mov	r0,_bp
      003F56 08               [12]12626 	inc	r0
      003F57 74 32            [12]12627 	mov	a,#0x32
      003F59 26               [12]12628 	add	a,@r0
      003F5A FA               [12]12629 	mov	r2,a
      003F5B 74 00            [12]12630 	mov	a,#0x00
      003F5D 08               [12]12631 	inc	r0
      003F5E 36               [12]12632 	addc	a,@r0
      003F5F FB               [12]12633 	mov	r3,a
      003F60 08               [12]12634 	inc	r0
      003F61 86 04            [24]12635 	mov	ar4,@r0
      003F63 E5*00            [12]12636 	mov	a,_bp
      003F65 24 FD            [12]12637 	add	a,#0xfd
      003F67 F8               [12]12638 	mov	r0,a
      003F68 86 07            [24]12639 	mov	ar7,@r0
      003F6A EF               [12]12640 	mov	a,r7
      003F6B 2A               [12]12641 	add	a,r2
      003F6C FA               [12]12642 	mov	r2,a
      003F6D 74 00            [12]12643 	mov	a,#0x00
      003F6F 3B               [12]12644 	addc	a,r3
      003F70 FB               [12]12645 	mov	r3,a
      003F71 8A 82            [24]12646 	mov	dpl,r2
      003F73 8B 83            [24]12647 	mov	dph,r3
      003F75 8C F0            [24]12648 	mov	b,r4
      003F77 E5*00            [12]12649 	mov	a,_bp
      003F79 24 13            [12]12650 	add	a,#0x13
      003F7B F8               [12]12651 	mov	r0,a
      003F7C 12r00r00         [24]12652 	lcall	__gptrget
      003F7F F6               [12]12653 	mov	@r0,a
                           003F80 12654 	C$tasks.c$5158$2_0$427 ==.
                                  12655 ;	tasks.c:5158: pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
      003F80 8A 82            [24]12656 	mov	dpl,r2
      003F82 8B 83            [24]12657 	mov	dph,r3
      003F84 8C F0            [24]12658 	mov	b,r4
      003F86 74 02            [12]12659 	mov	a,#0x02
      003F88 12r00r00         [24]12660 	lcall	__gptrput
                           003F8B 12661 	C$tasks.c$5162$2_0$427 ==.
                                  12662 ;	tasks.c:5162: ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
      003F8B A8*00            [24]12663 	mov	r0,_bp
      003F8D 08               [12]12664 	inc	r0
      003F8E 74 2E            [12]12665 	mov	a,#0x2e
      003F90 26               [12]12666 	add	a,@r0
      003F91 FB               [12]12667 	mov	r3,a
      003F92 74 00            [12]12668 	mov	a,#0x00
      003F94 08               [12]12669 	inc	r0
      003F95 36               [12]12670 	addc	a,@r0
      003F96 FC               [12]12671 	mov	r4,a
      003F97 08               [12]12672 	inc	r0
      003F98 86 05            [24]12673 	mov	ar5,@r0
      003F9A EF               [12]12674 	mov	a,r7
      003F9B 25 E0            [12]12675 	add	a,acc
      003F9D FF               [12]12676 	mov	r7,a
      003F9E EF               [12]12677 	mov	a,r7
      003F9F 25 E0            [12]12678 	add	a,acc
      003FA1 FF               [12]12679 	mov	r7,a
      003FA2 E5*00            [12]12680 	mov	a,_bp
      003FA4 24 04            [12]12681 	add	a,#0x04
      003FA6 F8               [12]12682 	mov	r0,a
      003FA7 EF               [12]12683 	mov	a,r7
      003FA8 2B               [12]12684 	add	a,r3
      003FA9 F6               [12]12685 	mov	@r0,a
      003FAA 74 00            [12]12686 	mov	a,#0x00
      003FAC 3C               [12]12687 	addc	a,r4
      003FAD 08               [12]12688 	inc	r0
      003FAE F6               [12]12689 	mov	@r0,a
      003FAF 08               [12]12690 	inc	r0
      003FB0 A6 05            [24]12691 	mov	@r0,ar5
      003FB2 E5*00            [12]12692 	mov	a,_bp
      003FB4 24 04            [12]12693 	add	a,#0x04
      003FB6 F8               [12]12694 	mov	r0,a
      003FB7 86 82            [24]12695 	mov	dpl,@r0
      003FB9 08               [12]12696 	inc	r0
      003FBA 86 83            [24]12697 	mov	dph,@r0
      003FBC 08               [12]12698 	inc	r0
      003FBD 86 F0            [24]12699 	mov	b,@r0
      003FBF 12r00r00         [24]12700 	lcall	__gptrget
      003FC2 FA               [12]12701 	mov	r2,a
      003FC3 A3               [24]12702 	inc	dptr
      003FC4 12r00r00         [24]12703 	lcall	__gptrget
      003FC7 FE               [12]12704 	mov	r6,a
      003FC8 A3               [24]12705 	inc	dptr
      003FC9 12r00r00         [24]12706 	lcall	__gptrget
      003FCC FD               [12]12707 	mov	r5,a
      003FCD A3               [24]12708 	inc	dptr
      003FCE 12r00r00         [24]12709 	lcall	__gptrget
      003FD1 FF               [12]12710 	mov	r7,a
      003FD2 0A               [12]12711 	inc	r2
      003FD3 BA 00 09         [24]12712 	cjne	r2,#0x00,00140$
      003FD6 0E               [12]12713 	inc	r6
      003FD7 BE 00 05         [24]12714 	cjne	r6,#0x00,00140$
      003FDA 0D               [12]12715 	inc	r5
      003FDB BD 00 01         [24]12716 	cjne	r5,#0x00,00140$
      003FDE 0F               [12]12717 	inc	r7
      003FDF                      12718 00140$:
      003FDF E5*00            [12]12719 	mov	a,_bp
      003FE1 24 04            [12]12720 	add	a,#0x04
      003FE3 F8               [12]12721 	mov	r0,a
      003FE4 86 82            [24]12722 	mov	dpl,@r0
      003FE6 08               [12]12723 	inc	r0
      003FE7 86 83            [24]12724 	mov	dph,@r0
      003FE9 08               [12]12725 	inc	r0
      003FEA 86 F0            [24]12726 	mov	b,@r0
      003FEC EA               [12]12727 	mov	a,r2
      003FED 12r00r00         [24]12728 	lcall	__gptrput
      003FF0 A3               [24]12729 	inc	dptr
      003FF1 EE               [12]12730 	mov	a,r6
      003FF2 12r00r00         [24]12731 	lcall	__gptrput
      003FF5 A3               [24]12732 	inc	dptr
      003FF6 ED               [12]12733 	mov	a,r5
      003FF7 12r00r00         [24]12734 	lcall	__gptrput
      003FFA A3               [24]12735 	inc	dptr
      003FFB EF               [12]12736 	mov	a,r7
      003FFC 12r00r00         [24]12737 	lcall	__gptrput
                           003FFF 12738 	C$tasks.c$5168$2_0$427 ==.
                                  12739 ;	tasks.c:5168: if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
      003FFF E5*00            [12]12740 	mov	a,_bp
      004001 24 13            [12]12741 	add	a,#0x13
      004003 F8               [12]12742 	mov	r0,a
      004004 B6 01 02         [24]12743 	cjne	@r0,#0x01,00141$
      004007 80 03            [24]12744 	sjmp	00142$
      004009                      12745 00141$:
      004009 02r45r4B         [24]12746 	ljmp	00114$
      00400C                      12747 00142$:
                           00400C 12748 	C$tasks.c$5173$3_0$428 ==.
                                  12749 ;	tasks.c:5173: if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
      00400C 90r00r13         [24]12750 	mov	dptr,#_uxSchedulerSuspended
      00400F E0               [24]12751 	movx	a,@dptr
      004010 60 03            [24]12752 	jz	00143$
      004012 02r43rBF         [24]12753 	ljmp	00106$
      004015                      12754 00143$:
                           004015 12755 	C$tasks.c$5175$5_0$430 ==.
                                  12756 ;	tasks.c:5175: listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
      004015 A8*00            [24]12757 	mov	r0,_bp
      004017 08               [12]12758 	inc	r0
      004018 74 03            [12]12759 	mov	a,#0x03
      00401A 26               [12]12760 	add	a,@r0
      00401B FD               [12]12761 	mov	r5,a
      00401C 74 00            [12]12762 	mov	a,#0x00
      00401E 08               [12]12763 	inc	r0
      00401F 36               [12]12764 	addc	a,@r0
      004020 FE               [12]12765 	mov	r6,a
      004021 08               [12]12766 	inc	r0
      004022 86 07            [24]12767 	mov	ar7,@r0
      004024 74 0B            [12]12768 	mov	a,#0x0b
      004026 2D               [12]12769 	add	a,r5
      004027 FA               [12]12770 	mov	r2,a
      004028 74 00            [12]12771 	mov	a,#0x00
      00402A 3E               [12]12772 	addc	a,r6
      00402B FB               [12]12773 	mov	r3,a
      00402C 8F 04            [24]12774 	mov	ar4,r7
      00402E 8A 82            [24]12775 	mov	dpl,r2
      004030 8B 83            [24]12776 	mov	dph,r3
      004032 8C F0            [24]12777 	mov	b,r4
      004034 E5*00            [12]12778 	mov	a,_bp
      004036 24 14            [12]12779 	add	a,#0x14
      004038 F8               [12]12780 	mov	r0,a
      004039 12r00r00         [24]12781 	lcall	__gptrget
      00403C F6               [12]12782 	mov	@r0,a
      00403D A3               [24]12783 	inc	dptr
      00403E 12r00r00         [24]12784 	lcall	__gptrget
      004041 08               [12]12785 	inc	r0
      004042 F6               [12]12786 	mov	@r0,a
      004043 A3               [24]12787 	inc	dptr
      004044 12r00r00         [24]12788 	lcall	__gptrget
      004047 08               [12]12789 	inc	r0
      004048 F6               [12]12790 	mov	@r0,a
      004049 E5*00            [12]12791 	mov	a,_bp
      00404B 24 04            [12]12792 	add	a,#0x04
      00404D F8               [12]12793 	mov	r0,a
      00404E 74 02            [12]12794 	mov	a,#0x02
      004050 2D               [12]12795 	add	a,r5
      004051 F6               [12]12796 	mov	@r0,a
      004052 74 00            [12]12797 	mov	a,#0x00
      004054 3E               [12]12798 	addc	a,r6
      004055 08               [12]12799 	inc	r0
      004056 F6               [12]12800 	mov	@r0,a
      004057 08               [12]12801 	inc	r0
      004058 A6 07            [24]12802 	mov	@r0,ar7
      00405A E5*00            [12]12803 	mov	a,_bp
      00405C 24 04            [12]12804 	add	a,#0x04
      00405E F8               [12]12805 	mov	r0,a
      00405F 86 82            [24]12806 	mov	dpl,@r0
      004061 08               [12]12807 	inc	r0
      004062 86 83            [24]12808 	mov	dph,@r0
      004064 08               [12]12809 	inc	r0
      004065 86 F0            [24]12810 	mov	b,@r0
      004067 12r00r00         [24]12811 	lcall	__gptrget
      00406A FA               [12]12812 	mov	r2,a
      00406B A3               [24]12813 	inc	dptr
      00406C 12r00r00         [24]12814 	lcall	__gptrget
      00406F FB               [12]12815 	mov	r3,a
      004070 A3               [24]12816 	inc	dptr
      004071 12r00r00         [24]12817 	lcall	__gptrget
      004074 FC               [12]12818 	mov	r4,a
      004075 E5*00            [12]12819 	mov	a,_bp
      004077 24 0D            [12]12820 	add	a,#0x0d
      004079 F8               [12]12821 	mov	r0,a
      00407A 74 05            [12]12822 	mov	a,#0x05
      00407C 2A               [12]12823 	add	a,r2
      00407D F6               [12]12824 	mov	@r0,a
      00407E 74 00            [12]12825 	mov	a,#0x00
      004080 3B               [12]12826 	addc	a,r3
      004081 08               [12]12827 	inc	r0
      004082 F6               [12]12828 	mov	@r0,a
      004083 08               [12]12829 	inc	r0
      004084 A6 04            [24]12830 	mov	@r0,ar4
      004086 E5*00            [12]12831 	mov	a,_bp
      004088 24 07            [12]12832 	add	a,#0x07
      00408A F8               [12]12833 	mov	r0,a
      00408B 74 05            [12]12834 	mov	a,#0x05
      00408D 2D               [12]12835 	add	a,r5
      00408E F6               [12]12836 	mov	@r0,a
      00408F 74 00            [12]12837 	mov	a,#0x00
      004091 3E               [12]12838 	addc	a,r6
      004092 08               [12]12839 	inc	r0
      004093 F6               [12]12840 	mov	@r0,a
      004094 08               [12]12841 	inc	r0
      004095 A6 07            [24]12842 	mov	@r0,ar7
      004097 E5*00            [12]12843 	mov	a,_bp
      004099 24 07            [12]12844 	add	a,#0x07
      00409B F8               [12]12845 	mov	r0,a
      00409C 86 82            [24]12846 	mov	dpl,@r0
      00409E 08               [12]12847 	inc	r0
      00409F 86 83            [24]12848 	mov	dph,@r0
      0040A1 08               [12]12849 	inc	r0
      0040A2 86 F0            [24]12850 	mov	b,@r0
      0040A4 12r00r00         [24]12851 	lcall	__gptrget
      0040A7 FA               [12]12852 	mov	r2,a
      0040A8 A3               [24]12853 	inc	dptr
      0040A9 12r00r00         [24]12854 	lcall	__gptrget
      0040AC FB               [12]12855 	mov	r3,a
      0040AD A3               [24]12856 	inc	dptr
      0040AE 12r00r00         [24]12857 	lcall	__gptrget
      0040B1 FC               [12]12858 	mov	r4,a
      0040B2 E5*00            [12]12859 	mov	a,_bp
      0040B4 24 0D            [12]12860 	add	a,#0x0d
      0040B6 F8               [12]12861 	mov	r0,a
      0040B7 86 82            [24]12862 	mov	dpl,@r0
      0040B9 08               [12]12863 	inc	r0
      0040BA 86 83            [24]12864 	mov	dph,@r0
      0040BC 08               [12]12865 	inc	r0
      0040BD 86 F0            [24]12866 	mov	b,@r0
      0040BF EA               [12]12867 	mov	a,r2
      0040C0 12r00r00         [24]12868 	lcall	__gptrput
      0040C3 A3               [24]12869 	inc	dptr
      0040C4 EB               [12]12870 	mov	a,r3
      0040C5 12r00r00         [24]12871 	lcall	__gptrput
      0040C8 A3               [24]12872 	inc	dptr
      0040C9 EC               [12]12873 	mov	a,r4
      0040CA 12r00r00         [24]12874 	lcall	__gptrput
      0040CD E5*00            [12]12875 	mov	a,_bp
      0040CF 24 07            [12]12876 	add	a,#0x07
      0040D1 F8               [12]12877 	mov	r0,a
      0040D2 86 82            [24]12878 	mov	dpl,@r0
      0040D4 08               [12]12879 	inc	r0
      0040D5 86 83            [24]12880 	mov	dph,@r0
      0040D7 08               [12]12881 	inc	r0
      0040D8 86 F0            [24]12882 	mov	b,@r0
      0040DA 12r00r00         [24]12883 	lcall	__gptrget
      0040DD FA               [12]12884 	mov	r2,a
      0040DE A3               [24]12885 	inc	dptr
      0040DF 12r00r00         [24]12886 	lcall	__gptrget
      0040E2 FB               [12]12887 	mov	r3,a
      0040E3 A3               [24]12888 	inc	dptr
      0040E4 12r00r00         [24]12889 	lcall	__gptrget
      0040E7 FC               [12]12890 	mov	r4,a
      0040E8 E5*00            [12]12891 	mov	a,_bp
      0040EA 24 0D            [12]12892 	add	a,#0x0d
      0040EC F8               [12]12893 	mov	r0,a
      0040ED 74 02            [12]12894 	mov	a,#0x02
      0040EF 2A               [12]12895 	add	a,r2
      0040F0 F6               [12]12896 	mov	@r0,a
      0040F1 74 00            [12]12897 	mov	a,#0x00
      0040F3 3B               [12]12898 	addc	a,r3
      0040F4 08               [12]12899 	inc	r0
      0040F5 F6               [12]12900 	mov	@r0,a
      0040F6 08               [12]12901 	inc	r0
      0040F7 A6 04            [24]12902 	mov	@r0,ar4
      0040F9 E5*00            [12]12903 	mov	a,_bp
      0040FB 24 04            [12]12904 	add	a,#0x04
      0040FD F8               [12]12905 	mov	r0,a
      0040FE 86 82            [24]12906 	mov	dpl,@r0
      004100 08               [12]12907 	inc	r0
      004101 86 83            [24]12908 	mov	dph,@r0
      004103 08               [12]12909 	inc	r0
      004104 86 F0            [24]12910 	mov	b,@r0
      004106 12r00r00         [24]12911 	lcall	__gptrget
      004109 FA               [12]12912 	mov	r2,a
      00410A A3               [24]12913 	inc	dptr
      00410B 12r00r00         [24]12914 	lcall	__gptrget
      00410E FB               [12]12915 	mov	r3,a
      00410F A3               [24]12916 	inc	dptr
      004110 12r00r00         [24]12917 	lcall	__gptrget
      004113 FC               [12]12918 	mov	r4,a
      004114 E5*00            [12]12919 	mov	a,_bp
      004116 24 0D            [12]12920 	add	a,#0x0d
      004118 F8               [12]12921 	mov	r0,a
      004119 86 82            [24]12922 	mov	dpl,@r0
      00411B 08               [12]12923 	inc	r0
      00411C 86 83            [24]12924 	mov	dph,@r0
      00411E 08               [12]12925 	inc	r0
      00411F 86 F0            [24]12926 	mov	b,@r0
      004121 EA               [12]12927 	mov	a,r2
      004122 12r00r00         [24]12928 	lcall	__gptrput
      004125 A3               [24]12929 	inc	dptr
      004126 EB               [12]12930 	mov	a,r3
      004127 12r00r00         [24]12931 	lcall	__gptrput
      00412A A3               [24]12932 	inc	dptr
      00412B EC               [12]12933 	mov	a,r4
      00412C 12r00r00         [24]12934 	lcall	__gptrput
      00412F E5*00            [12]12935 	mov	a,_bp
      004131 24 14            [12]12936 	add	a,#0x14
      004133 F8               [12]12937 	mov	r0,a
      004134 E5*00            [12]12938 	mov	a,_bp
      004136 24 0D            [12]12939 	add	a,#0x0d
      004138 F9               [12]12940 	mov	r1,a
      004139 74 01            [12]12941 	mov	a,#0x01
      00413B 26               [12]12942 	add	a,@r0
      00413C F7               [12]12943 	mov	@r1,a
      00413D 74 00            [12]12944 	mov	a,#0x00
      00413F 08               [12]12945 	inc	r0
      004140 36               [12]12946 	addc	a,@r0
      004141 09               [12]12947 	inc	r1
      004142 F7               [12]12948 	mov	@r1,a
      004143 08               [12]12949 	inc	r0
      004144 E6               [12]12950 	mov	a,@r0
      004145 09               [12]12951 	inc	r1
      004146 F7               [12]12952 	mov	@r1,a
      004147 E5*00            [12]12953 	mov	a,_bp
      004149 24 0D            [12]12954 	add	a,#0x0d
      00414B F8               [12]12955 	mov	r0,a
      00414C 86 82            [24]12956 	mov	dpl,@r0
      00414E 08               [12]12957 	inc	r0
      00414F 86 83            [24]12958 	mov	dph,@r0
      004151 08               [12]12959 	inc	r0
      004152 86 F0            [24]12960 	mov	b,@r0
      004154 12r00r00         [24]12961 	lcall	__gptrget
      004157 FA               [12]12962 	mov	r2,a
      004158 A3               [24]12963 	inc	dptr
      004159 12r00r00         [24]12964 	lcall	__gptrget
      00415C FB               [12]12965 	mov	r3,a
      00415D A3               [24]12966 	inc	dptr
      00415E 12r00r00         [24]12967 	lcall	__gptrget
      004161 FC               [12]12968 	mov	r4,a
      004162 C0 05            [24]12969 	push	ar5
      004164 C0 06            [24]12970 	push	ar6
      004166 C0 07            [24]12971 	push	ar7
      004168 8A 82            [24]12972 	mov	dpl,r2
      00416A 8B 83            [24]12973 	mov	dph,r3
      00416C 8C F0            [24]12974 	mov	b,r4
      00416E 12r00r00         [24]12975 	lcall	___gptr_cmp
      004171 15 81            [12]12976 	dec	sp
      004173 15 81            [12]12977 	dec	sp
      004175 15 81            [12]12978 	dec	sp
      004177 70 02            [24]12979 	jnz	00144$
      004179 80 03            [24]12980 	sjmp	00145$
      00417B                      12981 00144$:
      00417B 02r41rB4         [24]12982 	ljmp	00102$
      00417E                      12983 00145$:
      00417E E5*00            [12]12984 	mov	a,_bp
      004180 24 07            [12]12985 	add	a,#0x07
      004182 F8               [12]12986 	mov	r0,a
      004183 86 82            [24]12987 	mov	dpl,@r0
      004185 08               [12]12988 	inc	r0
      004186 86 83            [24]12989 	mov	dph,@r0
      004188 08               [12]12990 	inc	r0
      004189 86 F0            [24]12991 	mov	b,@r0
      00418B 12r00r00         [24]12992 	lcall	__gptrget
      00418E FD               [12]12993 	mov	r5,a
      00418F A3               [24]12994 	inc	dptr
      004190 12r00r00         [24]12995 	lcall	__gptrget
      004193 FE               [12]12996 	mov	r6,a
      004194 A3               [24]12997 	inc	dptr
      004195 12r00r00         [24]12998 	lcall	__gptrget
      004198 FF               [12]12999 	mov	r7,a
      004199 E5*00            [12]13000 	mov	a,_bp
      00419B 24 0D            [12]13001 	add	a,#0x0d
      00419D F8               [12]13002 	mov	r0,a
      00419E 86 82            [24]13003 	mov	dpl,@r0
      0041A0 08               [12]13004 	inc	r0
      0041A1 86 83            [24]13005 	mov	dph,@r0
      0041A3 08               [12]13006 	inc	r0
      0041A4 86 F0            [24]13007 	mov	b,@r0
      0041A6 ED               [12]13008 	mov	a,r5
      0041A7 12r00r00         [24]13009 	lcall	__gptrput
      0041AA A3               [24]13010 	inc	dptr
      0041AB EE               [12]13011 	mov	a,r6
      0041AC 12r00r00         [24]13012 	lcall	__gptrput
      0041AF A3               [24]13013 	inc	dptr
      0041B0 EF               [12]13014 	mov	a,r7
      0041B1 12r00r00         [24]13015 	lcall	__gptrput
      0041B4                      13016 00102$:
      0041B4 E5*00            [12]13017 	mov	a,_bp
      0041B6 24 10            [12]13018 	add	a,#0x10
      0041B8 F8               [12]13019 	mov	r0,a
      0041B9 74 03            [12]13020 	mov	a,#0x03
      0041BB 26               [12]13021 	add	a,@r0
      0041BC FD               [12]13022 	mov	r5,a
      0041BD 74 00            [12]13023 	mov	a,#0x00
      0041BF 08               [12]13024 	inc	r0
      0041C0 36               [12]13025 	addc	a,@r0
      0041C1 FE               [12]13026 	mov	r6,a
      0041C2 08               [12]13027 	inc	r0
      0041C3 86 07            [24]13028 	mov	ar7,@r0
      0041C5 E5*00            [12]13029 	mov	a,_bp
      0041C7 24 0D            [12]13030 	add	a,#0x0d
      0041C9 F8               [12]13031 	mov	r0,a
      0041CA 74 0B            [12]13032 	mov	a,#0x0b
      0041CC 2D               [12]13033 	add	a,r5
      0041CD F6               [12]13034 	mov	@r0,a
      0041CE 74 00            [12]13035 	mov	a,#0x00
      0041D0 3E               [12]13036 	addc	a,r6
      0041D1 08               [12]13037 	inc	r0
      0041D2 F6               [12]13038 	mov	@r0,a
      0041D3 08               [12]13039 	inc	r0
      0041D4 A6 07            [24]13040 	mov	@r0,ar7
      0041D6 E5*00            [12]13041 	mov	a,_bp
      0041D8 24 0D            [12]13042 	add	a,#0x0d
      0041DA F8               [12]13043 	mov	r0,a
      0041DB 86 82            [24]13044 	mov	dpl,@r0
      0041DD 08               [12]13045 	inc	r0
      0041DE 86 83            [24]13046 	mov	dph,@r0
      0041E0 08               [12]13047 	inc	r0
      0041E1 86 F0            [24]13048 	mov	b,@r0
      0041E3 74 00            [12]13049 	mov	a,#0x00
      0041E5 12r00r00         [24]13050 	lcall	__gptrput
      0041E8 A3               [24]13051 	inc	dptr
      0041E9 12r00r00         [24]13052 	lcall	__gptrput
      0041EC A3               [24]13053 	inc	dptr
      0041ED 12r00r00         [24]13054 	lcall	__gptrput
      0041F0 E5*00            [12]13055 	mov	a,_bp
      0041F2 24 14            [12]13056 	add	a,#0x14
      0041F4 F8               [12]13057 	mov	r0,a
      0041F5 86 82            [24]13058 	mov	dpl,@r0
      0041F7 08               [12]13059 	inc	r0
      0041F8 86 83            [24]13060 	mov	dph,@r0
      0041FA 08               [12]13061 	inc	r0
      0041FB 86 F0            [24]13062 	mov	b,@r0
      0041FD 12r00r00         [24]13063 	lcall	__gptrget
      004200 FC               [12]13064 	mov	r4,a
      004201 1C               [12]13065 	dec	r4
      004202 E5*00            [12]13066 	mov	a,_bp
      004204 24 14            [12]13067 	add	a,#0x14
      004206 F8               [12]13068 	mov	r0,a
      004207 86 82            [24]13069 	mov	dpl,@r0
      004209 08               [12]13070 	inc	r0
      00420A 86 83            [24]13071 	mov	dph,@r0
      00420C 08               [12]13072 	inc	r0
      00420D 86 F0            [24]13073 	mov	b,@r0
      00420F EC               [12]13074 	mov	a,r4
      004210 12r00r00         [24]13075 	lcall	__gptrput
                           004213 13076 	C$tasks.c$5176$5_0$432 ==.
                                  13077 ;	tasks.c:5176: prvAddTaskToReadyList( pxTCB );
      004213 E5*00            [12]13078 	mov	a,_bp
      004215 24 10            [12]13079 	add	a,#0x10
      004217 F8               [12]13080 	mov	r0,a
      004218 E5*00            [12]13081 	mov	a,_bp
      00421A 24 04            [12]13082 	add	a,#0x04
      00421C F9               [12]13083 	mov	r1,a
      00421D 74 1F            [12]13084 	mov	a,#0x1f
      00421F 26               [12]13085 	add	a,@r0
      004220 F7               [12]13086 	mov	@r1,a
      004221 74 00            [12]13087 	mov	a,#0x00
      004223 08               [12]13088 	inc	r0
      004224 36               [12]13089 	addc	a,@r0
      004225 09               [12]13090 	inc	r1
      004226 F7               [12]13091 	mov	@r1,a
      004227 08               [12]13092 	inc	r0
      004228 E6               [12]13093 	mov	a,@r0
      004229 09               [12]13094 	inc	r1
      00422A F7               [12]13095 	mov	@r1,a
      00422B E5*00            [12]13096 	mov	a,_bp
      00422D 24 04            [12]13097 	add	a,#0x04
      00422F F8               [12]13098 	mov	r0,a
      004230 86 82            [24]13099 	mov	dpl,@r0
      004232 08               [12]13100 	inc	r0
      004233 86 83            [24]13101 	mov	dph,@r0
      004235 08               [12]13102 	inc	r0
      004236 86 F0            [24]13103 	mov	b,@r0
      004238 12r00r00         [24]13104 	lcall	__gptrget
      00423B FB               [12]13105 	mov	r3,a
      00423C 90r00r07         [24]13106 	mov	dptr,#_uxTopReadyPriority
      00423F E0               [24]13107 	movx	a,@dptr
      004240 FC               [12]13108 	mov	r4,a
      004241 C3               [12]13109 	clr	c
      004242 EC               [12]13110 	mov	a,r4
      004243 9B               [12]13111 	subb	a,r3
      004244 40 03            [24]13112 	jc	00146$
      004246 02r42r4E         [24]13113 	ljmp	00104$
      004249                      13114 00146$:
      004249 90r00r07         [24]13115 	mov	dptr,#_uxTopReadyPriority
      00424C EB               [12]13116 	mov	a,r3
      00424D F0               [24]13117 	movx	@dptr,a
      00424E                      13118 00104$:
      00424E E5*00            [12]13119 	mov	a,_bp
      004250 24 04            [12]13120 	add	a,#0x04
      004252 F8               [12]13121 	mov	r0,a
      004253 86 82            [24]13122 	mov	dpl,@r0
      004255 08               [12]13123 	inc	r0
      004256 86 83            [24]13124 	mov	dph,@r0
      004258 08               [12]13125 	inc	r0
      004259 86 F0            [24]13126 	mov	b,@r0
      00425B 12r00r00         [24]13127 	lcall	__gptrget
      00425E FC               [12]13128 	mov	r4,a
      00425F EC               [12]13129 	mov	a,r4
      004260 75 F0 0C         [24]13130 	mov	b,#0x0c
      004263 A4               [48]13131 	mul	ab
      004264 24r00            [12]13132 	add	a,#_pxReadyTasksLists
      004266 FB               [12]13133 	mov	r3,a
      004267 74s00            [12]13134 	mov	a,#(_pxReadyTasksLists >> 8)
      004269 35 F0            [12]13135 	addc	a,b
      00426B FC               [12]13136 	mov	r4,a
      00426C 8B 82            [24]13137 	mov	dpl,r3
      00426E 8C 83            [24]13138 	mov	dph,r4
      004270 A3               [24]13139 	inc	dptr
      004271 E5*00            [12]13140 	mov	a,_bp
      004273 24 14            [12]13141 	add	a,#0x14
      004275 F8               [12]13142 	mov	r0,a
      004276 E0               [24]13143 	movx	a,@dptr
      004277 F6               [12]13144 	mov	@r0,a
      004278 A3               [24]13145 	inc	dptr
      004279 E0               [24]13146 	movx	a,@dptr
      00427A 08               [12]13147 	inc	r0
      00427B F6               [12]13148 	mov	@r0,a
      00427C A3               [24]13149 	inc	dptr
      00427D E0               [24]13150 	movx	a,@dptr
      00427E 08               [12]13151 	inc	r0
      00427F F6               [12]13152 	mov	@r0,a
      004280 74 02            [12]13153 	mov	a,#0x02
      004282 2D               [12]13154 	add	a,r5
      004283 FA               [12]13155 	mov	r2,a
      004284 74 00            [12]13156 	mov	a,#0x00
      004286 3E               [12]13157 	addc	a,r6
      004287 FB               [12]13158 	mov	r3,a
      004288 8F 04            [24]13159 	mov	ar4,r7
      00428A 8A 82            [24]13160 	mov	dpl,r2
      00428C 8B 83            [24]13161 	mov	dph,r3
      00428E 8C F0            [24]13162 	mov	b,r4
      004290 E5*00            [12]13163 	mov	a,_bp
      004292 24 14            [12]13164 	add	a,#0x14
      004294 F8               [12]13165 	mov	r0,a
      004295 E6               [12]13166 	mov	a,@r0
      004296 12r00r00         [24]13167 	lcall	__gptrput
      004299 A3               [24]13168 	inc	dptr
      00429A 08               [12]13169 	inc	r0
      00429B E6               [12]13170 	mov	a,@r0
      00429C 12r00r00         [24]13171 	lcall	__gptrput
      00429F A3               [24]13172 	inc	dptr
      0042A0 08               [12]13173 	inc	r0
      0042A1 E6               [12]13174 	mov	a,@r0
      0042A2 12r00r00         [24]13175 	lcall	__gptrput
      0042A5 E5*00            [12]13176 	mov	a,_bp
      0042A7 24 07            [12]13177 	add	a,#0x07
      0042A9 F8               [12]13178 	mov	r0,a
      0042AA 74 05            [12]13179 	mov	a,#0x05
      0042AC 2D               [12]13180 	add	a,r5
      0042AD F6               [12]13181 	mov	@r0,a
      0042AE 74 00            [12]13182 	mov	a,#0x00
      0042B0 3E               [12]13183 	addc	a,r6
      0042B1 08               [12]13184 	inc	r0
      0042B2 F6               [12]13185 	mov	@r0,a
      0042B3 08               [12]13186 	inc	r0
      0042B4 A6 07            [24]13187 	mov	@r0,ar7
      0042B6 E5*00            [12]13188 	mov	a,_bp
      0042B8 24 14            [12]13189 	add	a,#0x14
      0042BA F8               [12]13190 	mov	r0,a
      0042BB E5*00            [12]13191 	mov	a,_bp
      0042BD 24 0A            [12]13192 	add	a,#0x0a
      0042BF F9               [12]13193 	mov	r1,a
      0042C0 74 05            [12]13194 	mov	a,#0x05
      0042C2 26               [12]13195 	add	a,@r0
      0042C3 F7               [12]13196 	mov	@r1,a
      0042C4 74 00            [12]13197 	mov	a,#0x00
      0042C6 08               [12]13198 	inc	r0
      0042C7 36               [12]13199 	addc	a,@r0
      0042C8 09               [12]13200 	inc	r1
      0042C9 F7               [12]13201 	mov	@r1,a
      0042CA 08               [12]13202 	inc	r0
      0042CB E6               [12]13203 	mov	a,@r0
      0042CC 09               [12]13204 	inc	r1
      0042CD F7               [12]13205 	mov	@r1,a
      0042CE E5*00            [12]13206 	mov	a,_bp
      0042D0 24 0A            [12]13207 	add	a,#0x0a
      0042D2 F8               [12]13208 	mov	r0,a
      0042D3 86 82            [24]13209 	mov	dpl,@r0
      0042D5 08               [12]13210 	inc	r0
      0042D6 86 83            [24]13211 	mov	dph,@r0
      0042D8 08               [12]13212 	inc	r0
      0042D9 86 F0            [24]13213 	mov	b,@r0
      0042DB 12r00r00         [24]13214 	lcall	__gptrget
      0042DE FA               [12]13215 	mov	r2,a
      0042DF A3               [24]13216 	inc	dptr
      0042E0 12r00r00         [24]13217 	lcall	__gptrget
      0042E3 FB               [12]13218 	mov	r3,a
      0042E4 A3               [24]13219 	inc	dptr
      0042E5 12r00r00         [24]13220 	lcall	__gptrget
      0042E8 FC               [12]13221 	mov	r4,a
      0042E9 E5*00            [12]13222 	mov	a,_bp
      0042EB 24 07            [12]13223 	add	a,#0x07
      0042ED F8               [12]13224 	mov	r0,a
      0042EE 86 82            [24]13225 	mov	dpl,@r0
      0042F0 08               [12]13226 	inc	r0
      0042F1 86 83            [24]13227 	mov	dph,@r0
      0042F3 08               [12]13228 	inc	r0
      0042F4 86 F0            [24]13229 	mov	b,@r0
      0042F6 EA               [12]13230 	mov	a,r2
      0042F7 12r00r00         [24]13231 	lcall	__gptrput
      0042FA A3               [24]13232 	inc	dptr
      0042FB EB               [12]13233 	mov	a,r3
      0042FC 12r00r00         [24]13234 	lcall	__gptrput
      0042FF A3               [24]13235 	inc	dptr
      004300 EC               [12]13236 	mov	a,r4
      004301 12r00r00         [24]13237 	lcall	__gptrput
      004304 E5*00            [12]13238 	mov	a,_bp
      004306 24 0A            [12]13239 	add	a,#0x0a
      004308 F8               [12]13240 	mov	r0,a
      004309 86 82            [24]13241 	mov	dpl,@r0
      00430B 08               [12]13242 	inc	r0
      00430C 86 83            [24]13243 	mov	dph,@r0
      00430E 08               [12]13244 	inc	r0
      00430F 86 F0            [24]13245 	mov	b,@r0
      004311 12r00r00         [24]13246 	lcall	__gptrget
      004314 FA               [12]13247 	mov	r2,a
      004315 A3               [24]13248 	inc	dptr
      004316 12r00r00         [24]13249 	lcall	__gptrget
      004319 FB               [12]13250 	mov	r3,a
      00431A A3               [24]13251 	inc	dptr
      00431B 12r00r00         [24]13252 	lcall	__gptrget
      00431E FC               [12]13253 	mov	r4,a
      00431F 74 02            [12]13254 	mov	a,#0x02
      004321 2A               [12]13255 	add	a,r2
      004322 FA               [12]13256 	mov	r2,a
      004323 74 00            [12]13257 	mov	a,#0x00
      004325 3B               [12]13258 	addc	a,r3
      004326 FB               [12]13259 	mov	r3,a
      004327 8A 82            [24]13260 	mov	dpl,r2
      004329 8B 83            [24]13261 	mov	dph,r3
      00432B 8C F0            [24]13262 	mov	b,r4
      00432D ED               [12]13263 	mov	a,r5
      00432E 12r00r00         [24]13264 	lcall	__gptrput
      004331 A3               [24]13265 	inc	dptr
      004332 EE               [12]13266 	mov	a,r6
      004333 12r00r00         [24]13267 	lcall	__gptrput
      004336 A3               [24]13268 	inc	dptr
      004337 EF               [12]13269 	mov	a,r7
      004338 12r00r00         [24]13270 	lcall	__gptrput
      00433B E5*00            [12]13271 	mov	a,_bp
      00433D 24 0A            [12]13272 	add	a,#0x0a
      00433F F8               [12]13273 	mov	r0,a
      004340 86 82            [24]13274 	mov	dpl,@r0
      004342 08               [12]13275 	inc	r0
      004343 86 83            [24]13276 	mov	dph,@r0
      004345 08               [12]13277 	inc	r0
      004346 86 F0            [24]13278 	mov	b,@r0
      004348 ED               [12]13279 	mov	a,r5
      004349 12r00r00         [24]13280 	lcall	__gptrput
      00434C A3               [24]13281 	inc	dptr
      00434D EE               [12]13282 	mov	a,r6
      00434E 12r00r00         [24]13283 	lcall	__gptrput
      004351 A3               [24]13284 	inc	dptr
      004352 EF               [12]13285 	mov	a,r7
      004353 12r00r00         [24]13286 	lcall	__gptrput
      004356 E5*00            [12]13287 	mov	a,_bp
      004358 24 04            [12]13288 	add	a,#0x04
      00435A F8               [12]13289 	mov	r0,a
      00435B 86 82            [24]13290 	mov	dpl,@r0
      00435D 08               [12]13291 	inc	r0
      00435E 86 83            [24]13292 	mov	dph,@r0
      004360 08               [12]13293 	inc	r0
      004361 86 F0            [24]13294 	mov	b,@r0
      004363 12r00r00         [24]13295 	lcall	__gptrget
      004366 FF               [12]13296 	mov	r7,a
      004367 EF               [12]13297 	mov	a,r7
      004368 75 F0 0C         [24]13298 	mov	b,#0x0c
      00436B A4               [48]13299 	mul	ab
      00436C 24r00            [12]13300 	add	a,#_pxReadyTasksLists
      00436E FE               [12]13301 	mov	r6,a
      00436F 74s00            [12]13302 	mov	a,#(_pxReadyTasksLists >> 8)
      004371 35 F0            [12]13303 	addc	a,b
      004373 FF               [12]13304 	mov	r7,a
      004374 7D 00            [12]13305 	mov	r5,#0x00
      004376 E5*00            [12]13306 	mov	a,_bp
      004378 24 0D            [12]13307 	add	a,#0x0d
      00437A F8               [12]13308 	mov	r0,a
      00437B 86 82            [24]13309 	mov	dpl,@r0
      00437D 08               [12]13310 	inc	r0
      00437E 86 83            [24]13311 	mov	dph,@r0
      004380 08               [12]13312 	inc	r0
      004381 86 F0            [24]13313 	mov	b,@r0
      004383 EE               [12]13314 	mov	a,r6
      004384 12r00r00         [24]13315 	lcall	__gptrput
      004387 A3               [24]13316 	inc	dptr
      004388 EF               [12]13317 	mov	a,r7
      004389 12r00r00         [24]13318 	lcall	__gptrput
      00438C A3               [24]13319 	inc	dptr
      00438D ED               [12]13320 	mov	a,r5
      00438E 12r00r00         [24]13321 	lcall	__gptrput
      004391 E5*00            [12]13322 	mov	a,_bp
      004393 24 04            [12]13323 	add	a,#0x04
      004395 F8               [12]13324 	mov	r0,a
      004396 86 82            [24]13325 	mov	dpl,@r0
      004398 08               [12]13326 	inc	r0
      004399 86 83            [24]13327 	mov	dph,@r0
      00439B 08               [12]13328 	inc	r0
      00439C 86 F0            [24]13329 	mov	b,@r0
      00439E 12r00r00         [24]13330 	lcall	__gptrget
      0043A1 FF               [12]13331 	mov	r7,a
      0043A2 EF               [12]13332 	mov	a,r7
      0043A3 75 F0 0C         [24]13333 	mov	b,#0x0c
      0043A6 A4               [48]13334 	mul	ab
      0043A7 24r00            [12]13335 	add	a,#_pxReadyTasksLists
      0043A9 FE               [12]13336 	mov	r6,a
      0043AA 74s00            [12]13337 	mov	a,#(_pxReadyTasksLists >> 8)
      0043AC 35 F0            [12]13338 	addc	a,b
      0043AE FF               [12]13339 	mov	r7,a
      0043AF 8E 82            [24]13340 	mov	dpl,r6
      0043B1 8F 83            [24]13341 	mov	dph,r7
      0043B3 E0               [24]13342 	movx	a,@dptr
      0043B4 FD               [12]13343 	mov	r5,a
      0043B5 0D               [12]13344 	inc	r5
      0043B6 8E 82            [24]13345 	mov	dpl,r6
      0043B8 8F 83            [24]13346 	mov	dph,r7
      0043BA ED               [12]13347 	mov	a,r5
      0043BB F0               [24]13348 	movx	@dptr,a
      0043BC 02r44rE0         [24]13349 	ljmp	00107$
      0043BF                      13350 00106$:
                           0043BF 13351 	C$tasks.c$5182$5_0$436 ==.
                                  13352 ;	tasks.c:5182: listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
      0043BF 90r00r4F         [24]13353 	mov	dptr,#(_xPendingReadyList + 0x0001)
      0043C2 E5*00            [12]13354 	mov	a,_bp
      0043C4 24 14            [12]13355 	add	a,#0x14
      0043C6 F8               [12]13356 	mov	r0,a
      0043C7 E0               [24]13357 	movx	a,@dptr
      0043C8 F6               [12]13358 	mov	@r0,a
      0043C9 A3               [24]13359 	inc	dptr
      0043CA E0               [24]13360 	movx	a,@dptr
      0043CB 08               [12]13361 	inc	r0
      0043CC F6               [12]13362 	mov	@r0,a
      0043CD A3               [24]13363 	inc	dptr
      0043CE E0               [24]13364 	movx	a,@dptr
      0043CF 08               [12]13365 	inc	r0
      0043D0 F6               [12]13366 	mov	@r0,a
      0043D1 A8*00            [24]13367 	mov	r0,_bp
      0043D3 08               [12]13368 	inc	r0
      0043D4 74 11            [12]13369 	mov	a,#0x11
      0043D6 26               [12]13370 	add	a,@r0
      0043D7 FA               [12]13371 	mov	r2,a
      0043D8 74 00            [12]13372 	mov	a,#0x00
      0043DA 08               [12]13373 	inc	r0
      0043DB 36               [12]13374 	addc	a,@r0
      0043DC FB               [12]13375 	mov	r3,a
      0043DD 08               [12]13376 	inc	r0
      0043DE 86 04            [24]13377 	mov	ar4,@r0
      0043E0 74 02            [12]13378 	mov	a,#0x02
      0043E2 2A               [12]13379 	add	a,r2
      0043E3 FD               [12]13380 	mov	r5,a
      0043E4 74 00            [12]13381 	mov	a,#0x00
      0043E6 3B               [12]13382 	addc	a,r3
      0043E7 FE               [12]13383 	mov	r6,a
      0043E8 8C 07            [24]13384 	mov	ar7,r4
      0043EA 8D 82            [24]13385 	mov	dpl,r5
      0043EC 8E 83            [24]13386 	mov	dph,r6
      0043EE 8F F0            [24]13387 	mov	b,r7
      0043F0 E5*00            [12]13388 	mov	a,_bp
      0043F2 24 14            [12]13389 	add	a,#0x14
      0043F4 F8               [12]13390 	mov	r0,a
      0043F5 E6               [12]13391 	mov	a,@r0
      0043F6 12r00r00         [24]13392 	lcall	__gptrput
      0043F9 A3               [24]13393 	inc	dptr
      0043FA 08               [12]13394 	inc	r0
      0043FB E6               [12]13395 	mov	a,@r0
      0043FC 12r00r00         [24]13396 	lcall	__gptrput
      0043FF A3               [24]13397 	inc	dptr
      004400 08               [12]13398 	inc	r0
      004401 E6               [12]13399 	mov	a,@r0
      004402 12r00r00         [24]13400 	lcall	__gptrput
      004405 E5*00            [12]13401 	mov	a,_bp
      004407 24 0A            [12]13402 	add	a,#0x0a
      004409 F8               [12]13403 	mov	r0,a
      00440A 74 05            [12]13404 	mov	a,#0x05
      00440C 2A               [12]13405 	add	a,r2
      00440D F6               [12]13406 	mov	@r0,a
      00440E 74 00            [12]13407 	mov	a,#0x00
      004410 3B               [12]13408 	addc	a,r3
      004411 08               [12]13409 	inc	r0
      004412 F6               [12]13410 	mov	@r0,a
      004413 08               [12]13411 	inc	r0
      004414 A6 04            [24]13412 	mov	@r0,ar4
      004416 E5*00            [12]13413 	mov	a,_bp
      004418 24 14            [12]13414 	add	a,#0x14
      00441A F8               [12]13415 	mov	r0,a
      00441B E5*00            [12]13416 	mov	a,_bp
      00441D 24 0D            [12]13417 	add	a,#0x0d
      00441F F9               [12]13418 	mov	r1,a
      004420 74 05            [12]13419 	mov	a,#0x05
      004422 26               [12]13420 	add	a,@r0
      004423 F7               [12]13421 	mov	@r1,a
      004424 74 00            [12]13422 	mov	a,#0x00
      004426 08               [12]13423 	inc	r0
      004427 36               [12]13424 	addc	a,@r0
      004428 09               [12]13425 	inc	r1
      004429 F7               [12]13426 	mov	@r1,a
      00442A 08               [12]13427 	inc	r0
      00442B E6               [12]13428 	mov	a,@r0
      00442C 09               [12]13429 	inc	r1
      00442D F7               [12]13430 	mov	@r1,a
      00442E E5*00            [12]13431 	mov	a,_bp
      004430 24 0D            [12]13432 	add	a,#0x0d
      004432 F8               [12]13433 	mov	r0,a
      004433 86 82            [24]13434 	mov	dpl,@r0
      004435 08               [12]13435 	inc	r0
      004436 86 83            [24]13436 	mov	dph,@r0
      004438 08               [12]13437 	inc	r0
      004439 86 F0            [24]13438 	mov	b,@r0
      00443B 12r00r00         [24]13439 	lcall	__gptrget
      00443E FD               [12]13440 	mov	r5,a
      00443F A3               [24]13441 	inc	dptr
      004440 12r00r00         [24]13442 	lcall	__gptrget
      004443 FE               [12]13443 	mov	r6,a
      004444 A3               [24]13444 	inc	dptr
      004445 12r00r00         [24]13445 	lcall	__gptrget
      004448 FF               [12]13446 	mov	r7,a
      004449 E5*00            [12]13447 	mov	a,_bp
      00444B 24 0A            [12]13448 	add	a,#0x0a
      00444D F8               [12]13449 	mov	r0,a
      00444E 86 82            [24]13450 	mov	dpl,@r0
      004450 08               [12]13451 	inc	r0
      004451 86 83            [24]13452 	mov	dph,@r0
      004453 08               [12]13453 	inc	r0
      004454 86 F0            [24]13454 	mov	b,@r0
      004456 ED               [12]13455 	mov	a,r5
      004457 12r00r00         [24]13456 	lcall	__gptrput
      00445A A3               [24]13457 	inc	dptr
      00445B EE               [12]13458 	mov	a,r6
      00445C 12r00r00         [24]13459 	lcall	__gptrput
      00445F A3               [24]13460 	inc	dptr
      004460 EF               [12]13461 	mov	a,r7
      004461 12r00r00         [24]13462 	lcall	__gptrput
      004464 E5*00            [12]13463 	mov	a,_bp
      004466 24 0D            [12]13464 	add	a,#0x0d
      004468 F8               [12]13465 	mov	r0,a
      004469 86 82            [24]13466 	mov	dpl,@r0
      00446B 08               [12]13467 	inc	r0
      00446C 86 83            [24]13468 	mov	dph,@r0
      00446E 08               [12]13469 	inc	r0
      00446F 86 F0            [24]13470 	mov	b,@r0
      004471 12r00r00         [24]13471 	lcall	__gptrget
      004474 FD               [12]13472 	mov	r5,a
      004475 A3               [24]13473 	inc	dptr
      004476 12r00r00         [24]13474 	lcall	__gptrget
      004479 FE               [12]13475 	mov	r6,a
      00447A A3               [24]13476 	inc	dptr
      00447B 12r00r00         [24]13477 	lcall	__gptrget
      00447E FF               [12]13478 	mov	r7,a
      00447F 74 02            [12]13479 	mov	a,#0x02
      004481 2D               [12]13480 	add	a,r5
      004482 FD               [12]13481 	mov	r5,a
      004483 74 00            [12]13482 	mov	a,#0x00
      004485 3E               [12]13483 	addc	a,r6
      004486 FE               [12]13484 	mov	r6,a
      004487 8D 82            [24]13485 	mov	dpl,r5
      004489 8E 83            [24]13486 	mov	dph,r6
      00448B 8F F0            [24]13487 	mov	b,r7
      00448D EA               [12]13488 	mov	a,r2
      00448E 12r00r00         [24]13489 	lcall	__gptrput
      004491 A3               [24]13490 	inc	dptr
      004492 EB               [12]13491 	mov	a,r3
      004493 12r00r00         [24]13492 	lcall	__gptrput
      004496 A3               [24]13493 	inc	dptr
      004497 EC               [12]13494 	mov	a,r4
      004498 12r00r00         [24]13495 	lcall	__gptrput
      00449B E5*00            [12]13496 	mov	a,_bp
      00449D 24 0D            [12]13497 	add	a,#0x0d
      00449F F8               [12]13498 	mov	r0,a
      0044A0 86 82            [24]13499 	mov	dpl,@r0
      0044A2 08               [12]13500 	inc	r0
      0044A3 86 83            [24]13501 	mov	dph,@r0
      0044A5 08               [12]13502 	inc	r0
      0044A6 86 F0            [24]13503 	mov	b,@r0
      0044A8 EA               [12]13504 	mov	a,r2
      0044A9 12r00r00         [24]13505 	lcall	__gptrput
      0044AC A3               [24]13506 	inc	dptr
      0044AD EB               [12]13507 	mov	a,r3
      0044AE 12r00r00         [24]13508 	lcall	__gptrput
      0044B1 A3               [24]13509 	inc	dptr
      0044B2 EC               [12]13510 	mov	a,r4
      0044B3 12r00r00         [24]13511 	lcall	__gptrput
      0044B6 74 0B            [12]13512 	mov	a,#0x0b
      0044B8 2A               [12]13513 	add	a,r2
      0044B9 FA               [12]13514 	mov	r2,a
      0044BA 74 00            [12]13515 	mov	a,#0x00
      0044BC 3B               [12]13516 	addc	a,r3
      0044BD FB               [12]13517 	mov	r3,a
      0044BE 8A 82            [24]13518 	mov	dpl,r2
      0044C0 8B 83            [24]13519 	mov	dph,r3
      0044C2 8C F0            [24]13520 	mov	b,r4
      0044C4 74r4E            [12]13521 	mov	a,#_xPendingReadyList
      0044C6 12r00r00         [24]13522 	lcall	__gptrput
      0044C9 A3               [24]13523 	inc	dptr
      0044CA 74s00            [12]13524 	mov	a,#(_xPendingReadyList >> 8)
      0044CC 12r00r00         [24]13525 	lcall	__gptrput
      0044CF A3               [24]13526 	inc	dptr
      0044D0 74 00            [12]13527 	mov	a,#0x00
      0044D2 12r00r00         [24]13528 	lcall	__gptrput
      0044D5 90r00r4E         [24]13529 	mov	dptr,#_xPendingReadyList
      0044D8 E0               [24]13530 	movx	a,@dptr
      0044D9 FF               [12]13531 	mov	r7,a
      0044DA 0F               [12]13532 	inc	r7
      0044DB 90r00r4E         [24]13533 	mov	dptr,#_xPendingReadyList
      0044DE EF               [12]13534 	mov	a,r7
      0044DF F0               [24]13535 	movx	@dptr,a
      0044E0                      13536 00107$:
                           0044E0 13537 	C$tasks.c$5185$3_0$428 ==.
                                  13538 ;	tasks.c:5185: if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
      0044E0 E5*00            [12]13539 	mov	a,_bp
      0044E2 24 10            [12]13540 	add	a,#0x10
      0044E4 F8               [12]13541 	mov	r0,a
      0044E5 74 1F            [12]13542 	mov	a,#0x1f
      0044E7 26               [12]13543 	add	a,@r0
      0044E8 FD               [12]13544 	mov	r5,a
      0044E9 74 00            [12]13545 	mov	a,#0x00
      0044EB 08               [12]13546 	inc	r0
      0044EC 36               [12]13547 	addc	a,@r0
      0044ED FE               [12]13548 	mov	r6,a
      0044EE 08               [12]13549 	inc	r0
      0044EF 86 07            [24]13550 	mov	ar7,@r0
      0044F1 8D 82            [24]13551 	mov	dpl,r5
      0044F3 8E 83            [24]13552 	mov	dph,r6
      0044F5 8F F0            [24]13553 	mov	b,r7
      0044F7 12r00r00         [24]13554 	lcall	__gptrget
      0044FA FD               [12]13555 	mov	r5,a
      0044FB 90r00r00         [24]13556 	mov	dptr,#_pxCurrentTCB
      0044FE E0               [24]13557 	movx	a,@dptr
      0044FF FC               [12]13558 	mov	r4,a
      004500 A3               [24]13559 	inc	dptr
      004501 E0               [24]13560 	movx	a,@dptr
      004502 FE               [12]13561 	mov	r6,a
      004503 A3               [24]13562 	inc	dptr
      004504 E0               [24]13563 	movx	a,@dptr
      004505 FF               [12]13564 	mov	r7,a
      004506 74 1F            [12]13565 	mov	a,#0x1f
      004508 2C               [12]13566 	add	a,r4
      004509 FC               [12]13567 	mov	r4,a
      00450A 74 00            [12]13568 	mov	a,#0x00
      00450C 3E               [12]13569 	addc	a,r6
      00450D FE               [12]13570 	mov	r6,a
      00450E 8C 82            [24]13571 	mov	dpl,r4
      004510 8E 83            [24]13572 	mov	dph,r6
      004512 8F F0            [24]13573 	mov	b,r7
      004514 12r00r00         [24]13574 	lcall	__gptrget
      004517 FC               [12]13575 	mov	r4,a
      004518 C3               [12]13576 	clr	c
      004519 EC               [12]13577 	mov	a,r4
      00451A 9D               [12]13578 	subb	a,r5
      00451B 40 03            [24]13579 	jc	00147$
      00451D 02r45r4B         [24]13580 	ljmp	00114$
      004520                      13581 00147$:
                           004520 13582 	C$tasks.c$5189$4_0$437 ==.
                                  13583 ;	tasks.c:5189: if( pxHigherPriorityTaskWoken != NULL )
      004520 E5*00            [12]13584 	mov	a,_bp
      004522 24 FA            [12]13585 	add	a,#0xfa
      004524 F8               [12]13586 	mov	r0,a
      004525 E6               [12]13587 	mov	a,@r0
      004526 08               [12]13588 	inc	r0
      004527 46               [12]13589 	orl	a,@r0
      004528 70 03            [24]13590 	jnz	00148$
      00452A 02r45r45         [24]13591 	ljmp	00109$
      00452D                      13592 00148$:
                           00452D 13593 	C$tasks.c$5191$5_0$438 ==.
                                  13594 ;	tasks.c:5191: *pxHigherPriorityTaskWoken = pdTRUE;
      00452D E5*00            [12]13595 	mov	a,_bp
      00452F 24 FA            [12]13596 	add	a,#0xfa
      004531 F8               [12]13597 	mov	r0,a
      004532 86 05            [24]13598 	mov	ar5,@r0
      004534 08               [12]13599 	inc	r0
      004535 86 06            [24]13600 	mov	ar6,@r0
      004537 08               [12]13601 	inc	r0
      004538 86 07            [24]13602 	mov	ar7,@r0
      00453A 8D 82            [24]13603 	mov	dpl,r5
      00453C 8E 83            [24]13604 	mov	dph,r6
      00453E 8F F0            [24]13605 	mov	b,r7
      004540 74 01            [12]13606 	mov	a,#0x01
      004542 12r00r00         [24]13607 	lcall	__gptrput
      004545                      13608 00109$:
                           004545 13609 	C$tasks.c$5197$4_0$437 ==.
                                  13610 ;	tasks.c:5197: xYieldPending = pdTRUE;
      004545 90r00r0B         [24]13611 	mov	dptr,#_xYieldPending
      004548 74 01            [12]13612 	mov	a,#0x01
      00454A F0               [24]13613 	movx	@dptr,a
                           00454B 13614 	C$tasks.c$5205$1_0$426 ==.
                                  13615 ;	tasks.c:5205: portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
      00454B                      13616 00114$:
                           00454B 13617 	C$tasks.c$5206$1_0$426 ==.
                                  13618 ;	tasks.c:5206: }
      00454B 85*00 81         [24]13619 	mov	sp,_bp
      00454E D0*00            [24]13620 	pop	_bp
                           004550 13621 	C$tasks.c$5206$1_0$426 ==.
                           004550 13622 	XG$vTaskGenericNotifyGiveFromISR$0$0 ==.
      004550 22               [24]13623 	ret
                                  13624 ;------------------------------------------------------------
                                  13625 ;Allocation info for local variables in function 'xTaskGenericNotifyStateClear'
                                  13626 ;------------------------------------------------------------
                                  13627 ;uxIndexToClear            Allocated to stack - _bp -3
                                  13628 ;xTask                     Allocated to registers r5 r6 r7 
                                  13629 ;pxTCB                     Allocated to registers r5 r6 r7 
                                  13630 ;xReturn                   Allocated to registers r7 
                                  13631 ;sloc0                     Allocated to stack - _bp +1
                                  13632 ;------------------------------------------------------------
                           004551 13633 	G$xTaskGenericNotifyStateClear$0$0 ==.
                           004551 13634 	C$tasks.c$5213$1_0$441 ==.
                                  13635 ;	tasks.c:5213: BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
                                  13636 ;	-----------------------------------------
                                  13637 ;	 function xTaskGenericNotifyStateClear
                                  13638 ;	-----------------------------------------
      004551                      13639 _xTaskGenericNotifyStateClear:
      004551 C0*00            [24]13640 	push	_bp
      004553 85 81*00         [24]13641 	mov	_bp,sp
      004556 05 81            [12]13642 	inc	sp
      004558 AD 82            [24]13643 	mov	r5,dpl
      00455A AE 83            [24]13644 	mov	r6,dph
      00455C AF F0            [24]13645 	mov	r7,b
                           00455E 13646 	C$tasks.c$5223$1_0$441 ==.
                                  13647 ;	tasks.c:5223: pxTCB = prvGetTCBFromHandle( xTask );
      00455E ED               [12]13648 	mov	a,r5
      00455F 4E               [12]13649 	orl	a,r6
      004560 60 03            [24]13650 	jz	00116$
      004562 02r45r73         [24]13651 	ljmp	00106$
      004565                      13652 00116$:
      004565 90r00r00         [24]13653 	mov	dptr,#_pxCurrentTCB
      004568 E0               [24]13654 	movx	a,@dptr
      004569 FA               [12]13655 	mov	r2,a
      00456A A3               [24]13656 	inc	dptr
      00456B E0               [24]13657 	movx	a,@dptr
      00456C FB               [12]13658 	mov	r3,a
      00456D A3               [24]13659 	inc	dptr
      00456E E0               [24]13660 	movx	a,@dptr
      00456F FC               [12]13661 	mov	r4,a
      004570 02r45r79         [24]13662 	ljmp	00107$
      004573                      13663 00106$:
      004573 8D 02            [24]13664 	mov	ar2,r5
      004575 8E 03            [24]13665 	mov	ar3,r6
      004577 8F 04            [24]13666 	mov	ar4,r7
      004579                      13667 00107$:
      004579 8A 05            [24]13668 	mov	ar5,r2
      00457B 8B 06            [24]13669 	mov	ar6,r3
      00457D 8C 07            [24]13670 	mov	ar7,r4
                           00457F 13671 	C$tasks.c$5225$1_0$441 ==.
                                  13672 ;	tasks.c:5225: taskENTER_CRITICAL();
      00457F C0 E0            [24]13673 	push ACC 
      004581 C0 A8            [24]13674 	push IE 
                                  13675 ;	assignBit
      004583 C2 AF            [12]13676 	clr	_EA
                           004585 13677 	C$tasks.c$5227$2_0$442 ==.
                                  13678 ;	tasks.c:5227: if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
      004585 74 32            [12]13679 	mov	a,#0x32
      004587 2D               [12]13680 	add	a,r5
      004588 FA               [12]13681 	mov	r2,a
      004589 74 00            [12]13682 	mov	a,#0x00
      00458B 3E               [12]13683 	addc	a,r6
      00458C FB               [12]13684 	mov	r3,a
      00458D 8F 04            [24]13685 	mov	ar4,r7
      00458F E5*00            [12]13686 	mov	a,_bp
      004591 24 FD            [12]13687 	add	a,#0xfd
      004593 F8               [12]13688 	mov	r0,a
      004594 A9*00            [24]13689 	mov	r1,_bp
      004596 09               [12]13690 	inc	r1
      004597 E6               [12]13691 	mov	a,@r0
      004598 F7               [12]13692 	mov	@r1,a
      004599 A8*00            [24]13693 	mov	r0,_bp
      00459B 08               [12]13694 	inc	r0
      00459C E6               [12]13695 	mov	a,@r0
      00459D 2A               [12]13696 	add	a,r2
      00459E FA               [12]13697 	mov	r2,a
      00459F 74 00            [12]13698 	mov	a,#0x00
      0045A1 3B               [12]13699 	addc	a,r3
      0045A2 FB               [12]13700 	mov	r3,a
      0045A3 8A 82            [24]13701 	mov	dpl,r2
      0045A5 8B 83            [24]13702 	mov	dph,r3
      0045A7 8C F0            [24]13703 	mov	b,r4
      0045A9 12r00r00         [24]13704 	lcall	__gptrget
      0045AC FA               [12]13705 	mov	r2,a
      0045AD BA 02 02         [24]13706 	cjne	r2,#0x02,00117$
      0045B0 80 03            [24]13707 	sjmp	00118$
      0045B2                      13708 00117$:
      0045B2 02r45rD7         [24]13709 	ljmp	00102$
      0045B5                      13710 00118$:
                           0045B5 13711 	C$tasks.c$5229$3_0$443 ==.
                                  13712 ;	tasks.c:5229: pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
      0045B5 74 32            [12]13713 	mov	a,#0x32
      0045B7 2D               [12]13714 	add	a,r5
      0045B8 FD               [12]13715 	mov	r5,a
      0045B9 74 00            [12]13716 	mov	a,#0x00
      0045BB 3E               [12]13717 	addc	a,r6
      0045BC FE               [12]13718 	mov	r6,a
      0045BD A8*00            [24]13719 	mov	r0,_bp
      0045BF 08               [12]13720 	inc	r0
      0045C0 E6               [12]13721 	mov	a,@r0
      0045C1 2D               [12]13722 	add	a,r5
      0045C2 FD               [12]13723 	mov	r5,a
      0045C3 74 00            [12]13724 	mov	a,#0x00
      0045C5 3E               [12]13725 	addc	a,r6
      0045C6 FE               [12]13726 	mov	r6,a
      0045C7 8D 82            [24]13727 	mov	dpl,r5
      0045C9 8E 83            [24]13728 	mov	dph,r6
      0045CB 8F F0            [24]13729 	mov	b,r7
      0045CD 74 00            [12]13730 	mov	a,#0x00
      0045CF 12r00r00         [24]13731 	lcall	__gptrput
                           0045D2 13732 	C$tasks.c$5230$3_0$443 ==.
                                  13733 ;	tasks.c:5230: xReturn = pdPASS;
      0045D2 7F 01            [12]13734 	mov	r7,#0x01
      0045D4 02r45rD9         [24]13735 	ljmp	00103$
      0045D7                      13736 00102$:
                           0045D7 13737 	C$tasks.c$5234$3_0$444 ==.
                                  13738 ;	tasks.c:5234: xReturn = pdFAIL;
      0045D7 7F 00            [12]13739 	mov	r7,#0x00
      0045D9                      13740 00103$:
                           0045D9 13741 	C$tasks.c$5237$1_0$441 ==.
                                  13742 ;	tasks.c:5237: taskEXIT_CRITICAL();
      0045D9 D0 E0            [24]13743 	pop ACC 
      0045DB 53 E0 80         [24]13744 	anl	_ACC,#0x80
      0045DE E5 E0            [12]13745 	mov	a,_ACC
      0045E0 42 A8            [12]13746 	orl	_IE,a
      0045E2 D0 E0            [24]13747 	pop ACC 
                           0045E4 13748 	C$tasks.c$5239$1_0$441 ==.
                                  13749 ;	tasks.c:5239: return xReturn;
      0045E4 8F 82            [24]13750 	mov	dpl,r7
      0045E6                      13751 00104$:
                           0045E6 13752 	C$tasks.c$5240$1_0$441 ==.
                                  13753 ;	tasks.c:5240: }
      0045E6 15 81            [12]13754 	dec	sp
      0045E8 D0*00            [24]13755 	pop	_bp
                           0045EA 13756 	C$tasks.c$5240$1_0$441 ==.
                           0045EA 13757 	XG$xTaskGenericNotifyStateClear$0$0 ==.
      0045EA 22               [24]13758 	ret
                                  13759 ;------------------------------------------------------------
                                  13760 ;Allocation info for local variables in function 'ulTaskGenericNotifyValueClear'
                                  13761 ;------------------------------------------------------------
                                  13762 ;uxIndexToClear            Allocated to stack - _bp -3
                                  13763 ;ulBitsToClear             Allocated to stack - _bp -7
                                  13764 ;xTask                     Allocated to registers r5 r6 r7 
                                  13765 ;pxTCB                     Allocated to registers r2 r3 r4 
                                  13766 ;ulReturn                  Allocated to stack - _bp +8
                                  13767 ;sloc0                     Allocated to stack - _bp +5
                                  13768 ;sloc1                     Allocated to stack - _bp +1
                                  13769 ;------------------------------------------------------------
                           0045EB 13770 	G$ulTaskGenericNotifyValueClear$0$0 ==.
                           0045EB 13771 	C$tasks.c$5247$1_0$446 ==.
                                  13772 ;	tasks.c:5247: uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
                                  13773 ;	-----------------------------------------
                                  13774 ;	 function ulTaskGenericNotifyValueClear
                                  13775 ;	-----------------------------------------
      0045EB                      13776 _ulTaskGenericNotifyValueClear:
      0045EB C0*00            [24]13777 	push	_bp
      0045ED 85 81*00         [24]13778 	mov	_bp,sp
      0045F0 E5 81            [12]13779 	mov	a,sp
      0045F2 24 0B            [12]13780 	add	a,#0x0b
      0045F4 F5 81            [12]13781 	mov	sp,a
      0045F6 AD 82            [24]13782 	mov	r5,dpl
      0045F8 AE 83            [24]13783 	mov	r6,dph
      0045FA AF F0            [24]13784 	mov	r7,b
                           0045FC 13785 	C$tasks.c$5256$1_0$446 ==.
                                  13786 ;	tasks.c:5256: pxTCB = prvGetTCBFromHandle( xTask );
      0045FC ED               [12]13787 	mov	a,r5
      0045FD 4E               [12]13788 	orl	a,r6
      0045FE 60 03            [24]13789 	jz	00109$
      004600 02r46r11         [24]13790 	ljmp	00103$
      004603                      13791 00109$:
      004603 90r00r00         [24]13792 	mov	dptr,#_pxCurrentTCB
      004606 E0               [24]13793 	movx	a,@dptr
      004607 FA               [12]13794 	mov	r2,a
      004608 A3               [24]13795 	inc	dptr
      004609 E0               [24]13796 	movx	a,@dptr
      00460A FB               [12]13797 	mov	r3,a
      00460B A3               [24]13798 	inc	dptr
      00460C E0               [24]13799 	movx	a,@dptr
      00460D FC               [12]13800 	mov	r4,a
      00460E 02r46r17         [24]13801 	ljmp	00104$
      004611                      13802 00103$:
      004611 8D 02            [24]13803 	mov	ar2,r5
      004613 8E 03            [24]13804 	mov	ar3,r6
      004615 8F 04            [24]13805 	mov	ar4,r7
      004617                      13806 00104$:
                           004617 13807 	C$tasks.c$5258$1_0$446 ==.
                                  13808 ;	tasks.c:5258: taskENTER_CRITICAL();
      004617 C0 E0            [24]13809 	push ACC 
      004619 C0 A8            [24]13810 	push IE 
                                  13811 ;	assignBit
      00461B C2 AF            [12]13812 	clr	_EA
                           00461D 13813 	C$tasks.c$5262$2_0$447 ==.
                                  13814 ;	tasks.c:5262: ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
      00461D 74 2E            [12]13815 	mov	a,#0x2e
      00461F 2A               [12]13816 	add	a,r2
      004620 FA               [12]13817 	mov	r2,a
      004621 74 00            [12]13818 	mov	a,#0x00
      004623 3B               [12]13819 	addc	a,r3
      004624 FB               [12]13820 	mov	r3,a
      004625 E5*00            [12]13821 	mov	a,_bp
      004627 24 FD            [12]13822 	add	a,#0xfd
      004629 F8               [12]13823 	mov	r0,a
      00462A E6               [12]13824 	mov	a,@r0
      00462B 25 E0            [12]13825 	add	a,acc
      00462D FF               [12]13826 	mov	r7,a
      00462E EF               [12]13827 	mov	a,r7
      00462F 25 E0            [12]13828 	add	a,acc
      004631 FF               [12]13829 	mov	r7,a
      004632 E5*00            [12]13830 	mov	a,_bp
      004634 24 05            [12]13831 	add	a,#0x05
      004636 F8               [12]13832 	mov	r0,a
      004637 EF               [12]13833 	mov	a,r7
      004638 2A               [12]13834 	add	a,r2
      004639 F6               [12]13835 	mov	@r0,a
      00463A 74 00            [12]13836 	mov	a,#0x00
      00463C 3B               [12]13837 	addc	a,r3
      00463D 08               [12]13838 	inc	r0
      00463E F6               [12]13839 	mov	@r0,a
      00463F 08               [12]13840 	inc	r0
      004640 A6 04            [24]13841 	mov	@r0,ar4
      004642 E5*00            [12]13842 	mov	a,_bp
      004644 24 05            [12]13843 	add	a,#0x05
      004646 F8               [12]13844 	mov	r0,a
      004647 86 82            [24]13845 	mov	dpl,@r0
      004649 08               [12]13846 	inc	r0
      00464A 86 83            [24]13847 	mov	dph,@r0
      00464C 08               [12]13848 	inc	r0
      00464D 86 F0            [24]13849 	mov	b,@r0
      00464F E5*00            [12]13850 	mov	a,_bp
      004651 24 08            [12]13851 	add	a,#0x08
      004653 F9               [12]13852 	mov	r1,a
      004654 12r00r00         [24]13853 	lcall	__gptrget
      004657 F7               [12]13854 	mov	@r1,a
      004658 A3               [24]13855 	inc	dptr
      004659 12r00r00         [24]13856 	lcall	__gptrget
      00465C 09               [12]13857 	inc	r1
      00465D F7               [12]13858 	mov	@r1,a
      00465E A3               [24]13859 	inc	dptr
      00465F 12r00r00         [24]13860 	lcall	__gptrget
      004662 09               [12]13861 	inc	r1
      004663 F7               [12]13862 	mov	@r1,a
      004664 A3               [24]13863 	inc	dptr
      004665 12r00r00         [24]13864 	lcall	__gptrget
      004668 09               [12]13865 	inc	r1
      004669 F7               [12]13866 	mov	@r1,a
                           00466A 13867 	C$tasks.c$5263$2_0$447 ==.
                                  13868 ;	tasks.c:5263: pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
      00466A E5*00            [12]13869 	mov	a,_bp
      00466C 24 F9            [12]13870 	add	a,#0xf9
      00466E F8               [12]13871 	mov	r0,a
      00466F A9*00            [24]13872 	mov	r1,_bp
      004671 09               [12]13873 	inc	r1
      004672 E6               [12]13874 	mov	a,@r0
      004673 F4               [12]13875 	cpl	a
      004674 F7               [12]13876 	mov	@r1,a
      004675 08               [12]13877 	inc	r0
      004676 E6               [12]13878 	mov	a,@r0
      004677 F4               [12]13879 	cpl	a
      004678 09               [12]13880 	inc	r1
      004679 F7               [12]13881 	mov	@r1,a
      00467A 08               [12]13882 	inc	r0
      00467B E6               [12]13883 	mov	a,@r0
      00467C F4               [12]13884 	cpl	a
      00467D 09               [12]13885 	inc	r1
      00467E F7               [12]13886 	mov	@r1,a
      00467F 08               [12]13887 	inc	r0
      004680 E6               [12]13888 	mov	a,@r0
      004681 F4               [12]13889 	cpl	a
      004682 09               [12]13890 	inc	r1
      004683 F7               [12]13891 	mov	@r1,a
      004684 E5*00            [12]13892 	mov	a,_bp
      004686 24 05            [12]13893 	add	a,#0x05
      004688 F8               [12]13894 	mov	r0,a
      004689 86 82            [24]13895 	mov	dpl,@r0
      00468B 08               [12]13896 	inc	r0
      00468C 86 83            [24]13897 	mov	dph,@r0
      00468E 08               [12]13898 	inc	r0
      00468F 86 F0            [24]13899 	mov	b,@r0
      004691 12r00r00         [24]13900 	lcall	__gptrget
      004694 FA               [12]13901 	mov	r2,a
      004695 A3               [24]13902 	inc	dptr
      004696 12r00r00         [24]13903 	lcall	__gptrget
      004699 FB               [12]13904 	mov	r3,a
      00469A A3               [24]13905 	inc	dptr
      00469B 12r00r00         [24]13906 	lcall	__gptrget
      00469E FE               [12]13907 	mov	r6,a
      00469F A3               [24]13908 	inc	dptr
      0046A0 12r00r00         [24]13909 	lcall	__gptrget
      0046A3 FF               [12]13910 	mov	r7,a
      0046A4 A8*00            [24]13911 	mov	r0,_bp
      0046A6 08               [12]13912 	inc	r0
      0046A7 E6               [12]13913 	mov	a,@r0
      0046A8 52 02            [12]13914 	anl	ar2,a
      0046AA 08               [12]13915 	inc	r0
      0046AB E6               [12]13916 	mov	a,@r0
      0046AC 52 03            [12]13917 	anl	ar3,a
      0046AE 08               [12]13918 	inc	r0
      0046AF E6               [12]13919 	mov	a,@r0
      0046B0 52 06            [12]13920 	anl	ar6,a
      0046B2 08               [12]13921 	inc	r0
      0046B3 E6               [12]13922 	mov	a,@r0
      0046B4 52 07            [12]13923 	anl	ar7,a
      0046B6 E5*00            [12]13924 	mov	a,_bp
      0046B8 24 05            [12]13925 	add	a,#0x05
      0046BA F8               [12]13926 	mov	r0,a
      0046BB 86 82            [24]13927 	mov	dpl,@r0
      0046BD 08               [12]13928 	inc	r0
      0046BE 86 83            [24]13929 	mov	dph,@r0
      0046C0 08               [12]13930 	inc	r0
      0046C1 86 F0            [24]13931 	mov	b,@r0
      0046C3 EA               [12]13932 	mov	a,r2
      0046C4 12r00r00         [24]13933 	lcall	__gptrput
      0046C7 A3               [24]13934 	inc	dptr
      0046C8 EB               [12]13935 	mov	a,r3
      0046C9 12r00r00         [24]13936 	lcall	__gptrput
      0046CC A3               [24]13937 	inc	dptr
      0046CD EE               [12]13938 	mov	a,r6
      0046CE 12r00r00         [24]13939 	lcall	__gptrput
      0046D1 A3               [24]13940 	inc	dptr
      0046D2 EF               [12]13941 	mov	a,r7
      0046D3 12r00r00         [24]13942 	lcall	__gptrput
                           0046D6 13943 	C$tasks.c$5265$1_0$446 ==.
                                  13944 ;	tasks.c:5265: taskEXIT_CRITICAL();
      0046D6 D0 E0            [24]13945 	pop ACC 
      0046D8 53 E0 80         [24]13946 	anl	_ACC,#0x80
      0046DB E5 E0            [12]13947 	mov	a,_ACC
      0046DD 42 A8            [12]13948 	orl	_IE,a
      0046DF D0 E0            [24]13949 	pop ACC 
                           0046E1 13950 	C$tasks.c$5267$1_0$446 ==.
                                  13951 ;	tasks.c:5267: return ulReturn;
      0046E1 E5*00            [12]13952 	mov	a,_bp
      0046E3 24 08            [12]13953 	add	a,#0x08
      0046E5 F8               [12]13954 	mov	r0,a
      0046E6 86 82            [24]13955 	mov	dpl,@r0
      0046E8 08               [12]13956 	inc	r0
      0046E9 86 83            [24]13957 	mov	dph,@r0
      0046EB 08               [12]13958 	inc	r0
      0046EC 86 F0            [24]13959 	mov	b,@r0
      0046EE 08               [12]13960 	inc	r0
      0046EF E6               [12]13961 	mov	a,@r0
      0046F0                      13962 00101$:
                           0046F0 13963 	C$tasks.c$5268$1_0$446 ==.
                                  13964 ;	tasks.c:5268: }
      0046F0 85*00 81         [24]13965 	mov	sp,_bp
      0046F3 D0*00            [24]13966 	pop	_bp
                           0046F5 13967 	C$tasks.c$5268$1_0$446 ==.
                           0046F5 13968 	XG$ulTaskGenericNotifyValueClear$0$0 ==.
      0046F5 22               [24]13969 	ret
                                  13970 ;------------------------------------------------------------
                                  13971 ;Allocation info for local variables in function 'prvAddCurrentTaskToDelayedList'
                                  13972 ;------------------------------------------------------------
                                  13973 ;xCanBlockIndefinitely     Allocated to stack - _bp -3
                                  13974 ;xTicksToWait              Allocated to stack - _bp +1
                                  13975 ;xTimeToWake               Allocated to stack - _bp +3
                                  13976 ;xConstTickCount           Allocated to stack - _bp +5
                                  13977 ;sloc0                     Allocated to stack - _bp +7
                                  13978 ;------------------------------------------------------------
                           0046F6 13979 	Ftasks$prvAddCurrentTaskToDelayedList$0$0 ==.
                           0046F6 13980 	C$tasks.c$5310$1_0$449 ==.
                                  13981 ;	tasks.c:5310: static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                  13982 ;	-----------------------------------------
                                  13983 ;	 function prvAddCurrentTaskToDelayedList
                                  13984 ;	-----------------------------------------
      0046F6                      13985 _prvAddCurrentTaskToDelayedList:
      0046F6 C0*00            [24]13986 	push	_bp
      0046F8 85 81*00         [24]13987 	mov	_bp,sp
      0046FB C0 82            [24]13988 	push	dpl
      0046FD C0 83            [24]13989 	push	dph
      0046FF E5 81            [12]13990 	mov	a,sp
      004701 24 04            [12]13991 	add	a,#0x04
      004703 F5 81            [12]13992 	mov	sp,a
                           004705 13993 	C$tasks.c$5314$2_0$449 ==.
                                  13994 ;	tasks.c:5314: const TickType_t xConstTickCount = xTickCount;
      004705 90r00r05         [24]13995 	mov	dptr,#_xTickCount
      004708 E0               [24]13996 	movx	a,@dptr
      004709 FC               [12]13997 	mov	r4,a
      00470A A3               [24]13998 	inc	dptr
      00470B E0               [24]13999 	movx	a,@dptr
      00470C FD               [12]14000 	mov	r5,a
      00470D E5*00            [12]14001 	mov	a,_bp
      00470F 24 05            [12]14002 	add	a,#0x05
      004711 F8               [12]14003 	mov	r0,a
      004712 A6 04            [24]14004 	mov	@r0,ar4
      004714 08               [12]14005 	inc	r0
      004715 A6 05            [24]14006 	mov	@r0,ar5
                           004717 14007 	C$tasks.c$5327$1_0$449 ==.
                                  14008 ;	tasks.c:5327: if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
      004717 90r00r00         [24]14009 	mov	dptr,#_pxCurrentTCB
      00471A E0               [24]14010 	movx	a,@dptr
      00471B FA               [12]14011 	mov	r2,a
      00471C A3               [24]14012 	inc	dptr
      00471D E0               [24]14013 	movx	a,@dptr
      00471E FB               [12]14014 	mov	r3,a
      00471F A3               [24]14015 	inc	dptr
      004720 E0               [24]14016 	movx	a,@dptr
      004721 FF               [12]14017 	mov	r7,a
      004722 74 03            [12]14018 	mov	a,#0x03
      004724 2A               [12]14019 	add	a,r2
      004725 FA               [12]14020 	mov	r2,a
      004726 74 00            [12]14021 	mov	a,#0x00
      004728 3B               [12]14022 	addc	a,r3
      004729 FB               [12]14023 	mov	r3,a
      00472A 8A 82            [24]14024 	mov	dpl,r2
      00472C 8B 83            [24]14025 	mov	dph,r3
      00472E 8F F0            [24]14026 	mov	b,r7
      004730 12r00r00         [24]14027 	lcall	_uxListRemove
                           004733 14028 	C$tasks.c$5388$2_0$452 ==.
                                  14029 ;	tasks.c:5388: xTimeToWake = xConstTickCount + xTicksToWait;
      004733 E5*00            [12]14030 	mov	a,_bp
      004735 24 05            [12]14031 	add	a,#0x05
      004737 F8               [12]14032 	mov	r0,a
      004738 A9*00            [24]14033 	mov	r1,_bp
      00473A 09               [12]14034 	inc	r1
      00473B E7               [12]14035 	mov	a,@r1
      00473C 26               [12]14036 	add	a,@r0
      00473D FE               [12]14037 	mov	r6,a
      00473E 09               [12]14038 	inc	r1
      00473F E7               [12]14039 	mov	a,@r1
      004740 08               [12]14040 	inc	r0
      004741 36               [12]14041 	addc	a,@r0
      004742 FF               [12]14042 	mov	r7,a
      004743 E5*00            [12]14043 	mov	a,_bp
      004745 24 03            [12]14044 	add	a,#0x03
      004747 F8               [12]14045 	mov	r0,a
      004748 A6 06            [24]14046 	mov	@r0,ar6
      00474A 08               [12]14047 	inc	r0
      00474B A6 07            [24]14048 	mov	@r0,ar7
                           00474D 14049 	C$tasks.c$5391$2_0$452 ==.
                                  14050 ;	tasks.c:5391: listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
      00474D 90r00r00         [24]14051 	mov	dptr,#_pxCurrentTCB
      004750 E0               [24]14052 	movx	a,@dptr
      004751 FA               [12]14053 	mov	r2,a
      004752 A3               [24]14054 	inc	dptr
      004753 E0               [24]14055 	movx	a,@dptr
      004754 FB               [12]14056 	mov	r3,a
      004755 A3               [24]14057 	inc	dptr
      004756 E0               [24]14058 	movx	a,@dptr
      004757 FD               [12]14059 	mov	r5,a
      004758 74 03            [12]14060 	mov	a,#0x03
      00475A 2A               [12]14061 	add	a,r2
      00475B FA               [12]14062 	mov	r2,a
      00475C 74 00            [12]14063 	mov	a,#0x00
      00475E 3B               [12]14064 	addc	a,r3
      00475F FB               [12]14065 	mov	r3,a
      004760 8A 82            [24]14066 	mov	dpl,r2
      004762 8B 83            [24]14067 	mov	dph,r3
      004764 8D F0            [24]14068 	mov	b,r5
      004766 E5*00            [12]14069 	mov	a,_bp
      004768 24 03            [12]14070 	add	a,#0x03
      00476A F8               [12]14071 	mov	r0,a
      00476B E6               [12]14072 	mov	a,@r0
      00476C 12r00r00         [24]14073 	lcall	__gptrput
      00476F A3               [24]14074 	inc	dptr
      004770 08               [12]14075 	inc	r0
      004771 E6               [12]14076 	mov	a,@r0
      004772 12r00r00         [24]14077 	lcall	__gptrput
                           004775 14078 	C$tasks.c$5393$2_0$452 ==.
                                  14079 ;	tasks.c:5393: if( xTimeToWake < xConstTickCount )
      004775 E5*00            [12]14080 	mov	a,_bp
      004777 24 03            [12]14081 	add	a,#0x03
      004779 F8               [12]14082 	mov	r0,a
      00477A E5*00            [12]14083 	mov	a,_bp
      00477C 24 05            [12]14084 	add	a,#0x05
      00477E F9               [12]14085 	mov	r1,a
      00477F C3               [12]14086 	clr	c
      004780 E6               [12]14087 	mov	a,@r0
      004781 97               [12]14088 	subb	a,@r1
      004782 08               [12]14089 	inc	r0
      004783 E6               [12]14090 	mov	a,@r0
      004784 09               [12]14091 	inc	r1
      004785 97               [12]14092 	subb	a,@r1
      004786 40 03            [24]14093 	jc	00118$
      004788 02r47rC3         [24]14094 	ljmp	00106$
      00478B                      14095 00118$:
                           00478B 14096 	C$tasks.c$5396$3_0$453 ==.
                                  14097 ;	tasks.c:5396: vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
      00478B 90r00r00         [24]14098 	mov	dptr,#_pxCurrentTCB
      00478E E0               [24]14099 	movx	a,@dptr
      00478F FB               [12]14100 	mov	r3,a
      004790 A3               [24]14101 	inc	dptr
      004791 E0               [24]14102 	movx	a,@dptr
      004792 FC               [12]14103 	mov	r4,a
      004793 A3               [24]14104 	inc	dptr
      004794 E0               [24]14105 	movx	a,@dptr
      004795 FD               [12]14106 	mov	r5,a
      004796 74 03            [12]14107 	mov	a,#0x03
      004798 2B               [12]14108 	add	a,r3
      004799 FB               [12]14109 	mov	r3,a
      00479A 74 00            [12]14110 	mov	a,#0x00
      00479C 3C               [12]14111 	addc	a,r4
      00479D FE               [12]14112 	mov	r6,a
      00479E 8D 07            [24]14113 	mov	ar7,r5
      0047A0 90r00r4B         [24]14114 	mov	dptr,#_pxOverflowDelayedTaskList
      0047A3 E0               [24]14115 	movx	a,@dptr
      0047A4 FA               [12]14116 	mov	r2,a
      0047A5 A3               [24]14117 	inc	dptr
      0047A6 E0               [24]14118 	movx	a,@dptr
      0047A7 FC               [12]14119 	mov	r4,a
      0047A8 A3               [24]14120 	inc	dptr
      0047A9 E0               [24]14121 	movx	a,@dptr
      0047AA FD               [12]14122 	mov	r5,a
      0047AB C0 03            [24]14123 	push	ar3
      0047AD C0 06            [24]14124 	push	ar6
      0047AF C0 07            [24]14125 	push	ar7
      0047B1 8A 82            [24]14126 	mov	dpl,r2
      0047B3 8C 83            [24]14127 	mov	dph,r4
      0047B5 8D F0            [24]14128 	mov	b,r5
      0047B7 12r00r00         [24]14129 	lcall	_vListInsert
      0047BA 15 81            [12]14130 	dec	sp
      0047BC 15 81            [12]14131 	dec	sp
      0047BE 15 81            [12]14132 	dec	sp
      0047C0 02r48r1C         [24]14133 	ljmp	00108$
      0047C3                      14134 00106$:
                           0047C3 14135 	C$tasks.c$5401$3_0$454 ==.
                                  14136 ;	tasks.c:5401: vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
      0047C3 90r00r00         [24]14137 	mov	dptr,#_pxCurrentTCB
      0047C6 E0               [24]14138 	movx	a,@dptr
      0047C7 FB               [12]14139 	mov	r3,a
      0047C8 A3               [24]14140 	inc	dptr
      0047C9 E0               [24]14141 	movx	a,@dptr
      0047CA FC               [12]14142 	mov	r4,a
      0047CB A3               [24]14143 	inc	dptr
      0047CC E0               [24]14144 	movx	a,@dptr
      0047CD FD               [12]14145 	mov	r5,a
      0047CE 74 03            [12]14146 	mov	a,#0x03
      0047D0 2B               [12]14147 	add	a,r3
      0047D1 FB               [12]14148 	mov	r3,a
      0047D2 74 00            [12]14149 	mov	a,#0x00
      0047D4 3C               [12]14150 	addc	a,r4
      0047D5 FC               [12]14151 	mov	r4,a
      0047D6 90r00r48         [24]14152 	mov	dptr,#_pxDelayedTaskList
      0047D9 E0               [24]14153 	movx	a,@dptr
      0047DA FA               [12]14154 	mov	r2,a
      0047DB A3               [24]14155 	inc	dptr
      0047DC E0               [24]14156 	movx	a,@dptr
      0047DD FE               [12]14157 	mov	r6,a
      0047DE A3               [24]14158 	inc	dptr
      0047DF E0               [24]14159 	movx	a,@dptr
      0047E0 FF               [12]14160 	mov	r7,a
      0047E1 C0 03            [24]14161 	push	ar3
      0047E3 C0 04            [24]14162 	push	ar4
      0047E5 C0 05            [24]14163 	push	ar5
      0047E7 8A 82            [24]14164 	mov	dpl,r2
      0047E9 8E 83            [24]14165 	mov	dph,r6
      0047EB 8F F0            [24]14166 	mov	b,r7
      0047ED 12r00r00         [24]14167 	lcall	_vListInsert
      0047F0 15 81            [12]14168 	dec	sp
      0047F2 15 81            [12]14169 	dec	sp
      0047F4 15 81            [12]14170 	dec	sp
                           0047F6 14171 	C$tasks.c$5406$3_0$454 ==.
                                  14172 ;	tasks.c:5406: if( xTimeToWake < xNextTaskUnblockTime )
      0047F6 90r00r0E         [24]14173 	mov	dptr,#_xNextTaskUnblockTime
      0047F9 E0               [24]14174 	movx	a,@dptr
      0047FA FE               [12]14175 	mov	r6,a
      0047FB A3               [24]14176 	inc	dptr
      0047FC E0               [24]14177 	movx	a,@dptr
      0047FD FF               [12]14178 	mov	r7,a
      0047FE E5*00            [12]14179 	mov	a,_bp
      004800 24 03            [12]14180 	add	a,#0x03
      004802 F8               [12]14181 	mov	r0,a
      004803 C3               [12]14182 	clr	c
      004804 E6               [12]14183 	mov	a,@r0
      004805 9E               [12]14184 	subb	a,r6
      004806 08               [12]14185 	inc	r0
      004807 E6               [12]14186 	mov	a,@r0
      004808 9F               [12]14187 	subb	a,r7
      004809 40 03            [24]14188 	jc	00119$
      00480B 02r48r1C         [24]14189 	ljmp	00108$
      00480E                      14190 00119$:
                           00480E 14191 	C$tasks.c$5408$4_0$455 ==.
                                  14192 ;	tasks.c:5408: xNextTaskUnblockTime = xTimeToWake;
      00480E E5*00            [12]14193 	mov	a,_bp
      004810 24 03            [12]14194 	add	a,#0x03
      004812 F8               [12]14195 	mov	r0,a
      004813 90r00r0E         [24]14196 	mov	dptr,#_xNextTaskUnblockTime
      004816 E6               [12]14197 	mov	a,@r0
      004817 F0               [24]14198 	movx	@dptr,a
      004818 08               [12]14199 	inc	r0
      004819 E6               [12]14200 	mov	a,@r0
      00481A A3               [24]14201 	inc	dptr
      00481B F0               [24]14202 	movx	@dptr,a
                           00481C 14203 	C$tasks.c$5417$2_0$449 ==.
                                  14204 ;	tasks.c:5417: ( void ) xCanBlockIndefinitely;
      00481C                      14205 00108$:
                           00481C 14206 	C$tasks.c$5420$2_0$449 ==.
                                  14207 ;	tasks.c:5420: }
      00481C 85*00 81         [24]14208 	mov	sp,_bp
      00481F D0*00            [24]14209 	pop	_bp
                           004821 14210 	C$tasks.c$5420$2_0$449 ==.
                           004821 14211 	XFtasks$prvAddCurrentTaskToDelayedList$0$0 ==.
      004821 22               [24]14212 	ret
                                  14213 	.area CSEG    (CODE)
                                  14214 	.area CONST   (CODE)
                           000000 14215 G$uxTopUsedPriority$0_0$0 == .
      000000                      14216 _uxTopUsedPriority:
      000000 03                   14217 	.db #0x03	; 3
                           000001 14218 Ftasks$__str_0$0_0$0 == .
                                  14219 	.area CONST   (CODE)
      000001                      14220 ___str_0:
      000001 49 44 4C 45          14221 	.ascii "IDLE"
      000005 00                   14222 	.db 0x00
                                  14223 	.area CSEG    (CODE)
                                  14224 	.area XINIT   (CODE)
                           000000 14225 Ftasks$__xinit_pxCurrentTCB$0_0$0 == .
      000000                      14226 __xinit__pxCurrentTCB:
                                  14227 ; generic printIvalPtr
      000000 00 00 00             14228 	.byte #0x00,#0x00,#0x00
                           000003 14229 Ftasks$__xinit_uxDeletedTasksWaitingCleanUp$0_0$0 == .
      000003                      14230 __xinit__uxDeletedTasksWaitingCleanUp:
      000003 00                   14231 	.db #0x00	; 0
                           000004 14232 Ftasks$__xinit_uxCurrentNumberOfTasks$0_0$0 == .
      000004                      14233 __xinit__uxCurrentNumberOfTasks:
      000004 00                   14234 	.db #0x00	; 0
                           000005 14235 Ftasks$__xinit_xTickCount$0_0$0 == .
      000005                      14236 __xinit__xTickCount:
      000005 00 00                14237 	.byte #0x00, #0x00	; 0
                           000007 14238 Ftasks$__xinit_uxTopReadyPriority$0_0$0 == .
      000007                      14239 __xinit__uxTopReadyPriority:
      000007 00                   14240 	.db #0x00	; 0
                           000008 14241 Ftasks$__xinit_xSchedulerRunning$0_0$0 == .
      000008                      14242 __xinit__xSchedulerRunning:
      000008 00                   14243 	.db #0x00	;  0
                           000009 14244 Ftasks$__xinit_xPendedTicks$0_0$0 == .
      000009                      14245 __xinit__xPendedTicks:
      000009 00 00                14246 	.byte #0x00, #0x00	; 0
                           00000B 14247 Ftasks$__xinit_xYieldPending$0_0$0 == .
      00000B                      14248 __xinit__xYieldPending:
      00000B 00                   14249 	.db #0x00	;  0
                           00000C 14250 Ftasks$__xinit_xNumOfOverflows$0_0$0 == .
      00000C                      14251 __xinit__xNumOfOverflows:
      00000C 00                   14252 	.db #0x00	;  0
                           00000D 14253 Ftasks$__xinit_uxTaskNumber$0_0$0 == .
      00000D                      14254 __xinit__uxTaskNumber:
      00000D 00                   14255 	.db #0x00	; 0
                           00000E 14256 Ftasks$__xinit_xNextTaskUnblockTime$0_0$0 == .
      00000E                      14257 __xinit__xNextTaskUnblockTime:
      00000E 00 00                14258 	.byte #0x00, #0x00	; 0
                           000010 14259 Ftasks$__xinit_xIdleTaskHandle$0_0$0 == .
      000010                      14260 __xinit__xIdleTaskHandle:
                                  14261 ; generic printIvalPtr
      000010 00 00 00             14262 	.byte #0x00,#0x00,#0x00
                           000013 14263 Ftasks$__xinit_uxSchedulerSuspended$0_0$0 == .
      000013                      14264 __xinit__uxSchedulerSuspended:
      000013 00                   14265 	.db #0x00	; 0
                                  14266 	.area CABS    (ABS,CODE)
